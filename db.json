{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/miccall/source/css/dropdownMenu.css","path":"css/dropdownMenu.css","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/font-awesome.min.css","path":"css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/backcss.css","path":"css/backcss.css","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/gallery.css","path":"css/gallery.css","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/gallery.min.css","path":"css/gallery.min.css","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/item.css","path":"css/item.css","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/mic_gallery.css","path":"css/mic_gallery.css","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/my_link.css","path":"css/my_link.css","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/prism_coy.css","path":"css/prism_coy.css","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/ok_prism.css","path":"css/ok_prism.css","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/noscript.css","path":"css/noscript.css","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/prism.css","path":"css/prism.css","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/prism_dark.css","path":"css/prism_dark.css","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/prism_default.css","path":"css/prism_default.css","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/prism_funky.css","path":"css/prism_funky.css","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/typo.css","path":"css/typo.css","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/prism_okaidia.css","path":"css/prism_okaidia.css","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/prism_solarized.css","path":"css/prism_solarized.css","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/prism_twilight.css","path":"css/prism_twilight.css","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/12.jpg","path":"images/12.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/3123.jpg","path":"images/3123.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/bg1.jpg","path":"images/bg1.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/me.jpg","path":"images/me.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/bg (2).jpg","path":"images/bg (2).jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/pic01.jpg","path":"images/pic01.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/pic03.jpg","path":"images/pic03.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/overlay.png","path":"images/overlay.png","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/pic02.jpg","path":"images/pic02.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/pic04.jpg","path":"images/pic04.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/pic05.jpg","path":"images/pic05.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/pic06.jpg","path":"images/pic06.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/pic08.jpg","path":"images/pic08.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/pic07.jpg","path":"images/pic07.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/pic09.jpg","path":"images/pic09.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/pic10.jpg","path":"images/pic10.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/pic11.jpg","path":"images/pic11.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/pic12.jpg","path":"images/pic12.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/picx03.jpg","path":"images/picx03.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/js/jquery.scrolly.min.js","path":"js/jquery.scrolly.min.js","modified":0,"renderable":1},{"_id":"themes/miccall/source/js/jquery.scrollex.min.js","path":"js/jquery.scrollex.min.js","modified":0,"renderable":1},{"_id":"themes/miccall/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/miccall/source/js/skel.min.js","path":"js/skel.min.js","modified":0,"renderable":1},{"_id":"themes/miccall/source/js/gallery_skel.min.js","path":"js/gallery_skel.min.js","modified":0,"renderable":1},{"_id":"themes/miccall/source/js/util.js","path":"js/util.js","modified":0,"renderable":1},{"_id":"themes/miccall/source/js/lazyload.min.js","path":"js/lazyload.min.js","modified":0,"renderable":1},{"_id":"themes/miccall/source/js/mic_gallery.js","path":"js/mic_gallery.js","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/mic_main.css","path":"css/mic_main.css","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/logo.png","path":"images/logo.png","modified":0,"renderable":1},{"_id":"themes/miccall/source/fonts/fontawesome-webfont.eot","path":"fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/miccall/source/fonts/FontAwesome.otf","path":"fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/miccall/source/fonts/fontawesome-webfont.woff2","path":"fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/miccall/source/img/logo_miccall.png","path":"img/logo_miccall.png","modified":0,"renderable":1},{"_id":"themes/miccall/source/js/jquery.min.js","path":"js/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/miccall/source/fonts/fontawesome-webfont.woff","path":"fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/images/close-small-alt.svg","path":"css/images/close-small-alt.svg","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/images/arrow.svg","path":"css/images/arrow.svg","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/images/close.svg","path":"css/images/close.svg","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/images/open-small.svg","path":"css/images/open-small.svg","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/images/arrow-small.svg","path":"css/images/arrow-small.svg","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/images/open.svg","path":"css/images/open.svg","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/images/spinner.svg","path":"css/images/spinner.svg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/fulls/01.jpg","path":"images/fulls/01.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/fulls/02.jpg","path":"images/fulls/02.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/css/images/close-small.svg","path":"css/images/close-small.svg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/fulls/03.jpg","path":"images/fulls/03.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/fulls/04.jpg","path":"images/fulls/04.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/fulls/05.jpg","path":"images/fulls/05.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/fulls/06.jpg","path":"images/fulls/06.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/fulls/07.jpg","path":"images/fulls/07.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/fulls/08.jpg","path":"images/fulls/08.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/fulls/09.jpg","path":"images/fulls/09.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/fulls/11.jpg","path":"images/fulls/11.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/fulls/12.jpg","path":"images/fulls/12.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/thumbs/02.jpg","path":"images/thumbs/02.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/thumbs/03.jpg","path":"images/thumbs/03.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/thumbs/01.jpg","path":"images/thumbs/01.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/thumbs/06.jpg","path":"images/thumbs/06.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/thumbs/07.jpg","path":"images/thumbs/07.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/thumbs/10.jpg","path":"images/thumbs/10.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/thumbs/11.jpg","path":"images/thumbs/11.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/thumbs/12.jpg","path":"images/thumbs/12.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/thumbs/09.jpg","path":"images/thumbs/09.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/thumbs/08.jpg","path":"images/thumbs/08.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/fulls/10.jpg","path":"images/fulls/10.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/thumbs/05.jpg","path":"images/thumbs/05.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/fonts/fontawesome-webfont.ttf","path":"fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/thumbs/04.jpg","path":"images/thumbs/04.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/bg3.jpg","path":"images/bg3.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/js/gallery/gallery.js","path":"js/gallery/gallery.js","modified":0,"renderable":1},{"_id":"themes/miccall/source/js/prism.js","path":"js/prism.js","modified":0,"renderable":1},{"_id":"themes/miccall/source/fonts/fontawesome-webfont.svg","path":"fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/21.jpg","path":"images/21.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/bg2.jpg","path":"images/bg2.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/images/bg.jpg","path":"images/bg.jpg","modified":0,"renderable":1},{"_id":"themes/miccall/source/fonts/FZLT.ttf","path":"fonts/FZLT.ttf","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/Spring-Cloud在国内中小型公司能用起来吗？ - 副本 (2).md","hash":"85366552807d068fdd5984699995353a7df57ff8","modified":1519961270610},{"_id":"source/_posts/Spring-Cloud在国内中小型公司能用起来吗？ - 副本 (3).md","hash":"85366552807d068fdd5984699995353a7df57ff8","modified":1519961270610},{"_id":"source/_posts/Spring-Cloud在国内中小型公司能用起来吗？ - 副本 (4).md","hash":"85366552807d068fdd5984699995353a7df57ff8","modified":1519961270610},{"_id":"source/_posts/Spring-Cloud在国内中小型公司能用起来吗？ - 副本 (6).md","hash":"85366552807d068fdd5984699995353a7df57ff8","modified":1519961270610},{"_id":"source/_posts/Spring-Cloud在国内中小型公司能用起来吗？ - 副本.md","hash":"85366552807d068fdd5984699995353a7df57ff8","modified":1519961270610},{"_id":"source/_posts/Spring-Cloud在国内中小型公司能用起来吗？.md","hash":"85366552807d068fdd5984699995353a7df57ff8","modified":1519961270610},{"_id":"source/_posts/Spring-Cloud在国内中小型公司能用起来吗？ - 副本 (5).md","hash":"85366552807d068fdd5984699995353a7df57ff8","modified":1519961270610},{"_id":"themes/miccall/_config.yml.bak","hash":"634ad4574c185080e4bb368412e9dc1e8fa97d59","modified":1519916365197},{"_id":"source/_posts/从比特币说开去.md","hash":"ba565b1ebf1e417e1a5497a80bfbdfb63cffdf02","modified":1519963125556},{"_id":"source/_posts/从比特币说开去.md.bak","hash":"311bb837198ea2a2d6987d8ab78bbb95a6bae1db","modified":1519961594749},{"_id":"themes/miccall/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1519916365136},{"_id":"themes/miccall/.git/config","hash":"cd9041d226943fe0dcdd824bced3b4dd50db1d2e","modified":1519916365190},{"_id":"themes/miccall/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1519915618587},{"_id":"themes/miccall/_config.yml","hash":"a92c1059b0a47d144b786adb8bd4c7ada38c717a","modified":1519957696934},{"_id":"themes/miccall/.git/packed-refs","hash":"8033594346c1a1046edfacd43a141befe0a70c0a","modified":1519916365127},{"_id":"themes/miccall/layout/index.ejs","hash":"7478c414bc8eac98c335b61649b3d43e1cba5c6f","modified":1519916365214},{"_id":"themes/miccall/layout/post.ejs","hash":"1208744dfdb7f70ed64d3ddad1ef826898e2800a","modified":1519916365215},{"_id":"themes/miccall/layout/layout.ejs","hash":"91d9935753449dcaf4584319c2fff56995e38934","modified":1519916365214},{"_id":"themes/miccall/readme.md","hash":"9798292eb4a6acc63fd84dbe7b257765f8e5e6fa","modified":1519916365216},{"_id":"themes/miccall/.git/index","hash":"420f7e97dbf250d8344fb7aef1e7479fc2467aaa","modified":1519916365376},{"_id":"source/_posts/hello-world.md","hash":"8a02477044e2b77f1b262da2c48c01429e4a32e4","modified":1519905529221},{"_id":"themes/miccall/.git/hooks/applypatch-msg.sample","hash":"86b9655a9ebbde13ac8dd5795eb4d5b539edab0f","modified":1519915618588},{"_id":"themes/miccall/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1519915618590},{"_id":"themes/miccall/.git/hooks/pre-applypatch.sample","hash":"42fa41564917b44183a50c4d94bb03e1768ddad8","modified":1519915618591},{"_id":"themes/miccall/.git/hooks/pre-push.sample","hash":"b4ad74c989616b7395dc6c9fce9871bb1e86dfb5","modified":1519915618592},{"_id":"themes/miccall/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1519915618593},{"_id":"themes/miccall/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1519915618589},{"_id":"themes/miccall/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1519915618594},{"_id":"themes/miccall/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1519915618596},{"_id":"themes/miccall/.git/logs/HEAD","hash":"1f25eb8501e7b2d5ef584170fcf8dea64944cd81","modified":1519916365183},{"_id":"themes/miccall/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1519915618592},{"_id":"themes/miccall/.git/hooks/update.sample","hash":"39355a075977d05708ef74e1b66d09a36e486df1","modified":1519915618595},{"_id":"themes/miccall/layout/_partial/comment.ejs","hash":"22c8ddb0d9033257664954bd2e2ee996a95e5dc3","modified":1519916365198},{"_id":"themes/miccall/layout/_partial/copyright.ejs","hash":"757b3f565d4669a19eef3e20a0f0218496b8e253","modified":1519959925232},{"_id":"themes/miccall/layout/_partial/copyright.ejs.bak","hash":"5d36ee1e04d5dff9fd9ce541cbc9a24157c727c8","modified":1519916365199},{"_id":"themes/miccall/layout/_partial/footer.ejs","hash":"6f81a21679280023b329db2b729ea5fc902d32bf","modified":1519916365199},{"_id":"themes/miccall/layout/_partial/gallery_head.ejs","hash":"6995a50e8648cfabff6d00ed6c3ffc33aeeb13bd","modified":1519916365200},{"_id":"themes/miccall/layout/_partial/gallery_js.ejs","hash":"123c3b0e446ce6f00561195ccf06c3fa2bb9b67c","modified":1519916365201},{"_id":"themes/miccall/layout/_partial/headerlogo.ejs","hash":"16755bfb4be7ad831ca951bb68ecd3cd2fe28106","modified":1519916365202},{"_id":"themes/miccall/layout/_partial/head.ejs","hash":"498cf0b5dada6b3e1e22944155e301826d4b6a6a","modified":1519916365201},{"_id":"themes/miccall/layout/_partial/importJS.ejs","hash":"f6fac423a0cd165cf2a14e65880b359087d57e4b","modified":1519916365202},{"_id":"themes/miccall/layout/_partial/intro.ejs","hash":"2952def928e752064cf967ed4c3585455b159644","modified":1519916365203},{"_id":"themes/miccall/layout/_partial/mainfirst.ejs","hash":"383ccb3f4ca7f3e688cd6c248c3771e1db769917","modified":1519916365203},{"_id":"themes/miccall/layout/_partial/nav.ejs","hash":"24814cda3e417da33956d3937e608cf4163d0b95","modified":1519916365204},{"_id":"themes/miccall/layout/_widget/page-links.ejs","hash":"60b5983cba8b2287321f1c42c6abd1e53396d330","modified":1519916365212},{"_id":"themes/miccall/layout/_widget/page-gallery.ejs","hash":"8eb99d755c87a129c569519b1d2325e27316cd82","modified":1519916365212},{"_id":"themes/miccall/source/css/dropdownMenu.css","hash":"6198125bb51428ff612b62bab879409a1b4c73a9","modified":1519916365218},{"_id":"themes/miccall/source/css/font-awesome.min.css","hash":"a715d31a96ccab32670e709082e40cbf11497d61","modified":1519916365219},{"_id":"themes/miccall/source/css/backcss.css","hash":"cf72e1e50fd17bd69c15ed939b71fcede0ef6c14","modified":1519916365217},{"_id":"themes/miccall/layout/_widget/page-tagcloud.ejs","hash":"bc891c99c4f2312ea8946dc401332ab82043f4fb","modified":1519916365213},{"_id":"themes/miccall/source/css/gallery.css","hash":"69eea5facb3a5991fe74d7fb9460bbedc3ffae86","modified":1519916365220},{"_id":"themes/miccall/source/css/gallery.min.css","hash":"c5333ca835aae49239d809130a7b281af745729e","modified":1519916365221},{"_id":"themes/miccall/source/css/item.css","hash":"89ef8ad5c7c22476d4c8b53106072b4e593f5446","modified":1519916365227},{"_id":"themes/miccall/source/css/mic_gallery.css","hash":"6a85430e1b17ad13ad7f2ae45617899b2cb0dd56","modified":1519916365228},{"_id":"themes/miccall/source/css/my_link.css","hash":"3d89cfd70d9d50fcde140d818b5d8e82424c0497","modified":1519916365230},{"_id":"themes/miccall/source/css/prism_coy.css","hash":"3608bd92724b39bc4e5307bfb3eb682e97be0ad8","modified":1519916365232},{"_id":"themes/miccall/source/css/ok_prism.css","hash":"54c6c07bbfdd4f677443b183166b87475dee2d74","modified":1519916365231},{"_id":"themes/miccall/source/css/noscript.css","hash":"721fafde7779732ee13de81be1c1c5baa3655cd2","modified":1519916365230},{"_id":"themes/miccall/source/css/prism.css","hash":"4d824f5ffeca752156d1fbf96565be187f880ce2","modified":1519916365231},{"_id":"themes/miccall/source/css/prism_dark.css","hash":"dd3166d33870e9a21550762c978b95331e0f20a3","modified":1519916365233},{"_id":"themes/miccall/source/css/prism_default.css","hash":"7d18c8e21f463a7880c4d6a444cbf573494640e6","modified":1519916365233},{"_id":"themes/miccall/source/css/prism_funky.css","hash":"59db786b898ed8aa067e64ad4e54dd94631b075b","modified":1519916365234},{"_id":"themes/miccall/source/css/typo.css","hash":"843e6cc6b1004219a850781c58bab3d221b00ddb","modified":1519916365236},{"_id":"themes/miccall/source/css/prism_okaidia.css","hash":"54c6c07bbfdd4f677443b183166b87475dee2d74","modified":1519916365234},{"_id":"themes/miccall/source/css/prism_solarized.css","hash":"554f4c2d24b1824211ffbaa3eb74b5b4db3dc34e","modified":1519916365235},{"_id":"themes/miccall/source/css/prism_twilight.css","hash":"3aec78eea4c35812bfac6b776f4fea79d4d7668e","modified":1519916365235},{"_id":"themes/miccall/source/images/12.jpg","hash":"88d68b169744a76ca7b21a258fc0812bc03ee701","modified":1519916365274},{"_id":"themes/miccall/source/images/3123.jpg","hash":"fc005184ff616231647c5dc85c63167040d810ba","modified":1519916365282},{"_id":"themes/miccall/source/images/bg1.jpg","hash":"dc9dc2884362b5b60f97d9797938f3b1462855bc","modified":1513228447127},{"_id":"themes/miccall/source/images/me.jpg","hash":"b520aa4d797fc0794d93104f260d18a523b67522","modified":1519916365316},{"_id":"themes/miccall/source/images/bg (2).jpg","hash":"5c7ba4dead81150448ea69bf541daa64fb59ae58","modified":1519916365283},{"_id":"themes/miccall/source/images/pic01.jpg","hash":"774db644cdac607e0d9d72ca65a4961f9a250c11","modified":1519916365318},{"_id":"themes/miccall/source/images/pic03.jpg","hash":"ec46b8b1490a794ea5d4c61058959b9a52ac262f","modified":1519916365321},{"_id":"themes/miccall/source/images/overlay.png","hash":"e978d81201508e6fcbe0fe95485dae1a4b983a8d","modified":1519916365316},{"_id":"themes/miccall/source/images/pic02.jpg","hash":"ab77495fef5102f94e36b71d4308cd682dd4b1a8","modified":1519916365320},{"_id":"themes/miccall/source/images/pic04.jpg","hash":"ee299cd40108e50d7151333de525049f8ec4f150","modified":1519916365323},{"_id":"themes/miccall/source/images/pic05.jpg","hash":"b74d638c0aa9e90f94b056db4c0a886e382973f1","modified":1519916365324},{"_id":"themes/miccall/source/images/pic06.jpg","hash":"3d8572663edf8a77b99bdfd93491d4f6a7298aaf","modified":1519916365326},{"_id":"themes/miccall/source/images/pic08.jpg","hash":"993e8ff91c20b6d28b6302d3a18367547610c58a","modified":1519916365329},{"_id":"themes/miccall/source/images/pic07.jpg","hash":"de06b4eee3d0e42ddcac415adc8c83466f430253","modified":1519916365328},{"_id":"themes/miccall/source/images/pic09.jpg","hash":"6aae76e8215e3a6e785ce2a65484e4df03ed5fe9","modified":1519916365331},{"_id":"themes/miccall/source/images/pic10.jpg","hash":"814a661f2966a3c8fe2c89034f62e828f291d770","modified":1519916365333},{"_id":"themes/miccall/source/images/pic11.jpg","hash":"a034beb80041d238f36685706a019a269f159ac1","modified":1519916365335},{"_id":"themes/miccall/source/images/pic12.jpg","hash":"ae93f2674a3b1f1dcbfe9692f2e172e106c02d96","modified":1519916365337},{"_id":"themes/miccall/source/images/picx03.jpg","hash":"cffaa38c9489f131f6f37763b37b937811b316df","modified":1519916365340},{"_id":"themes/miccall/source/js/jquery.scrolly.min.js","hash":"91ee4deda8189fde4432a8f58cfe3b5f2aed9dcf","modified":1519916365369},{"_id":"themes/miccall/source/js/jquery.scrollex.min.js","hash":"ede14d2a018d6df0ffd13514dc4662724ad8f9c9","modified":1519916365369},{"_id":"themes/miccall/source/js/main.js","hash":"d0821f77163e784002d98fb18f833567c71cc05c","modified":1519916365371},{"_id":"themes/miccall/source/js/skel.min.js","hash":"955b722a7638bb20970efbc79e12d8bb628a36a6","modified":1519916365375},{"_id":"themes/miccall/source/js/gallery_skel.min.js","hash":"955b722a7638bb20970efbc79e12d8bb628a36a6","modified":1519916365367},{"_id":"themes/miccall/source/js/util.js","hash":"e32e958f74bd5edc4e1fbdd9fa6c30425d3c7954","modified":1519916365376},{"_id":"themes/miccall/source/js/lazyload.min.js","hash":"bccbdcb5e5c13543dc5cc764073e3a454739d458","modified":1519916365370},{"_id":"themes/miccall/source/js/mic_gallery.js","hash":"344ae990dcac628af652badc4574b72bc416020c","modified":1519916365371},{"_id":"themes/miccall/source/css/mic_main.css","hash":"a2b0b1f258b401b6680902c4efe8e99145c3872b","modified":1519916365229},{"_id":"themes/miccall/source/images/logo.png","hash":"ee2cf634d838f8acab5b826400edb0b42c8ce52b","modified":1519916365315},{"_id":"themes/miccall/source/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1519916365263},{"_id":"themes/miccall/source/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1519916365262},{"_id":"themes/miccall/source/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1519916365273},{"_id":"themes/miccall/source/img/logo_miccall.png","hash":"ee2cf634d838f8acab5b826400edb0b42c8ce52b","modified":1519916365364},{"_id":"themes/miccall/source/js/jquery.min.js","hash":"e6082a7b52db82604ac446d2e6a32cb5af263781","modified":1519916365368},{"_id":"themes/miccall/source/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1519916365272},{"_id":"themes/miccall/.git/objects/pack/pack-48aa146e4150b181f8246c1877bc2588dc0f417b.idx","hash":"2df5157b6dc0ffe16e1d93cc133641fcec3052fe","modified":1519916364511},{"_id":"themes/miccall/.git/refs/heads/master","hash":"31f3bbaa05131aa5c3a7e7337e6a649c1092d1ee","modified":1519916365181},{"_id":"themes/miccall/source/css/images/close-small-alt.svg","hash":"7908654ee26cd247d52fb4fae6ad6b8060a00598","modified":1519916365223},{"_id":"themes/miccall/source/css/images/arrow.svg","hash":"84dba9fe4dffab02e5e32f66cea1e38c12129a7c","modified":1519916365222},{"_id":"themes/miccall/source/css/images/close.svg","hash":"205739dd10d087f013583087e012ee7423a99c34","modified":1519916365224},{"_id":"themes/miccall/source/css/images/open-small.svg","hash":"068e6e2c79172fc81d8f1471750fd6f0658c682f","modified":1519916365224},{"_id":"themes/miccall/source/css/images/arrow-small.svg","hash":"ecc2016f117d725f156bdb60a81e4d09d88961e1","modified":1519916365221},{"_id":"themes/miccall/source/css/images/open.svg","hash":"5e61408876123f8a53a1491899b1c813934c299b","modified":1519916365225},{"_id":"themes/miccall/source/css/images/spinner.svg","hash":"285d4c263d37d920d65a1c67c870a05dbbdbb7c3","modified":1519916365226},{"_id":"themes/miccall/source/images/fulls/01.jpg","hash":"cfc928948301b97ab2873e837284cd83cc3c6cff","modified":1519916365293},{"_id":"themes/miccall/source/images/fulls/02.jpg","hash":"1a729f597316a7483ebcf39b5984ced1612a0410","modified":1519916365295},{"_id":"themes/miccall/source/css/images/close-small.svg","hash":"92f0c906a7540f0bac4e4aad1387362f218ee02f","modified":1519916365223},{"_id":"themes/miccall/source/images/fulls/03.jpg","hash":"0f8c8109f8b605aa46ef571df1d16e8bdd43d090","modified":1519916365296},{"_id":"themes/miccall/source/images/fulls/04.jpg","hash":"806679d4c4398335413b6b53941709a4aef7c3cd","modified":1519916365298},{"_id":"themes/miccall/source/images/fulls/05.jpg","hash":"232b0b9e3b6e751ebb2e6c4284651639526200e3","modified":1519916365300},{"_id":"themes/miccall/source/images/fulls/06.jpg","hash":"e97b29127a50c69cf445d0591cd94daab0f50e33","modified":1519916365302},{"_id":"themes/miccall/source/images/fulls/07.jpg","hash":"eb41675450650b613195806b154c6badbb7eca4d","modified":1519916365304},{"_id":"themes/miccall/source/images/fulls/08.jpg","hash":"d31c389218f04bc7ec510ac236fbe343048e3cfc","modified":1519916365306},{"_id":"themes/miccall/source/images/fulls/09.jpg","hash":"61fab3aa8ceee938efb4965042ce2b5f51d3a584","modified":1519916365307},{"_id":"themes/miccall/source/images/fulls/11.jpg","hash":"cff6219163e3154c1263ee1d7f924c0ae3ccc9e7","modified":1519916365311},{"_id":"themes/miccall/source/images/fulls/12.jpg","hash":"a631491537584e2e23926d9d6f50ce60bb884b18","modified":1519916365313},{"_id":"themes/miccall/source/images/thumbs/02.jpg","hash":"396a422cbc1b94b6c9b00f6a34c02b05913230ba","modified":1519916365345},{"_id":"themes/miccall/source/images/thumbs/03.jpg","hash":"e3915b1cc3283b5ec33f49e2591ebf2e6be2362e","modified":1519916365347},{"_id":"themes/miccall/source/images/thumbs/01.jpg","hash":"4f5a2b9fdf44146d60f8dd3a32c81a8419b9148f","modified":1519916365343},{"_id":"themes/miccall/source/images/thumbs/06.jpg","hash":"ffc80bb5fe28626d9462e06d9f01d2a5f99b0ae9","modified":1519916365352},{"_id":"themes/miccall/source/images/thumbs/07.jpg","hash":"45194a98089345e4f135c0f0bfffeee7ccdd9c99","modified":1519916365354},{"_id":"themes/miccall/source/images/thumbs/10.jpg","hash":"ccfee49fbca187bad971336cb8fda7dec05ab01e","modified":1519916365358},{"_id":"themes/miccall/source/images/thumbs/11.jpg","hash":"66a7fb237824b1b2fd550a068bb6a32f5031ab8f","modified":1519916365360},{"_id":"themes/miccall/source/images/thumbs/12.jpg","hash":"17ab685447ed06b6c12e4d42f38111c684221bc7","modified":1519916365362},{"_id":"themes/miccall/source/images/thumbs/09.jpg","hash":"bc8a02decf65e44657f02dcc11c7395bfa41ffdb","modified":1519916365357},{"_id":"themes/miccall/source/images/thumbs/08.jpg","hash":"e0384120f6acfa64ad0b5bd0d7e114e9f239294e","modified":1519916365355},{"_id":"themes/miccall/source/images/fulls/10.jpg","hash":"9a284568752a54ab9e8e9cd19c41750e05975d2a","modified":1519916365309},{"_id":"themes/miccall/source/images/thumbs/05.jpg","hash":"3e28c2253db93ba42d16ba9a1f451dbc452fd947","modified":1519916365350},{"_id":"themes/miccall/source/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1519916365270},{"_id":"themes/miccall/source/images/thumbs/04.jpg","hash":"3c60445217b1b52b1fd6cae4578356c564d7624d","modified":1519916365348},{"_id":"themes/miccall/source/images/bg3.jpg","hash":"049ec1ab1f9923b4864d19a443df560645585530","modified":1519958890447},{"_id":"themes/miccall/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1519916365130},{"_id":"themes/miccall/.git/logs/refs/heads/master","hash":"1f25eb8501e7b2d5ef584170fcf8dea64944cd81","modified":1519916365182},{"_id":"themes/miccall/layout/_widget/comment/changyan/common.ejs","hash":"49f6580a358c75d152ec98c3e064e202ca188528","modified":1519916365206},{"_id":"themes/miccall/source/js/gallery/gallery.js","hash":"79688611831faca31d5ef0c6d90397c29781fa98","modified":1519916365366},{"_id":"themes/miccall/layout/_widget/comment/disqus_click/common.ejs","hash":"83605554328fc4456b88452247a4ba26b42bdcad","modified":1519916365210},{"_id":"themes/miccall/layout/_widget/comment/disqus_click/enter.ejs","hash":"2af0b1276184decab109496e359cb81733c3fa27","modified":1519916365211},{"_id":"themes/miccall/layout/_widget/comment/changyan/enter.ejs","hash":"f2728b174b12c3dc62b0199f540473ffb2a03ad8","modified":1519916365206},{"_id":"themes/miccall/layout/_widget/comment/disqus/enter.ejs","hash":"69ef53a73be6827772f2b5e8cadf8a13cf6a938c","modified":1519916365209},{"_id":"themes/miccall/layout/_widget/comment/changyan/main.ejs","hash":"720b1fd954577382ebdb60de6a93fb875843a9bb","modified":1519916365207},{"_id":"themes/miccall/layout/_widget/comment/disqus/main.ejs","hash":"371884a4108219877c49563c0a07f0b9bc6363f8","modified":1519916365209},{"_id":"themes/miccall/layout/_widget/comment/disqus_click/main.ejs","hash":"f4fb0405a22ec75caa75de6cc8804e26a00e52e3","modified":1519916365211},{"_id":"themes/miccall/layout/_widget/comment/disqus/common.ejs","hash":"c3e8ce6eb296b9b23836beaaf08b04d5e4ae5c11","modified":1519916365208},{"_id":"themes/miccall/source/js/prism.js","hash":"21582bba61751fe137d814b9f6ecd77e74655330","modified":1519916365375},{"_id":"themes/miccall/source/fonts/fontawesome-webfont.svg","hash":"964e8dac2cee79c4b49b5bc300675773f6518812","modified":1519916365267},{"_id":"themes/miccall/.git/logs/refs/remotes/origin/HEAD","hash":"1f25eb8501e7b2d5ef584170fcf8dea64944cd81","modified":1519916365135},{"_id":"themes/miccall/source/images/21.jpg","hash":"0b2570df0e6d9b79a0c50d0b4ce8799bd40ea421","modified":1519916365280},{"_id":"themes/miccall/source/images/bg2.jpg","hash":"af7fe6067d0c21f558502613eed86d8246000bba","modified":1519916365290},{"_id":"themes/miccall/source/images/bg.jpg","hash":"48bcff87121922383f647dde4af8c7e2d459927a","modified":1519959476250},{"_id":"themes/miccall/source/fonts/FZLT.ttf","hash":"24dfab81236612d596c97eb38b3adf5de99f669c","modified":1519916365259},{"_id":"themes/miccall/.git/objects/pack/pack-48aa146e4150b181f8246c1877bc2588dc0f417b.pack","hash":"c48efcdb92ee7dc63111057bbaffe89dc562c942","modified":1519916364565}],"Category":[],"Data":[],"Page":[],"Post":[{"_content":"每个IT企业，尤其是初创企业，非常苦恼：找不到好的程序员。现在大学、软件学院及各种培训机构，每年培养几十万的程序员，毕业的每个人都有同样困恼：找不到好的工作。问题出在哪里呢？其实，企业需要的是不是刚会写程序的人，需要来了就能干活的人，尤其能把活干好的人。而刚毕业的大学生多半刚学会如何写程序，的确很难企业需求。\n\n企业到底需要什么样的程序员，一个刚入门的程序员如何成为企业需要的高手呢？还有很多程序员问我，“我需要具备什么样的能力就可以去创业？”我一直在琢磨类似的问题。我自己写过十年程序，也在金山管理过一千多人的研发队伍，最近也在做天使投资，仔细总结了如下五点建议与所有程序员分享。\n\n建议一：只有真正喜欢才能写好程序\n喜欢写程序，做程序员就是上天堂；\n\n不喜欢写程序，做程序员就是下地狱；\n\n程序员需要整天趴在电脑前，经常没日没夜的，非常辛苦，而且工作来不得半点虚假，少写一个标点符号都不行。喜欢的人，日子过得非常开心，每写一行代码，都会有新的成就，尤其当自己的作品被广泛应用的时候，那种自豪感油然而起。不喜欢的人，坐在电脑前极端无聊，被进度压得喘不过气来，天天为找bug改bug生气。\n\n只有喜欢，只有热爱，才能把程序写好！\n\n我建议不喜欢写程序的人早点转行，不要勉强自己，免得误人误己。\n\n建议二：把程序当艺术品，像写诗一样来写代码\n现在很少有公司做code review（对写好的程序做代码级检查），于是很多人在进度的压力下潦草应付，只要测试通过就算搞定。表面上看，开发速度很快，进度有保障；但实际上，这样的程序连开发者自己都很难读懂，一旦有bug，很难调试，将来维护升级都非常困难。这样的代码多半只能重写，浪费自然严重。\n\n如果每个人写程序的时候当艺术品来写，写每行都认认真真、干干净净的，虽然速度略微慢了一点，但综合的开发成本会低很多。\n\n如何写像诗一样美的代码呢？方法也很简单。\n\n一、买几本经典的编程书，把书上所有例程全部重新写一遍，逐个比较和书上范例的差距，一步一步改善自己编程的风格和技巧。时间长了，自然就能写出象书上例程一样的代码，甚至可以比书上写得好。\n\n二、基础扎实后，多看看Linux等系统级的源代码，看看高手是如何写的，就有感觉了。\n\n三、通读一下MSDN中所有的资料，这样，“读书破万卷，下笔如有神”。\n\n还有，一定要牢记软件工程的铁律：可能出错的地方一定会出错。每个变量都做初始化，引用每个参数都会做有效性检查，在可能出错的每个地方都会做边界条件检查，这样开发出来的程序一定会稳固很多，就是出错也会很容易修改。野路子出来的高手，一般开发速度很快，但做完后bug很多，经常需要很长时间修改。而真正的高手，追求的境界是bugfreecode（零缺陷代码）。\n\n建议三：必须写够十万行代码，不要心存侥幸\n程序员象木工一样，熟能生巧。程序员必须写足够代码量的程序，才会有感觉，这是一个苦力活，没有任何捷径可走。\n\n计算机是一门实践性的科学，没有动手能力做支撑，很难做出好的科研成果。我的一个学长是美国卡内基梅隆大学的博士，卡内基梅隆大学计算机系在全世界非常出名，他说每个博士生必须写十万行代码才能毕业，卡内基梅隆大学博士进任何一个大企业基本不用面试。而国内培养的大部分研究生、博士生，动手能力都偏弱。\n\n没有写过足够代码量的，想成为高手是不可能的，只能纸上谈兵！\n\n建议四：时刻保持好奇心\n计算机技术更新换代非常快，每年都有各种各样的新技术出现。在我过去的职业生涯中，仅编程语言，我就用过basic、masm、pascal、c++、vba、Delphi、java等。需要时刻保持好奇心，不断学习各种新的东西，才能在未来的几十年职业生涯中不落伍。你要理解为什么iPhone出来很多高手用iPhone，现在一天到晚惦记着换部IPhone玩玩。\n\n人的精力有限，高手往往工作压力也比较大，如何在有限的时间内掌握整个行业动态，的确是一个不简单的事情。我的经验是经常看业内的各种技术杂志，参加各种聚会，可以节约很多时间。最重要的是，交几个博学的技术高手，多和他们交流，一定获益匪浅！\n\n建议五：不要局限在技术本身，多花点精力关注用户\n做到前面几条，就已经是千金难求的高手了。但一个真正的高手需要知道用户需要什么，如何做出让用户满意的产品。\n\n现在的软件研发越来越强烈团队协作，不少团队都配置了专门的需求分析的工程师、用户界面及用户体验的设计师，软件研发的分工越来越细。很多程序员以为只要把技术搞好，不用管用户需求和用户体验。实际上，需求方案及界面方案不可能写得非常细，具体的实施还是程序员自己来实现的。这个时候，好坏的差距很快就体现出来了。\n\n我们写程序的最终目的是满足用户需求，不是简单完成需求规划方案中的功能。所以，程序员一定要认真揣摩用户心理，能明白用户的真实需求。\n\n其次，怎么设计交互界面，让用户觉得好用，用起来舒服，这里面学问很大。我举一个小例子，每个程序窗口右上角都有三个按钮，如最小化、关闭等。乔布斯觉得不好看，不易用，他提出改用红绿蓝的交通灯。这样修改后，果然MacOS漂亮和易用了很多。\n\n目前互联网和手机上的应用开发，都非常强调小团队研发。这样研发模式速度会快很多，但对程序员的综合素质的要求也就更高了。\n\n我强烈建议程序员不要仅仅局限在技术本事，还需要多点精力考虑和用户相关的问题，学会洞察用户的需求，并努力设计好用易用的产品。做着这点的程序高手，创业成算就很大了。\n\n这样的技术高手，如果捕捉到合适的产品方向，并且具备一定带团队的能力，创业成功机会很大！事实上，绝大部分创业的技术公司，创始人都是这样的人！","source":"_posts/Spring-Cloud在国内中小型公司能用起来吗？ - 副本 (2).md","raw":"每个IT企业，尤其是初创企业，非常苦恼：找不到好的程序员。现在大学、软件学院及各种培训机构，每年培养几十万的程序员，毕业的每个人都有同样困恼：找不到好的工作。问题出在哪里呢？其实，企业需要的是不是刚会写程序的人，需要来了就能干活的人，尤其能把活干好的人。而刚毕业的大学生多半刚学会如何写程序，的确很难企业需求。\n\n企业到底需要什么样的程序员，一个刚入门的程序员如何成为企业需要的高手呢？还有很多程序员问我，“我需要具备什么样的能力就可以去创业？”我一直在琢磨类似的问题。我自己写过十年程序，也在金山管理过一千多人的研发队伍，最近也在做天使投资，仔细总结了如下五点建议与所有程序员分享。\n\n建议一：只有真正喜欢才能写好程序\n喜欢写程序，做程序员就是上天堂；\n\n不喜欢写程序，做程序员就是下地狱；\n\n程序员需要整天趴在电脑前，经常没日没夜的，非常辛苦，而且工作来不得半点虚假，少写一个标点符号都不行。喜欢的人，日子过得非常开心，每写一行代码，都会有新的成就，尤其当自己的作品被广泛应用的时候，那种自豪感油然而起。不喜欢的人，坐在电脑前极端无聊，被进度压得喘不过气来，天天为找bug改bug生气。\n\n只有喜欢，只有热爱，才能把程序写好！\n\n我建议不喜欢写程序的人早点转行，不要勉强自己，免得误人误己。\n\n建议二：把程序当艺术品，像写诗一样来写代码\n现在很少有公司做code review（对写好的程序做代码级检查），于是很多人在进度的压力下潦草应付，只要测试通过就算搞定。表面上看，开发速度很快，进度有保障；但实际上，这样的程序连开发者自己都很难读懂，一旦有bug，很难调试，将来维护升级都非常困难。这样的代码多半只能重写，浪费自然严重。\n\n如果每个人写程序的时候当艺术品来写，写每行都认认真真、干干净净的，虽然速度略微慢了一点，但综合的开发成本会低很多。\n\n如何写像诗一样美的代码呢？方法也很简单。\n\n一、买几本经典的编程书，把书上所有例程全部重新写一遍，逐个比较和书上范例的差距，一步一步改善自己编程的风格和技巧。时间长了，自然就能写出象书上例程一样的代码，甚至可以比书上写得好。\n\n二、基础扎实后，多看看Linux等系统级的源代码，看看高手是如何写的，就有感觉了。\n\n三、通读一下MSDN中所有的资料，这样，“读书破万卷，下笔如有神”。\n\n还有，一定要牢记软件工程的铁律：可能出错的地方一定会出错。每个变量都做初始化，引用每个参数都会做有效性检查，在可能出错的每个地方都会做边界条件检查，这样开发出来的程序一定会稳固很多，就是出错也会很容易修改。野路子出来的高手，一般开发速度很快，但做完后bug很多，经常需要很长时间修改。而真正的高手，追求的境界是bugfreecode（零缺陷代码）。\n\n建议三：必须写够十万行代码，不要心存侥幸\n程序员象木工一样，熟能生巧。程序员必须写足够代码量的程序，才会有感觉，这是一个苦力活，没有任何捷径可走。\n\n计算机是一门实践性的科学，没有动手能力做支撑，很难做出好的科研成果。我的一个学长是美国卡内基梅隆大学的博士，卡内基梅隆大学计算机系在全世界非常出名，他说每个博士生必须写十万行代码才能毕业，卡内基梅隆大学博士进任何一个大企业基本不用面试。而国内培养的大部分研究生、博士生，动手能力都偏弱。\n\n没有写过足够代码量的，想成为高手是不可能的，只能纸上谈兵！\n\n建议四：时刻保持好奇心\n计算机技术更新换代非常快，每年都有各种各样的新技术出现。在我过去的职业生涯中，仅编程语言，我就用过basic、masm、pascal、c++、vba、Delphi、java等。需要时刻保持好奇心，不断学习各种新的东西，才能在未来的几十年职业生涯中不落伍。你要理解为什么iPhone出来很多高手用iPhone，现在一天到晚惦记着换部IPhone玩玩。\n\n人的精力有限，高手往往工作压力也比较大，如何在有限的时间内掌握整个行业动态，的确是一个不简单的事情。我的经验是经常看业内的各种技术杂志，参加各种聚会，可以节约很多时间。最重要的是，交几个博学的技术高手，多和他们交流，一定获益匪浅！\n\n建议五：不要局限在技术本身，多花点精力关注用户\n做到前面几条，就已经是千金难求的高手了。但一个真正的高手需要知道用户需要什么，如何做出让用户满意的产品。\n\n现在的软件研发越来越强烈团队协作，不少团队都配置了专门的需求分析的工程师、用户界面及用户体验的设计师，软件研发的分工越来越细。很多程序员以为只要把技术搞好，不用管用户需求和用户体验。实际上，需求方案及界面方案不可能写得非常细，具体的实施还是程序员自己来实现的。这个时候，好坏的差距很快就体现出来了。\n\n我们写程序的最终目的是满足用户需求，不是简单完成需求规划方案中的功能。所以，程序员一定要认真揣摩用户心理，能明白用户的真实需求。\n\n其次，怎么设计交互界面，让用户觉得好用，用起来舒服，这里面学问很大。我举一个小例子，每个程序窗口右上角都有三个按钮，如最小化、关闭等。乔布斯觉得不好看，不易用，他提出改用红绿蓝的交通灯。这样修改后，果然MacOS漂亮和易用了很多。\n\n目前互联网和手机上的应用开发，都非常强调小团队研发。这样研发模式速度会快很多，但对程序员的综合素质的要求也就更高了。\n\n我强烈建议程序员不要仅仅局限在技术本事，还需要多点精力考虑和用户相关的问题，学会洞察用户的需求，并努力设计好用易用的产品。做着这点的程序高手，创业成算就很大了。\n\n这样的技术高手，如果捕捉到合适的产品方向，并且具备一定带团队的能力，创业成功机会很大！事实上，绝大部分创业的技术公司，创始人都是这样的人！","slug":"Spring-Cloud在国内中小型公司能用起来吗？ - 副本 (2)","published":1,"date":"2018-03-02T03:30:32.808Z","updated":"2018-03-02T03:27:50.610Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cje9e5cx30000k0ok9oxikd3e","content":"<p>每个IT企业，尤其是初创企业，非常苦恼：找不到好的程序员。现在大学、软件学院及各种培训机构，每年培养几十万的程序员，毕业的每个人都有同样困恼：找不到好的工作。问题出在哪里呢？其实，企业需要的是不是刚会写程序的人，需要来了就能干活的人，尤其能把活干好的人。而刚毕业的大学生多半刚学会如何写程序，的确很难企业需求。</p>\n<p>企业到底需要什么样的程序员，一个刚入门的程序员如何成为企业需要的高手呢？还有很多程序员问我，“我需要具备什么样的能力就可以去创业？”我一直在琢磨类似的问题。我自己写过十年程序，也在金山管理过一千多人的研发队伍，最近也在做天使投资，仔细总结了如下五点建议与所有程序员分享。</p>\n<p>建议一：只有真正喜欢才能写好程序<br>喜欢写程序，做程序员就是上天堂；</p>\n<p>不喜欢写程序，做程序员就是下地狱；</p>\n<p>程序员需要整天趴在电脑前，经常没日没夜的，非常辛苦，而且工作来不得半点虚假，少写一个标点符号都不行。喜欢的人，日子过得非常开心，每写一行代码，都会有新的成就，尤其当自己的作品被广泛应用的时候，那种自豪感油然而起。不喜欢的人，坐在电脑前极端无聊，被进度压得喘不过气来，天天为找bug改bug生气。</p>\n<p>只有喜欢，只有热爱，才能把程序写好！</p>\n<p>我建议不喜欢写程序的人早点转行，不要勉强自己，免得误人误己。</p>\n<p>建议二：把程序当艺术品，像写诗一样来写代码<br>现在很少有公司做code review（对写好的程序做代码级检查），于是很多人在进度的压力下潦草应付，只要测试通过就算搞定。表面上看，开发速度很快，进度有保障；但实际上，这样的程序连开发者自己都很难读懂，一旦有bug，很难调试，将来维护升级都非常困难。这样的代码多半只能重写，浪费自然严重。</p>\n<p>如果每个人写程序的时候当艺术品来写，写每行都认认真真、干干净净的，虽然速度略微慢了一点，但综合的开发成本会低很多。</p>\n<p>如何写像诗一样美的代码呢？方法也很简单。</p>\n<p>一、买几本经典的编程书，把书上所有例程全部重新写一遍，逐个比较和书上范例的差距，一步一步改善自己编程的风格和技巧。时间长了，自然就能写出象书上例程一样的代码，甚至可以比书上写得好。</p>\n<p>二、基础扎实后，多看看Linux等系统级的源代码，看看高手是如何写的，就有感觉了。</p>\n<p>三、通读一下MSDN中所有的资料，这样，“读书破万卷，下笔如有神”。</p>\n<p>还有，一定要牢记软件工程的铁律：可能出错的地方一定会出错。每个变量都做初始化，引用每个参数都会做有效性检查，在可能出错的每个地方都会做边界条件检查，这样开发出来的程序一定会稳固很多，就是出错也会很容易修改。野路子出来的高手，一般开发速度很快，但做完后bug很多，经常需要很长时间修改。而真正的高手，追求的境界是bugfreecode（零缺陷代码）。</p>\n<p>建议三：必须写够十万行代码，不要心存侥幸<br>程序员象木工一样，熟能生巧。程序员必须写足够代码量的程序，才会有感觉，这是一个苦力活，没有任何捷径可走。</p>\n<p>计算机是一门实践性的科学，没有动手能力做支撑，很难做出好的科研成果。我的一个学长是美国卡内基梅隆大学的博士，卡内基梅隆大学计算机系在全世界非常出名，他说每个博士生必须写十万行代码才能毕业，卡内基梅隆大学博士进任何一个大企业基本不用面试。而国内培养的大部分研究生、博士生，动手能力都偏弱。</p>\n<p>没有写过足够代码量的，想成为高手是不可能的，只能纸上谈兵！</p>\n<p>建议四：时刻保持好奇心<br>计算机技术更新换代非常快，每年都有各种各样的新技术出现。在我过去的职业生涯中，仅编程语言，我就用过basic、masm、pascal、c++、vba、Delphi、java等。需要时刻保持好奇心，不断学习各种新的东西，才能在未来的几十年职业生涯中不落伍。你要理解为什么iPhone出来很多高手用iPhone，现在一天到晚惦记着换部IPhone玩玩。</p>\n<p>人的精力有限，高手往往工作压力也比较大，如何在有限的时间内掌握整个行业动态，的确是一个不简单的事情。我的经验是经常看业内的各种技术杂志，参加各种聚会，可以节约很多时间。最重要的是，交几个博学的技术高手，多和他们交流，一定获益匪浅！</p>\n<p>建议五：不要局限在技术本身，多花点精力关注用户<br>做到前面几条，就已经是千金难求的高手了。但一个真正的高手需要知道用户需要什么，如何做出让用户满意的产品。</p>\n<p>现在的软件研发越来越强烈团队协作，不少团队都配置了专门的需求分析的工程师、用户界面及用户体验的设计师，软件研发的分工越来越细。很多程序员以为只要把技术搞好，不用管用户需求和用户体验。实际上，需求方案及界面方案不可能写得非常细，具体的实施还是程序员自己来实现的。这个时候，好坏的差距很快就体现出来了。</p>\n<p>我们写程序的最终目的是满足用户需求，不是简单完成需求规划方案中的功能。所以，程序员一定要认真揣摩用户心理，能明白用户的真实需求。</p>\n<p>其次，怎么设计交互界面，让用户觉得好用，用起来舒服，这里面学问很大。我举一个小例子，每个程序窗口右上角都有三个按钮，如最小化、关闭等。乔布斯觉得不好看，不易用，他提出改用红绿蓝的交通灯。这样修改后，果然MacOS漂亮和易用了很多。</p>\n<p>目前互联网和手机上的应用开发，都非常强调小团队研发。这样研发模式速度会快很多，但对程序员的综合素质的要求也就更高了。</p>\n<p>我强烈建议程序员不要仅仅局限在技术本事，还需要多点精力考虑和用户相关的问题，学会洞察用户的需求，并努力设计好用易用的产品。做着这点的程序高手，创业成算就很大了。</p>\n<p>这样的技术高手，如果捕捉到合适的产品方向，并且具备一定带团队的能力，创业成功机会很大！事实上，绝大部分创业的技术公司，创始人都是这样的人！</p>\n","site":{"data":{}},"excerpt":"","more":"<p>每个IT企业，尤其是初创企业，非常苦恼：找不到好的程序员。现在大学、软件学院及各种培训机构，每年培养几十万的程序员，毕业的每个人都有同样困恼：找不到好的工作。问题出在哪里呢？其实，企业需要的是不是刚会写程序的人，需要来了就能干活的人，尤其能把活干好的人。而刚毕业的大学生多半刚学会如何写程序，的确很难企业需求。</p>\n<p>企业到底需要什么样的程序员，一个刚入门的程序员如何成为企业需要的高手呢？还有很多程序员问我，“我需要具备什么样的能力就可以去创业？”我一直在琢磨类似的问题。我自己写过十年程序，也在金山管理过一千多人的研发队伍，最近也在做天使投资，仔细总结了如下五点建议与所有程序员分享。</p>\n<p>建议一：只有真正喜欢才能写好程序<br>喜欢写程序，做程序员就是上天堂；</p>\n<p>不喜欢写程序，做程序员就是下地狱；</p>\n<p>程序员需要整天趴在电脑前，经常没日没夜的，非常辛苦，而且工作来不得半点虚假，少写一个标点符号都不行。喜欢的人，日子过得非常开心，每写一行代码，都会有新的成就，尤其当自己的作品被广泛应用的时候，那种自豪感油然而起。不喜欢的人，坐在电脑前极端无聊，被进度压得喘不过气来，天天为找bug改bug生气。</p>\n<p>只有喜欢，只有热爱，才能把程序写好！</p>\n<p>我建议不喜欢写程序的人早点转行，不要勉强自己，免得误人误己。</p>\n<p>建议二：把程序当艺术品，像写诗一样来写代码<br>现在很少有公司做code review（对写好的程序做代码级检查），于是很多人在进度的压力下潦草应付，只要测试通过就算搞定。表面上看，开发速度很快，进度有保障；但实际上，这样的程序连开发者自己都很难读懂，一旦有bug，很难调试，将来维护升级都非常困难。这样的代码多半只能重写，浪费自然严重。</p>\n<p>如果每个人写程序的时候当艺术品来写，写每行都认认真真、干干净净的，虽然速度略微慢了一点，但综合的开发成本会低很多。</p>\n<p>如何写像诗一样美的代码呢？方法也很简单。</p>\n<p>一、买几本经典的编程书，把书上所有例程全部重新写一遍，逐个比较和书上范例的差距，一步一步改善自己编程的风格和技巧。时间长了，自然就能写出象书上例程一样的代码，甚至可以比书上写得好。</p>\n<p>二、基础扎实后，多看看Linux等系统级的源代码，看看高手是如何写的，就有感觉了。</p>\n<p>三、通读一下MSDN中所有的资料，这样，“读书破万卷，下笔如有神”。</p>\n<p>还有，一定要牢记软件工程的铁律：可能出错的地方一定会出错。每个变量都做初始化，引用每个参数都会做有效性检查，在可能出错的每个地方都会做边界条件检查，这样开发出来的程序一定会稳固很多，就是出错也会很容易修改。野路子出来的高手，一般开发速度很快，但做完后bug很多，经常需要很长时间修改。而真正的高手，追求的境界是bugfreecode（零缺陷代码）。</p>\n<p>建议三：必须写够十万行代码，不要心存侥幸<br>程序员象木工一样，熟能生巧。程序员必须写足够代码量的程序，才会有感觉，这是一个苦力活，没有任何捷径可走。</p>\n<p>计算机是一门实践性的科学，没有动手能力做支撑，很难做出好的科研成果。我的一个学长是美国卡内基梅隆大学的博士，卡内基梅隆大学计算机系在全世界非常出名，他说每个博士生必须写十万行代码才能毕业，卡内基梅隆大学博士进任何一个大企业基本不用面试。而国内培养的大部分研究生、博士生，动手能力都偏弱。</p>\n<p>没有写过足够代码量的，想成为高手是不可能的，只能纸上谈兵！</p>\n<p>建议四：时刻保持好奇心<br>计算机技术更新换代非常快，每年都有各种各样的新技术出现。在我过去的职业生涯中，仅编程语言，我就用过basic、masm、pascal、c++、vba、Delphi、java等。需要时刻保持好奇心，不断学习各种新的东西，才能在未来的几十年职业生涯中不落伍。你要理解为什么iPhone出来很多高手用iPhone，现在一天到晚惦记着换部IPhone玩玩。</p>\n<p>人的精力有限，高手往往工作压力也比较大，如何在有限的时间内掌握整个行业动态，的确是一个不简单的事情。我的经验是经常看业内的各种技术杂志，参加各种聚会，可以节约很多时间。最重要的是，交几个博学的技术高手，多和他们交流，一定获益匪浅！</p>\n<p>建议五：不要局限在技术本身，多花点精力关注用户<br>做到前面几条，就已经是千金难求的高手了。但一个真正的高手需要知道用户需要什么，如何做出让用户满意的产品。</p>\n<p>现在的软件研发越来越强烈团队协作，不少团队都配置了专门的需求分析的工程师、用户界面及用户体验的设计师，软件研发的分工越来越细。很多程序员以为只要把技术搞好，不用管用户需求和用户体验。实际上，需求方案及界面方案不可能写得非常细，具体的实施还是程序员自己来实现的。这个时候，好坏的差距很快就体现出来了。</p>\n<p>我们写程序的最终目的是满足用户需求，不是简单完成需求规划方案中的功能。所以，程序员一定要认真揣摩用户心理，能明白用户的真实需求。</p>\n<p>其次，怎么设计交互界面，让用户觉得好用，用起来舒服，这里面学问很大。我举一个小例子，每个程序窗口右上角都有三个按钮，如最小化、关闭等。乔布斯觉得不好看，不易用，他提出改用红绿蓝的交通灯。这样修改后，果然MacOS漂亮和易用了很多。</p>\n<p>目前互联网和手机上的应用开发，都非常强调小团队研发。这样研发模式速度会快很多，但对程序员的综合素质的要求也就更高了。</p>\n<p>我强烈建议程序员不要仅仅局限在技术本事，还需要多点精力考虑和用户相关的问题，学会洞察用户的需求，并努力设计好用易用的产品。做着这点的程序高手，创业成算就很大了。</p>\n<p>这样的技术高手，如果捕捉到合适的产品方向，并且具备一定带团队的能力，创业成功机会很大！事实上，绝大部分创业的技术公司，创始人都是这样的人！</p>\n"},{"_content":"每个IT企业，尤其是初创企业，非常苦恼：找不到好的程序员。现在大学、软件学院及各种培训机构，每年培养几十万的程序员，毕业的每个人都有同样困恼：找不到好的工作。问题出在哪里呢？其实，企业需要的是不是刚会写程序的人，需要来了就能干活的人，尤其能把活干好的人。而刚毕业的大学生多半刚学会如何写程序，的确很难企业需求。\n\n企业到底需要什么样的程序员，一个刚入门的程序员如何成为企业需要的高手呢？还有很多程序员问我，“我需要具备什么样的能力就可以去创业？”我一直在琢磨类似的问题。我自己写过十年程序，也在金山管理过一千多人的研发队伍，最近也在做天使投资，仔细总结了如下五点建议与所有程序员分享。\n\n建议一：只有真正喜欢才能写好程序\n喜欢写程序，做程序员就是上天堂；\n\n不喜欢写程序，做程序员就是下地狱；\n\n程序员需要整天趴在电脑前，经常没日没夜的，非常辛苦，而且工作来不得半点虚假，少写一个标点符号都不行。喜欢的人，日子过得非常开心，每写一行代码，都会有新的成就，尤其当自己的作品被广泛应用的时候，那种自豪感油然而起。不喜欢的人，坐在电脑前极端无聊，被进度压得喘不过气来，天天为找bug改bug生气。\n\n只有喜欢，只有热爱，才能把程序写好！\n\n我建议不喜欢写程序的人早点转行，不要勉强自己，免得误人误己。\n\n建议二：把程序当艺术品，像写诗一样来写代码\n现在很少有公司做code review（对写好的程序做代码级检查），于是很多人在进度的压力下潦草应付，只要测试通过就算搞定。表面上看，开发速度很快，进度有保障；但实际上，这样的程序连开发者自己都很难读懂，一旦有bug，很难调试，将来维护升级都非常困难。这样的代码多半只能重写，浪费自然严重。\n\n如果每个人写程序的时候当艺术品来写，写每行都认认真真、干干净净的，虽然速度略微慢了一点，但综合的开发成本会低很多。\n\n如何写像诗一样美的代码呢？方法也很简单。\n\n一、买几本经典的编程书，把书上所有例程全部重新写一遍，逐个比较和书上范例的差距，一步一步改善自己编程的风格和技巧。时间长了，自然就能写出象书上例程一样的代码，甚至可以比书上写得好。\n\n二、基础扎实后，多看看Linux等系统级的源代码，看看高手是如何写的，就有感觉了。\n\n三、通读一下MSDN中所有的资料，这样，“读书破万卷，下笔如有神”。\n\n还有，一定要牢记软件工程的铁律：可能出错的地方一定会出错。每个变量都做初始化，引用每个参数都会做有效性检查，在可能出错的每个地方都会做边界条件检查，这样开发出来的程序一定会稳固很多，就是出错也会很容易修改。野路子出来的高手，一般开发速度很快，但做完后bug很多，经常需要很长时间修改。而真正的高手，追求的境界是bugfreecode（零缺陷代码）。\n\n建议三：必须写够十万行代码，不要心存侥幸\n程序员象木工一样，熟能生巧。程序员必须写足够代码量的程序，才会有感觉，这是一个苦力活，没有任何捷径可走。\n\n计算机是一门实践性的科学，没有动手能力做支撑，很难做出好的科研成果。我的一个学长是美国卡内基梅隆大学的博士，卡内基梅隆大学计算机系在全世界非常出名，他说每个博士生必须写十万行代码才能毕业，卡内基梅隆大学博士进任何一个大企业基本不用面试。而国内培养的大部分研究生、博士生，动手能力都偏弱。\n\n没有写过足够代码量的，想成为高手是不可能的，只能纸上谈兵！\n\n建议四：时刻保持好奇心\n计算机技术更新换代非常快，每年都有各种各样的新技术出现。在我过去的职业生涯中，仅编程语言，我就用过basic、masm、pascal、c++、vba、Delphi、java等。需要时刻保持好奇心，不断学习各种新的东西，才能在未来的几十年职业生涯中不落伍。你要理解为什么iPhone出来很多高手用iPhone，现在一天到晚惦记着换部IPhone玩玩。\n\n人的精力有限，高手往往工作压力也比较大，如何在有限的时间内掌握整个行业动态，的确是一个不简单的事情。我的经验是经常看业内的各种技术杂志，参加各种聚会，可以节约很多时间。最重要的是，交几个博学的技术高手，多和他们交流，一定获益匪浅！\n\n建议五：不要局限在技术本身，多花点精力关注用户\n做到前面几条，就已经是千金难求的高手了。但一个真正的高手需要知道用户需要什么，如何做出让用户满意的产品。\n\n现在的软件研发越来越强烈团队协作，不少团队都配置了专门的需求分析的工程师、用户界面及用户体验的设计师，软件研发的分工越来越细。很多程序员以为只要把技术搞好，不用管用户需求和用户体验。实际上，需求方案及界面方案不可能写得非常细，具体的实施还是程序员自己来实现的。这个时候，好坏的差距很快就体现出来了。\n\n我们写程序的最终目的是满足用户需求，不是简单完成需求规划方案中的功能。所以，程序员一定要认真揣摩用户心理，能明白用户的真实需求。\n\n其次，怎么设计交互界面，让用户觉得好用，用起来舒服，这里面学问很大。我举一个小例子，每个程序窗口右上角都有三个按钮，如最小化、关闭等。乔布斯觉得不好看，不易用，他提出改用红绿蓝的交通灯。这样修改后，果然MacOS漂亮和易用了很多。\n\n目前互联网和手机上的应用开发，都非常强调小团队研发。这样研发模式速度会快很多，但对程序员的综合素质的要求也就更高了。\n\n我强烈建议程序员不要仅仅局限在技术本事，还需要多点精力考虑和用户相关的问题，学会洞察用户的需求，并努力设计好用易用的产品。做着这点的程序高手，创业成算就很大了。\n\n这样的技术高手，如果捕捉到合适的产品方向，并且具备一定带团队的能力，创业成功机会很大！事实上，绝大部分创业的技术公司，创始人都是这样的人！","source":"_posts/Spring-Cloud在国内中小型公司能用起来吗？ - 副本 (3).md","raw":"每个IT企业，尤其是初创企业，非常苦恼：找不到好的程序员。现在大学、软件学院及各种培训机构，每年培养几十万的程序员，毕业的每个人都有同样困恼：找不到好的工作。问题出在哪里呢？其实，企业需要的是不是刚会写程序的人，需要来了就能干活的人，尤其能把活干好的人。而刚毕业的大学生多半刚学会如何写程序，的确很难企业需求。\n\n企业到底需要什么样的程序员，一个刚入门的程序员如何成为企业需要的高手呢？还有很多程序员问我，“我需要具备什么样的能力就可以去创业？”我一直在琢磨类似的问题。我自己写过十年程序，也在金山管理过一千多人的研发队伍，最近也在做天使投资，仔细总结了如下五点建议与所有程序员分享。\n\n建议一：只有真正喜欢才能写好程序\n喜欢写程序，做程序员就是上天堂；\n\n不喜欢写程序，做程序员就是下地狱；\n\n程序员需要整天趴在电脑前，经常没日没夜的，非常辛苦，而且工作来不得半点虚假，少写一个标点符号都不行。喜欢的人，日子过得非常开心，每写一行代码，都会有新的成就，尤其当自己的作品被广泛应用的时候，那种自豪感油然而起。不喜欢的人，坐在电脑前极端无聊，被进度压得喘不过气来，天天为找bug改bug生气。\n\n只有喜欢，只有热爱，才能把程序写好！\n\n我建议不喜欢写程序的人早点转行，不要勉强自己，免得误人误己。\n\n建议二：把程序当艺术品，像写诗一样来写代码\n现在很少有公司做code review（对写好的程序做代码级检查），于是很多人在进度的压力下潦草应付，只要测试通过就算搞定。表面上看，开发速度很快，进度有保障；但实际上，这样的程序连开发者自己都很难读懂，一旦有bug，很难调试，将来维护升级都非常困难。这样的代码多半只能重写，浪费自然严重。\n\n如果每个人写程序的时候当艺术品来写，写每行都认认真真、干干净净的，虽然速度略微慢了一点，但综合的开发成本会低很多。\n\n如何写像诗一样美的代码呢？方法也很简单。\n\n一、买几本经典的编程书，把书上所有例程全部重新写一遍，逐个比较和书上范例的差距，一步一步改善自己编程的风格和技巧。时间长了，自然就能写出象书上例程一样的代码，甚至可以比书上写得好。\n\n二、基础扎实后，多看看Linux等系统级的源代码，看看高手是如何写的，就有感觉了。\n\n三、通读一下MSDN中所有的资料，这样，“读书破万卷，下笔如有神”。\n\n还有，一定要牢记软件工程的铁律：可能出错的地方一定会出错。每个变量都做初始化，引用每个参数都会做有效性检查，在可能出错的每个地方都会做边界条件检查，这样开发出来的程序一定会稳固很多，就是出错也会很容易修改。野路子出来的高手，一般开发速度很快，但做完后bug很多，经常需要很长时间修改。而真正的高手，追求的境界是bugfreecode（零缺陷代码）。\n\n建议三：必须写够十万行代码，不要心存侥幸\n程序员象木工一样，熟能生巧。程序员必须写足够代码量的程序，才会有感觉，这是一个苦力活，没有任何捷径可走。\n\n计算机是一门实践性的科学，没有动手能力做支撑，很难做出好的科研成果。我的一个学长是美国卡内基梅隆大学的博士，卡内基梅隆大学计算机系在全世界非常出名，他说每个博士生必须写十万行代码才能毕业，卡内基梅隆大学博士进任何一个大企业基本不用面试。而国内培养的大部分研究生、博士生，动手能力都偏弱。\n\n没有写过足够代码量的，想成为高手是不可能的，只能纸上谈兵！\n\n建议四：时刻保持好奇心\n计算机技术更新换代非常快，每年都有各种各样的新技术出现。在我过去的职业生涯中，仅编程语言，我就用过basic、masm、pascal、c++、vba、Delphi、java等。需要时刻保持好奇心，不断学习各种新的东西，才能在未来的几十年职业生涯中不落伍。你要理解为什么iPhone出来很多高手用iPhone，现在一天到晚惦记着换部IPhone玩玩。\n\n人的精力有限，高手往往工作压力也比较大，如何在有限的时间内掌握整个行业动态，的确是一个不简单的事情。我的经验是经常看业内的各种技术杂志，参加各种聚会，可以节约很多时间。最重要的是，交几个博学的技术高手，多和他们交流，一定获益匪浅！\n\n建议五：不要局限在技术本身，多花点精力关注用户\n做到前面几条，就已经是千金难求的高手了。但一个真正的高手需要知道用户需要什么，如何做出让用户满意的产品。\n\n现在的软件研发越来越强烈团队协作，不少团队都配置了专门的需求分析的工程师、用户界面及用户体验的设计师，软件研发的分工越来越细。很多程序员以为只要把技术搞好，不用管用户需求和用户体验。实际上，需求方案及界面方案不可能写得非常细，具体的实施还是程序员自己来实现的。这个时候，好坏的差距很快就体现出来了。\n\n我们写程序的最终目的是满足用户需求，不是简单完成需求规划方案中的功能。所以，程序员一定要认真揣摩用户心理，能明白用户的真实需求。\n\n其次，怎么设计交互界面，让用户觉得好用，用起来舒服，这里面学问很大。我举一个小例子，每个程序窗口右上角都有三个按钮，如最小化、关闭等。乔布斯觉得不好看，不易用，他提出改用红绿蓝的交通灯。这样修改后，果然MacOS漂亮和易用了很多。\n\n目前互联网和手机上的应用开发，都非常强调小团队研发。这样研发模式速度会快很多，但对程序员的综合素质的要求也就更高了。\n\n我强烈建议程序员不要仅仅局限在技术本事，还需要多点精力考虑和用户相关的问题，学会洞察用户的需求，并努力设计好用易用的产品。做着这点的程序高手，创业成算就很大了。\n\n这样的技术高手，如果捕捉到合适的产品方向，并且具备一定带团队的能力，创业成功机会很大！事实上，绝大部分创业的技术公司，创始人都是这样的人！","slug":"Spring-Cloud在国内中小型公司能用起来吗？ - 副本 (3)","published":1,"date":"2018-03-02T03:30:33.314Z","updated":"2018-03-02T03:27:50.610Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cje9e5cxo0001k0okoatyq5rt","content":"<p>每个IT企业，尤其是初创企业，非常苦恼：找不到好的程序员。现在大学、软件学院及各种培训机构，每年培养几十万的程序员，毕业的每个人都有同样困恼：找不到好的工作。问题出在哪里呢？其实，企业需要的是不是刚会写程序的人，需要来了就能干活的人，尤其能把活干好的人。而刚毕业的大学生多半刚学会如何写程序，的确很难企业需求。</p>\n<p>企业到底需要什么样的程序员，一个刚入门的程序员如何成为企业需要的高手呢？还有很多程序员问我，“我需要具备什么样的能力就可以去创业？”我一直在琢磨类似的问题。我自己写过十年程序，也在金山管理过一千多人的研发队伍，最近也在做天使投资，仔细总结了如下五点建议与所有程序员分享。</p>\n<p>建议一：只有真正喜欢才能写好程序<br>喜欢写程序，做程序员就是上天堂；</p>\n<p>不喜欢写程序，做程序员就是下地狱；</p>\n<p>程序员需要整天趴在电脑前，经常没日没夜的，非常辛苦，而且工作来不得半点虚假，少写一个标点符号都不行。喜欢的人，日子过得非常开心，每写一行代码，都会有新的成就，尤其当自己的作品被广泛应用的时候，那种自豪感油然而起。不喜欢的人，坐在电脑前极端无聊，被进度压得喘不过气来，天天为找bug改bug生气。</p>\n<p>只有喜欢，只有热爱，才能把程序写好！</p>\n<p>我建议不喜欢写程序的人早点转行，不要勉强自己，免得误人误己。</p>\n<p>建议二：把程序当艺术品，像写诗一样来写代码<br>现在很少有公司做code review（对写好的程序做代码级检查），于是很多人在进度的压力下潦草应付，只要测试通过就算搞定。表面上看，开发速度很快，进度有保障；但实际上，这样的程序连开发者自己都很难读懂，一旦有bug，很难调试，将来维护升级都非常困难。这样的代码多半只能重写，浪费自然严重。</p>\n<p>如果每个人写程序的时候当艺术品来写，写每行都认认真真、干干净净的，虽然速度略微慢了一点，但综合的开发成本会低很多。</p>\n<p>如何写像诗一样美的代码呢？方法也很简单。</p>\n<p>一、买几本经典的编程书，把书上所有例程全部重新写一遍，逐个比较和书上范例的差距，一步一步改善自己编程的风格和技巧。时间长了，自然就能写出象书上例程一样的代码，甚至可以比书上写得好。</p>\n<p>二、基础扎实后，多看看Linux等系统级的源代码，看看高手是如何写的，就有感觉了。</p>\n<p>三、通读一下MSDN中所有的资料，这样，“读书破万卷，下笔如有神”。</p>\n<p>还有，一定要牢记软件工程的铁律：可能出错的地方一定会出错。每个变量都做初始化，引用每个参数都会做有效性检查，在可能出错的每个地方都会做边界条件检查，这样开发出来的程序一定会稳固很多，就是出错也会很容易修改。野路子出来的高手，一般开发速度很快，但做完后bug很多，经常需要很长时间修改。而真正的高手，追求的境界是bugfreecode（零缺陷代码）。</p>\n<p>建议三：必须写够十万行代码，不要心存侥幸<br>程序员象木工一样，熟能生巧。程序员必须写足够代码量的程序，才会有感觉，这是一个苦力活，没有任何捷径可走。</p>\n<p>计算机是一门实践性的科学，没有动手能力做支撑，很难做出好的科研成果。我的一个学长是美国卡内基梅隆大学的博士，卡内基梅隆大学计算机系在全世界非常出名，他说每个博士生必须写十万行代码才能毕业，卡内基梅隆大学博士进任何一个大企业基本不用面试。而国内培养的大部分研究生、博士生，动手能力都偏弱。</p>\n<p>没有写过足够代码量的，想成为高手是不可能的，只能纸上谈兵！</p>\n<p>建议四：时刻保持好奇心<br>计算机技术更新换代非常快，每年都有各种各样的新技术出现。在我过去的职业生涯中，仅编程语言，我就用过basic、masm、pascal、c++、vba、Delphi、java等。需要时刻保持好奇心，不断学习各种新的东西，才能在未来的几十年职业生涯中不落伍。你要理解为什么iPhone出来很多高手用iPhone，现在一天到晚惦记着换部IPhone玩玩。</p>\n<p>人的精力有限，高手往往工作压力也比较大，如何在有限的时间内掌握整个行业动态，的确是一个不简单的事情。我的经验是经常看业内的各种技术杂志，参加各种聚会，可以节约很多时间。最重要的是，交几个博学的技术高手，多和他们交流，一定获益匪浅！</p>\n<p>建议五：不要局限在技术本身，多花点精力关注用户<br>做到前面几条，就已经是千金难求的高手了。但一个真正的高手需要知道用户需要什么，如何做出让用户满意的产品。</p>\n<p>现在的软件研发越来越强烈团队协作，不少团队都配置了专门的需求分析的工程师、用户界面及用户体验的设计师，软件研发的分工越来越细。很多程序员以为只要把技术搞好，不用管用户需求和用户体验。实际上，需求方案及界面方案不可能写得非常细，具体的实施还是程序员自己来实现的。这个时候，好坏的差距很快就体现出来了。</p>\n<p>我们写程序的最终目的是满足用户需求，不是简单完成需求规划方案中的功能。所以，程序员一定要认真揣摩用户心理，能明白用户的真实需求。</p>\n<p>其次，怎么设计交互界面，让用户觉得好用，用起来舒服，这里面学问很大。我举一个小例子，每个程序窗口右上角都有三个按钮，如最小化、关闭等。乔布斯觉得不好看，不易用，他提出改用红绿蓝的交通灯。这样修改后，果然MacOS漂亮和易用了很多。</p>\n<p>目前互联网和手机上的应用开发，都非常强调小团队研发。这样研发模式速度会快很多，但对程序员的综合素质的要求也就更高了。</p>\n<p>我强烈建议程序员不要仅仅局限在技术本事，还需要多点精力考虑和用户相关的问题，学会洞察用户的需求，并努力设计好用易用的产品。做着这点的程序高手，创业成算就很大了。</p>\n<p>这样的技术高手，如果捕捉到合适的产品方向，并且具备一定带团队的能力，创业成功机会很大！事实上，绝大部分创业的技术公司，创始人都是这样的人！</p>\n","site":{"data":{}},"excerpt":"","more":"<p>每个IT企业，尤其是初创企业，非常苦恼：找不到好的程序员。现在大学、软件学院及各种培训机构，每年培养几十万的程序员，毕业的每个人都有同样困恼：找不到好的工作。问题出在哪里呢？其实，企业需要的是不是刚会写程序的人，需要来了就能干活的人，尤其能把活干好的人。而刚毕业的大学生多半刚学会如何写程序，的确很难企业需求。</p>\n<p>企业到底需要什么样的程序员，一个刚入门的程序员如何成为企业需要的高手呢？还有很多程序员问我，“我需要具备什么样的能力就可以去创业？”我一直在琢磨类似的问题。我自己写过十年程序，也在金山管理过一千多人的研发队伍，最近也在做天使投资，仔细总结了如下五点建议与所有程序员分享。</p>\n<p>建议一：只有真正喜欢才能写好程序<br>喜欢写程序，做程序员就是上天堂；</p>\n<p>不喜欢写程序，做程序员就是下地狱；</p>\n<p>程序员需要整天趴在电脑前，经常没日没夜的，非常辛苦，而且工作来不得半点虚假，少写一个标点符号都不行。喜欢的人，日子过得非常开心，每写一行代码，都会有新的成就，尤其当自己的作品被广泛应用的时候，那种自豪感油然而起。不喜欢的人，坐在电脑前极端无聊，被进度压得喘不过气来，天天为找bug改bug生气。</p>\n<p>只有喜欢，只有热爱，才能把程序写好！</p>\n<p>我建议不喜欢写程序的人早点转行，不要勉强自己，免得误人误己。</p>\n<p>建议二：把程序当艺术品，像写诗一样来写代码<br>现在很少有公司做code review（对写好的程序做代码级检查），于是很多人在进度的压力下潦草应付，只要测试通过就算搞定。表面上看，开发速度很快，进度有保障；但实际上，这样的程序连开发者自己都很难读懂，一旦有bug，很难调试，将来维护升级都非常困难。这样的代码多半只能重写，浪费自然严重。</p>\n<p>如果每个人写程序的时候当艺术品来写，写每行都认认真真、干干净净的，虽然速度略微慢了一点，但综合的开发成本会低很多。</p>\n<p>如何写像诗一样美的代码呢？方法也很简单。</p>\n<p>一、买几本经典的编程书，把书上所有例程全部重新写一遍，逐个比较和书上范例的差距，一步一步改善自己编程的风格和技巧。时间长了，自然就能写出象书上例程一样的代码，甚至可以比书上写得好。</p>\n<p>二、基础扎实后，多看看Linux等系统级的源代码，看看高手是如何写的，就有感觉了。</p>\n<p>三、通读一下MSDN中所有的资料，这样，“读书破万卷，下笔如有神”。</p>\n<p>还有，一定要牢记软件工程的铁律：可能出错的地方一定会出错。每个变量都做初始化，引用每个参数都会做有效性检查，在可能出错的每个地方都会做边界条件检查，这样开发出来的程序一定会稳固很多，就是出错也会很容易修改。野路子出来的高手，一般开发速度很快，但做完后bug很多，经常需要很长时间修改。而真正的高手，追求的境界是bugfreecode（零缺陷代码）。</p>\n<p>建议三：必须写够十万行代码，不要心存侥幸<br>程序员象木工一样，熟能生巧。程序员必须写足够代码量的程序，才会有感觉，这是一个苦力活，没有任何捷径可走。</p>\n<p>计算机是一门实践性的科学，没有动手能力做支撑，很难做出好的科研成果。我的一个学长是美国卡内基梅隆大学的博士，卡内基梅隆大学计算机系在全世界非常出名，他说每个博士生必须写十万行代码才能毕业，卡内基梅隆大学博士进任何一个大企业基本不用面试。而国内培养的大部分研究生、博士生，动手能力都偏弱。</p>\n<p>没有写过足够代码量的，想成为高手是不可能的，只能纸上谈兵！</p>\n<p>建议四：时刻保持好奇心<br>计算机技术更新换代非常快，每年都有各种各样的新技术出现。在我过去的职业生涯中，仅编程语言，我就用过basic、masm、pascal、c++、vba、Delphi、java等。需要时刻保持好奇心，不断学习各种新的东西，才能在未来的几十年职业生涯中不落伍。你要理解为什么iPhone出来很多高手用iPhone，现在一天到晚惦记着换部IPhone玩玩。</p>\n<p>人的精力有限，高手往往工作压力也比较大，如何在有限的时间内掌握整个行业动态，的确是一个不简单的事情。我的经验是经常看业内的各种技术杂志，参加各种聚会，可以节约很多时间。最重要的是，交几个博学的技术高手，多和他们交流，一定获益匪浅！</p>\n<p>建议五：不要局限在技术本身，多花点精力关注用户<br>做到前面几条，就已经是千金难求的高手了。但一个真正的高手需要知道用户需要什么，如何做出让用户满意的产品。</p>\n<p>现在的软件研发越来越强烈团队协作，不少团队都配置了专门的需求分析的工程师、用户界面及用户体验的设计师，软件研发的分工越来越细。很多程序员以为只要把技术搞好，不用管用户需求和用户体验。实际上，需求方案及界面方案不可能写得非常细，具体的实施还是程序员自己来实现的。这个时候，好坏的差距很快就体现出来了。</p>\n<p>我们写程序的最终目的是满足用户需求，不是简单完成需求规划方案中的功能。所以，程序员一定要认真揣摩用户心理，能明白用户的真实需求。</p>\n<p>其次，怎么设计交互界面，让用户觉得好用，用起来舒服，这里面学问很大。我举一个小例子，每个程序窗口右上角都有三个按钮，如最小化、关闭等。乔布斯觉得不好看，不易用，他提出改用红绿蓝的交通灯。这样修改后，果然MacOS漂亮和易用了很多。</p>\n<p>目前互联网和手机上的应用开发，都非常强调小团队研发。这样研发模式速度会快很多，但对程序员的综合素质的要求也就更高了。</p>\n<p>我强烈建议程序员不要仅仅局限在技术本事，还需要多点精力考虑和用户相关的问题，学会洞察用户的需求，并努力设计好用易用的产品。做着这点的程序高手，创业成算就很大了。</p>\n<p>这样的技术高手，如果捕捉到合适的产品方向，并且具备一定带团队的能力，创业成功机会很大！事实上，绝大部分创业的技术公司，创始人都是这样的人！</p>\n"},{"_content":"每个IT企业，尤其是初创企业，非常苦恼：找不到好的程序员。现在大学、软件学院及各种培训机构，每年培养几十万的程序员，毕业的每个人都有同样困恼：找不到好的工作。问题出在哪里呢？其实，企业需要的是不是刚会写程序的人，需要来了就能干活的人，尤其能把活干好的人。而刚毕业的大学生多半刚学会如何写程序，的确很难企业需求。\n\n企业到底需要什么样的程序员，一个刚入门的程序员如何成为企业需要的高手呢？还有很多程序员问我，“我需要具备什么样的能力就可以去创业？”我一直在琢磨类似的问题。我自己写过十年程序，也在金山管理过一千多人的研发队伍，最近也在做天使投资，仔细总结了如下五点建议与所有程序员分享。\n\n建议一：只有真正喜欢才能写好程序\n喜欢写程序，做程序员就是上天堂；\n\n不喜欢写程序，做程序员就是下地狱；\n\n程序员需要整天趴在电脑前，经常没日没夜的，非常辛苦，而且工作来不得半点虚假，少写一个标点符号都不行。喜欢的人，日子过得非常开心，每写一行代码，都会有新的成就，尤其当自己的作品被广泛应用的时候，那种自豪感油然而起。不喜欢的人，坐在电脑前极端无聊，被进度压得喘不过气来，天天为找bug改bug生气。\n\n只有喜欢，只有热爱，才能把程序写好！\n\n我建议不喜欢写程序的人早点转行，不要勉强自己，免得误人误己。\n\n建议二：把程序当艺术品，像写诗一样来写代码\n现在很少有公司做code review（对写好的程序做代码级检查），于是很多人在进度的压力下潦草应付，只要测试通过就算搞定。表面上看，开发速度很快，进度有保障；但实际上，这样的程序连开发者自己都很难读懂，一旦有bug，很难调试，将来维护升级都非常困难。这样的代码多半只能重写，浪费自然严重。\n\n如果每个人写程序的时候当艺术品来写，写每行都认认真真、干干净净的，虽然速度略微慢了一点，但综合的开发成本会低很多。\n\n如何写像诗一样美的代码呢？方法也很简单。\n\n一、买几本经典的编程书，把书上所有例程全部重新写一遍，逐个比较和书上范例的差距，一步一步改善自己编程的风格和技巧。时间长了，自然就能写出象书上例程一样的代码，甚至可以比书上写得好。\n\n二、基础扎实后，多看看Linux等系统级的源代码，看看高手是如何写的，就有感觉了。\n\n三、通读一下MSDN中所有的资料，这样，“读书破万卷，下笔如有神”。\n\n还有，一定要牢记软件工程的铁律：可能出错的地方一定会出错。每个变量都做初始化，引用每个参数都会做有效性检查，在可能出错的每个地方都会做边界条件检查，这样开发出来的程序一定会稳固很多，就是出错也会很容易修改。野路子出来的高手，一般开发速度很快，但做完后bug很多，经常需要很长时间修改。而真正的高手，追求的境界是bugfreecode（零缺陷代码）。\n\n建议三：必须写够十万行代码，不要心存侥幸\n程序员象木工一样，熟能生巧。程序员必须写足够代码量的程序，才会有感觉，这是一个苦力活，没有任何捷径可走。\n\n计算机是一门实践性的科学，没有动手能力做支撑，很难做出好的科研成果。我的一个学长是美国卡内基梅隆大学的博士，卡内基梅隆大学计算机系在全世界非常出名，他说每个博士生必须写十万行代码才能毕业，卡内基梅隆大学博士进任何一个大企业基本不用面试。而国内培养的大部分研究生、博士生，动手能力都偏弱。\n\n没有写过足够代码量的，想成为高手是不可能的，只能纸上谈兵！\n\n建议四：时刻保持好奇心\n计算机技术更新换代非常快，每年都有各种各样的新技术出现。在我过去的职业生涯中，仅编程语言，我就用过basic、masm、pascal、c++、vba、Delphi、java等。需要时刻保持好奇心，不断学习各种新的东西，才能在未来的几十年职业生涯中不落伍。你要理解为什么iPhone出来很多高手用iPhone，现在一天到晚惦记着换部IPhone玩玩。\n\n人的精力有限，高手往往工作压力也比较大，如何在有限的时间内掌握整个行业动态，的确是一个不简单的事情。我的经验是经常看业内的各种技术杂志，参加各种聚会，可以节约很多时间。最重要的是，交几个博学的技术高手，多和他们交流，一定获益匪浅！\n\n建议五：不要局限在技术本身，多花点精力关注用户\n做到前面几条，就已经是千金难求的高手了。但一个真正的高手需要知道用户需要什么，如何做出让用户满意的产品。\n\n现在的软件研发越来越强烈团队协作，不少团队都配置了专门的需求分析的工程师、用户界面及用户体验的设计师，软件研发的分工越来越细。很多程序员以为只要把技术搞好，不用管用户需求和用户体验。实际上，需求方案及界面方案不可能写得非常细，具体的实施还是程序员自己来实现的。这个时候，好坏的差距很快就体现出来了。\n\n我们写程序的最终目的是满足用户需求，不是简单完成需求规划方案中的功能。所以，程序员一定要认真揣摩用户心理，能明白用户的真实需求。\n\n其次，怎么设计交互界面，让用户觉得好用，用起来舒服，这里面学问很大。我举一个小例子，每个程序窗口右上角都有三个按钮，如最小化、关闭等。乔布斯觉得不好看，不易用，他提出改用红绿蓝的交通灯。这样修改后，果然MacOS漂亮和易用了很多。\n\n目前互联网和手机上的应用开发，都非常强调小团队研发。这样研发模式速度会快很多，但对程序员的综合素质的要求也就更高了。\n\n我强烈建议程序员不要仅仅局限在技术本事，还需要多点精力考虑和用户相关的问题，学会洞察用户的需求，并努力设计好用易用的产品。做着这点的程序高手，创业成算就很大了。\n\n这样的技术高手，如果捕捉到合适的产品方向，并且具备一定带团队的能力，创业成功机会很大！事实上，绝大部分创业的技术公司，创始人都是这样的人！","source":"_posts/Spring-Cloud在国内中小型公司能用起来吗？ - 副本 (6).md","raw":"每个IT企业，尤其是初创企业，非常苦恼：找不到好的程序员。现在大学、软件学院及各种培训机构，每年培养几十万的程序员，毕业的每个人都有同样困恼：找不到好的工作。问题出在哪里呢？其实，企业需要的是不是刚会写程序的人，需要来了就能干活的人，尤其能把活干好的人。而刚毕业的大学生多半刚学会如何写程序，的确很难企业需求。\n\n企业到底需要什么样的程序员，一个刚入门的程序员如何成为企业需要的高手呢？还有很多程序员问我，“我需要具备什么样的能力就可以去创业？”我一直在琢磨类似的问题。我自己写过十年程序，也在金山管理过一千多人的研发队伍，最近也在做天使投资，仔细总结了如下五点建议与所有程序员分享。\n\n建议一：只有真正喜欢才能写好程序\n喜欢写程序，做程序员就是上天堂；\n\n不喜欢写程序，做程序员就是下地狱；\n\n程序员需要整天趴在电脑前，经常没日没夜的，非常辛苦，而且工作来不得半点虚假，少写一个标点符号都不行。喜欢的人，日子过得非常开心，每写一行代码，都会有新的成就，尤其当自己的作品被广泛应用的时候，那种自豪感油然而起。不喜欢的人，坐在电脑前极端无聊，被进度压得喘不过气来，天天为找bug改bug生气。\n\n只有喜欢，只有热爱，才能把程序写好！\n\n我建议不喜欢写程序的人早点转行，不要勉强自己，免得误人误己。\n\n建议二：把程序当艺术品，像写诗一样来写代码\n现在很少有公司做code review（对写好的程序做代码级检查），于是很多人在进度的压力下潦草应付，只要测试通过就算搞定。表面上看，开发速度很快，进度有保障；但实际上，这样的程序连开发者自己都很难读懂，一旦有bug，很难调试，将来维护升级都非常困难。这样的代码多半只能重写，浪费自然严重。\n\n如果每个人写程序的时候当艺术品来写，写每行都认认真真、干干净净的，虽然速度略微慢了一点，但综合的开发成本会低很多。\n\n如何写像诗一样美的代码呢？方法也很简单。\n\n一、买几本经典的编程书，把书上所有例程全部重新写一遍，逐个比较和书上范例的差距，一步一步改善自己编程的风格和技巧。时间长了，自然就能写出象书上例程一样的代码，甚至可以比书上写得好。\n\n二、基础扎实后，多看看Linux等系统级的源代码，看看高手是如何写的，就有感觉了。\n\n三、通读一下MSDN中所有的资料，这样，“读书破万卷，下笔如有神”。\n\n还有，一定要牢记软件工程的铁律：可能出错的地方一定会出错。每个变量都做初始化，引用每个参数都会做有效性检查，在可能出错的每个地方都会做边界条件检查，这样开发出来的程序一定会稳固很多，就是出错也会很容易修改。野路子出来的高手，一般开发速度很快，但做完后bug很多，经常需要很长时间修改。而真正的高手，追求的境界是bugfreecode（零缺陷代码）。\n\n建议三：必须写够十万行代码，不要心存侥幸\n程序员象木工一样，熟能生巧。程序员必须写足够代码量的程序，才会有感觉，这是一个苦力活，没有任何捷径可走。\n\n计算机是一门实践性的科学，没有动手能力做支撑，很难做出好的科研成果。我的一个学长是美国卡内基梅隆大学的博士，卡内基梅隆大学计算机系在全世界非常出名，他说每个博士生必须写十万行代码才能毕业，卡内基梅隆大学博士进任何一个大企业基本不用面试。而国内培养的大部分研究生、博士生，动手能力都偏弱。\n\n没有写过足够代码量的，想成为高手是不可能的，只能纸上谈兵！\n\n建议四：时刻保持好奇心\n计算机技术更新换代非常快，每年都有各种各样的新技术出现。在我过去的职业生涯中，仅编程语言，我就用过basic、masm、pascal、c++、vba、Delphi、java等。需要时刻保持好奇心，不断学习各种新的东西，才能在未来的几十年职业生涯中不落伍。你要理解为什么iPhone出来很多高手用iPhone，现在一天到晚惦记着换部IPhone玩玩。\n\n人的精力有限，高手往往工作压力也比较大，如何在有限的时间内掌握整个行业动态，的确是一个不简单的事情。我的经验是经常看业内的各种技术杂志，参加各种聚会，可以节约很多时间。最重要的是，交几个博学的技术高手，多和他们交流，一定获益匪浅！\n\n建议五：不要局限在技术本身，多花点精力关注用户\n做到前面几条，就已经是千金难求的高手了。但一个真正的高手需要知道用户需要什么，如何做出让用户满意的产品。\n\n现在的软件研发越来越强烈团队协作，不少团队都配置了专门的需求分析的工程师、用户界面及用户体验的设计师，软件研发的分工越来越细。很多程序员以为只要把技术搞好，不用管用户需求和用户体验。实际上，需求方案及界面方案不可能写得非常细，具体的实施还是程序员自己来实现的。这个时候，好坏的差距很快就体现出来了。\n\n我们写程序的最终目的是满足用户需求，不是简单完成需求规划方案中的功能。所以，程序员一定要认真揣摩用户心理，能明白用户的真实需求。\n\n其次，怎么设计交互界面，让用户觉得好用，用起来舒服，这里面学问很大。我举一个小例子，每个程序窗口右上角都有三个按钮，如最小化、关闭等。乔布斯觉得不好看，不易用，他提出改用红绿蓝的交通灯。这样修改后，果然MacOS漂亮和易用了很多。\n\n目前互联网和手机上的应用开发，都非常强调小团队研发。这样研发模式速度会快很多，但对程序员的综合素质的要求也就更高了。\n\n我强烈建议程序员不要仅仅局限在技术本事，还需要多点精力考虑和用户相关的问题，学会洞察用户的需求，并努力设计好用易用的产品。做着这点的程序高手，创业成算就很大了。\n\n这样的技术高手，如果捕捉到合适的产品方向，并且具备一定带团队的能力，创业成功机会很大！事实上，绝大部分创业的技术公司，创始人都是这样的人！","slug":"Spring-Cloud在国内中小型公司能用起来吗？ - 副本 (6)","published":1,"date":"2018-03-02T03:30:35.756Z","updated":"2018-03-02T03:27:50.610Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cje9e5cxs0002k0okp1v60qhg","content":"<p>每个IT企业，尤其是初创企业，非常苦恼：找不到好的程序员。现在大学、软件学院及各种培训机构，每年培养几十万的程序员，毕业的每个人都有同样困恼：找不到好的工作。问题出在哪里呢？其实，企业需要的是不是刚会写程序的人，需要来了就能干活的人，尤其能把活干好的人。而刚毕业的大学生多半刚学会如何写程序，的确很难企业需求。</p>\n<p>企业到底需要什么样的程序员，一个刚入门的程序员如何成为企业需要的高手呢？还有很多程序员问我，“我需要具备什么样的能力就可以去创业？”我一直在琢磨类似的问题。我自己写过十年程序，也在金山管理过一千多人的研发队伍，最近也在做天使投资，仔细总结了如下五点建议与所有程序员分享。</p>\n<p>建议一：只有真正喜欢才能写好程序<br>喜欢写程序，做程序员就是上天堂；</p>\n<p>不喜欢写程序，做程序员就是下地狱；</p>\n<p>程序员需要整天趴在电脑前，经常没日没夜的，非常辛苦，而且工作来不得半点虚假，少写一个标点符号都不行。喜欢的人，日子过得非常开心，每写一行代码，都会有新的成就，尤其当自己的作品被广泛应用的时候，那种自豪感油然而起。不喜欢的人，坐在电脑前极端无聊，被进度压得喘不过气来，天天为找bug改bug生气。</p>\n<p>只有喜欢，只有热爱，才能把程序写好！</p>\n<p>我建议不喜欢写程序的人早点转行，不要勉强自己，免得误人误己。</p>\n<p>建议二：把程序当艺术品，像写诗一样来写代码<br>现在很少有公司做code review（对写好的程序做代码级检查），于是很多人在进度的压力下潦草应付，只要测试通过就算搞定。表面上看，开发速度很快，进度有保障；但实际上，这样的程序连开发者自己都很难读懂，一旦有bug，很难调试，将来维护升级都非常困难。这样的代码多半只能重写，浪费自然严重。</p>\n<p>如果每个人写程序的时候当艺术品来写，写每行都认认真真、干干净净的，虽然速度略微慢了一点，但综合的开发成本会低很多。</p>\n<p>如何写像诗一样美的代码呢？方法也很简单。</p>\n<p>一、买几本经典的编程书，把书上所有例程全部重新写一遍，逐个比较和书上范例的差距，一步一步改善自己编程的风格和技巧。时间长了，自然就能写出象书上例程一样的代码，甚至可以比书上写得好。</p>\n<p>二、基础扎实后，多看看Linux等系统级的源代码，看看高手是如何写的，就有感觉了。</p>\n<p>三、通读一下MSDN中所有的资料，这样，“读书破万卷，下笔如有神”。</p>\n<p>还有，一定要牢记软件工程的铁律：可能出错的地方一定会出错。每个变量都做初始化，引用每个参数都会做有效性检查，在可能出错的每个地方都会做边界条件检查，这样开发出来的程序一定会稳固很多，就是出错也会很容易修改。野路子出来的高手，一般开发速度很快，但做完后bug很多，经常需要很长时间修改。而真正的高手，追求的境界是bugfreecode（零缺陷代码）。</p>\n<p>建议三：必须写够十万行代码，不要心存侥幸<br>程序员象木工一样，熟能生巧。程序员必须写足够代码量的程序，才会有感觉，这是一个苦力活，没有任何捷径可走。</p>\n<p>计算机是一门实践性的科学，没有动手能力做支撑，很难做出好的科研成果。我的一个学长是美国卡内基梅隆大学的博士，卡内基梅隆大学计算机系在全世界非常出名，他说每个博士生必须写十万行代码才能毕业，卡内基梅隆大学博士进任何一个大企业基本不用面试。而国内培养的大部分研究生、博士生，动手能力都偏弱。</p>\n<p>没有写过足够代码量的，想成为高手是不可能的，只能纸上谈兵！</p>\n<p>建议四：时刻保持好奇心<br>计算机技术更新换代非常快，每年都有各种各样的新技术出现。在我过去的职业生涯中，仅编程语言，我就用过basic、masm、pascal、c++、vba、Delphi、java等。需要时刻保持好奇心，不断学习各种新的东西，才能在未来的几十年职业生涯中不落伍。你要理解为什么iPhone出来很多高手用iPhone，现在一天到晚惦记着换部IPhone玩玩。</p>\n<p>人的精力有限，高手往往工作压力也比较大，如何在有限的时间内掌握整个行业动态，的确是一个不简单的事情。我的经验是经常看业内的各种技术杂志，参加各种聚会，可以节约很多时间。最重要的是，交几个博学的技术高手，多和他们交流，一定获益匪浅！</p>\n<p>建议五：不要局限在技术本身，多花点精力关注用户<br>做到前面几条，就已经是千金难求的高手了。但一个真正的高手需要知道用户需要什么，如何做出让用户满意的产品。</p>\n<p>现在的软件研发越来越强烈团队协作，不少团队都配置了专门的需求分析的工程师、用户界面及用户体验的设计师，软件研发的分工越来越细。很多程序员以为只要把技术搞好，不用管用户需求和用户体验。实际上，需求方案及界面方案不可能写得非常细，具体的实施还是程序员自己来实现的。这个时候，好坏的差距很快就体现出来了。</p>\n<p>我们写程序的最终目的是满足用户需求，不是简单完成需求规划方案中的功能。所以，程序员一定要认真揣摩用户心理，能明白用户的真实需求。</p>\n<p>其次，怎么设计交互界面，让用户觉得好用，用起来舒服，这里面学问很大。我举一个小例子，每个程序窗口右上角都有三个按钮，如最小化、关闭等。乔布斯觉得不好看，不易用，他提出改用红绿蓝的交通灯。这样修改后，果然MacOS漂亮和易用了很多。</p>\n<p>目前互联网和手机上的应用开发，都非常强调小团队研发。这样研发模式速度会快很多，但对程序员的综合素质的要求也就更高了。</p>\n<p>我强烈建议程序员不要仅仅局限在技术本事，还需要多点精力考虑和用户相关的问题，学会洞察用户的需求，并努力设计好用易用的产品。做着这点的程序高手，创业成算就很大了。</p>\n<p>这样的技术高手，如果捕捉到合适的产品方向，并且具备一定带团队的能力，创业成功机会很大！事实上，绝大部分创业的技术公司，创始人都是这样的人！</p>\n","site":{"data":{}},"excerpt":"","more":"<p>每个IT企业，尤其是初创企业，非常苦恼：找不到好的程序员。现在大学、软件学院及各种培训机构，每年培养几十万的程序员，毕业的每个人都有同样困恼：找不到好的工作。问题出在哪里呢？其实，企业需要的是不是刚会写程序的人，需要来了就能干活的人，尤其能把活干好的人。而刚毕业的大学生多半刚学会如何写程序，的确很难企业需求。</p>\n<p>企业到底需要什么样的程序员，一个刚入门的程序员如何成为企业需要的高手呢？还有很多程序员问我，“我需要具备什么样的能力就可以去创业？”我一直在琢磨类似的问题。我自己写过十年程序，也在金山管理过一千多人的研发队伍，最近也在做天使投资，仔细总结了如下五点建议与所有程序员分享。</p>\n<p>建议一：只有真正喜欢才能写好程序<br>喜欢写程序，做程序员就是上天堂；</p>\n<p>不喜欢写程序，做程序员就是下地狱；</p>\n<p>程序员需要整天趴在电脑前，经常没日没夜的，非常辛苦，而且工作来不得半点虚假，少写一个标点符号都不行。喜欢的人，日子过得非常开心，每写一行代码，都会有新的成就，尤其当自己的作品被广泛应用的时候，那种自豪感油然而起。不喜欢的人，坐在电脑前极端无聊，被进度压得喘不过气来，天天为找bug改bug生气。</p>\n<p>只有喜欢，只有热爱，才能把程序写好！</p>\n<p>我建议不喜欢写程序的人早点转行，不要勉强自己，免得误人误己。</p>\n<p>建议二：把程序当艺术品，像写诗一样来写代码<br>现在很少有公司做code review（对写好的程序做代码级检查），于是很多人在进度的压力下潦草应付，只要测试通过就算搞定。表面上看，开发速度很快，进度有保障；但实际上，这样的程序连开发者自己都很难读懂，一旦有bug，很难调试，将来维护升级都非常困难。这样的代码多半只能重写，浪费自然严重。</p>\n<p>如果每个人写程序的时候当艺术品来写，写每行都认认真真、干干净净的，虽然速度略微慢了一点，但综合的开发成本会低很多。</p>\n<p>如何写像诗一样美的代码呢？方法也很简单。</p>\n<p>一、买几本经典的编程书，把书上所有例程全部重新写一遍，逐个比较和书上范例的差距，一步一步改善自己编程的风格和技巧。时间长了，自然就能写出象书上例程一样的代码，甚至可以比书上写得好。</p>\n<p>二、基础扎实后，多看看Linux等系统级的源代码，看看高手是如何写的，就有感觉了。</p>\n<p>三、通读一下MSDN中所有的资料，这样，“读书破万卷，下笔如有神”。</p>\n<p>还有，一定要牢记软件工程的铁律：可能出错的地方一定会出错。每个变量都做初始化，引用每个参数都会做有效性检查，在可能出错的每个地方都会做边界条件检查，这样开发出来的程序一定会稳固很多，就是出错也会很容易修改。野路子出来的高手，一般开发速度很快，但做完后bug很多，经常需要很长时间修改。而真正的高手，追求的境界是bugfreecode（零缺陷代码）。</p>\n<p>建议三：必须写够十万行代码，不要心存侥幸<br>程序员象木工一样，熟能生巧。程序员必须写足够代码量的程序，才会有感觉，这是一个苦力活，没有任何捷径可走。</p>\n<p>计算机是一门实践性的科学，没有动手能力做支撑，很难做出好的科研成果。我的一个学长是美国卡内基梅隆大学的博士，卡内基梅隆大学计算机系在全世界非常出名，他说每个博士生必须写十万行代码才能毕业，卡内基梅隆大学博士进任何一个大企业基本不用面试。而国内培养的大部分研究生、博士生，动手能力都偏弱。</p>\n<p>没有写过足够代码量的，想成为高手是不可能的，只能纸上谈兵！</p>\n<p>建议四：时刻保持好奇心<br>计算机技术更新换代非常快，每年都有各种各样的新技术出现。在我过去的职业生涯中，仅编程语言，我就用过basic、masm、pascal、c++、vba、Delphi、java等。需要时刻保持好奇心，不断学习各种新的东西，才能在未来的几十年职业生涯中不落伍。你要理解为什么iPhone出来很多高手用iPhone，现在一天到晚惦记着换部IPhone玩玩。</p>\n<p>人的精力有限，高手往往工作压力也比较大，如何在有限的时间内掌握整个行业动态，的确是一个不简单的事情。我的经验是经常看业内的各种技术杂志，参加各种聚会，可以节约很多时间。最重要的是，交几个博学的技术高手，多和他们交流，一定获益匪浅！</p>\n<p>建议五：不要局限在技术本身，多花点精力关注用户<br>做到前面几条，就已经是千金难求的高手了。但一个真正的高手需要知道用户需要什么，如何做出让用户满意的产品。</p>\n<p>现在的软件研发越来越强烈团队协作，不少团队都配置了专门的需求分析的工程师、用户界面及用户体验的设计师，软件研发的分工越来越细。很多程序员以为只要把技术搞好，不用管用户需求和用户体验。实际上，需求方案及界面方案不可能写得非常细，具体的实施还是程序员自己来实现的。这个时候，好坏的差距很快就体现出来了。</p>\n<p>我们写程序的最终目的是满足用户需求，不是简单完成需求规划方案中的功能。所以，程序员一定要认真揣摩用户心理，能明白用户的真实需求。</p>\n<p>其次，怎么设计交互界面，让用户觉得好用，用起来舒服，这里面学问很大。我举一个小例子，每个程序窗口右上角都有三个按钮，如最小化、关闭等。乔布斯觉得不好看，不易用，他提出改用红绿蓝的交通灯。这样修改后，果然MacOS漂亮和易用了很多。</p>\n<p>目前互联网和手机上的应用开发，都非常强调小团队研发。这样研发模式速度会快很多，但对程序员的综合素质的要求也就更高了。</p>\n<p>我强烈建议程序员不要仅仅局限在技术本事，还需要多点精力考虑和用户相关的问题，学会洞察用户的需求，并努力设计好用易用的产品。做着这点的程序高手，创业成算就很大了。</p>\n<p>这样的技术高手，如果捕捉到合适的产品方向，并且具备一定带团队的能力，创业成功机会很大！事实上，绝大部分创业的技术公司，创始人都是这样的人！</p>\n"},{"_content":"每个IT企业，尤其是初创企业，非常苦恼：找不到好的程序员。现在大学、软件学院及各种培训机构，每年培养几十万的程序员，毕业的每个人都有同样困恼：找不到好的工作。问题出在哪里呢？其实，企业需要的是不是刚会写程序的人，需要来了就能干活的人，尤其能把活干好的人。而刚毕业的大学生多半刚学会如何写程序，的确很难企业需求。\n\n企业到底需要什么样的程序员，一个刚入门的程序员如何成为企业需要的高手呢？还有很多程序员问我，“我需要具备什么样的能力就可以去创业？”我一直在琢磨类似的问题。我自己写过十年程序，也在金山管理过一千多人的研发队伍，最近也在做天使投资，仔细总结了如下五点建议与所有程序员分享。\n\n建议一：只有真正喜欢才能写好程序\n喜欢写程序，做程序员就是上天堂；\n\n不喜欢写程序，做程序员就是下地狱；\n\n程序员需要整天趴在电脑前，经常没日没夜的，非常辛苦，而且工作来不得半点虚假，少写一个标点符号都不行。喜欢的人，日子过得非常开心，每写一行代码，都会有新的成就，尤其当自己的作品被广泛应用的时候，那种自豪感油然而起。不喜欢的人，坐在电脑前极端无聊，被进度压得喘不过气来，天天为找bug改bug生气。\n\n只有喜欢，只有热爱，才能把程序写好！\n\n我建议不喜欢写程序的人早点转行，不要勉强自己，免得误人误己。\n\n建议二：把程序当艺术品，像写诗一样来写代码\n现在很少有公司做code review（对写好的程序做代码级检查），于是很多人在进度的压力下潦草应付，只要测试通过就算搞定。表面上看，开发速度很快，进度有保障；但实际上，这样的程序连开发者自己都很难读懂，一旦有bug，很难调试，将来维护升级都非常困难。这样的代码多半只能重写，浪费自然严重。\n\n如果每个人写程序的时候当艺术品来写，写每行都认认真真、干干净净的，虽然速度略微慢了一点，但综合的开发成本会低很多。\n\n如何写像诗一样美的代码呢？方法也很简单。\n\n一、买几本经典的编程书，把书上所有例程全部重新写一遍，逐个比较和书上范例的差距，一步一步改善自己编程的风格和技巧。时间长了，自然就能写出象书上例程一样的代码，甚至可以比书上写得好。\n\n二、基础扎实后，多看看Linux等系统级的源代码，看看高手是如何写的，就有感觉了。\n\n三、通读一下MSDN中所有的资料，这样，“读书破万卷，下笔如有神”。\n\n还有，一定要牢记软件工程的铁律：可能出错的地方一定会出错。每个变量都做初始化，引用每个参数都会做有效性检查，在可能出错的每个地方都会做边界条件检查，这样开发出来的程序一定会稳固很多，就是出错也会很容易修改。野路子出来的高手，一般开发速度很快，但做完后bug很多，经常需要很长时间修改。而真正的高手，追求的境界是bugfreecode（零缺陷代码）。\n\n建议三：必须写够十万行代码，不要心存侥幸\n程序员象木工一样，熟能生巧。程序员必须写足够代码量的程序，才会有感觉，这是一个苦力活，没有任何捷径可走。\n\n计算机是一门实践性的科学，没有动手能力做支撑，很难做出好的科研成果。我的一个学长是美国卡内基梅隆大学的博士，卡内基梅隆大学计算机系在全世界非常出名，他说每个博士生必须写十万行代码才能毕业，卡内基梅隆大学博士进任何一个大企业基本不用面试。而国内培养的大部分研究生、博士生，动手能力都偏弱。\n\n没有写过足够代码量的，想成为高手是不可能的，只能纸上谈兵！\n\n建议四：时刻保持好奇心\n计算机技术更新换代非常快，每年都有各种各样的新技术出现。在我过去的职业生涯中，仅编程语言，我就用过basic、masm、pascal、c++、vba、Delphi、java等。需要时刻保持好奇心，不断学习各种新的东西，才能在未来的几十年职业生涯中不落伍。你要理解为什么iPhone出来很多高手用iPhone，现在一天到晚惦记着换部IPhone玩玩。\n\n人的精力有限，高手往往工作压力也比较大，如何在有限的时间内掌握整个行业动态，的确是一个不简单的事情。我的经验是经常看业内的各种技术杂志，参加各种聚会，可以节约很多时间。最重要的是，交几个博学的技术高手，多和他们交流，一定获益匪浅！\n\n建议五：不要局限在技术本身，多花点精力关注用户\n做到前面几条，就已经是千金难求的高手了。但一个真正的高手需要知道用户需要什么，如何做出让用户满意的产品。\n\n现在的软件研发越来越强烈团队协作，不少团队都配置了专门的需求分析的工程师、用户界面及用户体验的设计师，软件研发的分工越来越细。很多程序员以为只要把技术搞好，不用管用户需求和用户体验。实际上，需求方案及界面方案不可能写得非常细，具体的实施还是程序员自己来实现的。这个时候，好坏的差距很快就体现出来了。\n\n我们写程序的最终目的是满足用户需求，不是简单完成需求规划方案中的功能。所以，程序员一定要认真揣摩用户心理，能明白用户的真实需求。\n\n其次，怎么设计交互界面，让用户觉得好用，用起来舒服，这里面学问很大。我举一个小例子，每个程序窗口右上角都有三个按钮，如最小化、关闭等。乔布斯觉得不好看，不易用，他提出改用红绿蓝的交通灯。这样修改后，果然MacOS漂亮和易用了很多。\n\n目前互联网和手机上的应用开发，都非常强调小团队研发。这样研发模式速度会快很多，但对程序员的综合素质的要求也就更高了。\n\n我强烈建议程序员不要仅仅局限在技术本事，还需要多点精力考虑和用户相关的问题，学会洞察用户的需求，并努力设计好用易用的产品。做着这点的程序高手，创业成算就很大了。\n\n这样的技术高手，如果捕捉到合适的产品方向，并且具备一定带团队的能力，创业成功机会很大！事实上，绝大部分创业的技术公司，创始人都是这样的人！","source":"_posts/Spring-Cloud在国内中小型公司能用起来吗？ - 副本 (4).md","raw":"每个IT企业，尤其是初创企业，非常苦恼：找不到好的程序员。现在大学、软件学院及各种培训机构，每年培养几十万的程序员，毕业的每个人都有同样困恼：找不到好的工作。问题出在哪里呢？其实，企业需要的是不是刚会写程序的人，需要来了就能干活的人，尤其能把活干好的人。而刚毕业的大学生多半刚学会如何写程序，的确很难企业需求。\n\n企业到底需要什么样的程序员，一个刚入门的程序员如何成为企业需要的高手呢？还有很多程序员问我，“我需要具备什么样的能力就可以去创业？”我一直在琢磨类似的问题。我自己写过十年程序，也在金山管理过一千多人的研发队伍，最近也在做天使投资，仔细总结了如下五点建议与所有程序员分享。\n\n建议一：只有真正喜欢才能写好程序\n喜欢写程序，做程序员就是上天堂；\n\n不喜欢写程序，做程序员就是下地狱；\n\n程序员需要整天趴在电脑前，经常没日没夜的，非常辛苦，而且工作来不得半点虚假，少写一个标点符号都不行。喜欢的人，日子过得非常开心，每写一行代码，都会有新的成就，尤其当自己的作品被广泛应用的时候，那种自豪感油然而起。不喜欢的人，坐在电脑前极端无聊，被进度压得喘不过气来，天天为找bug改bug生气。\n\n只有喜欢，只有热爱，才能把程序写好！\n\n我建议不喜欢写程序的人早点转行，不要勉强自己，免得误人误己。\n\n建议二：把程序当艺术品，像写诗一样来写代码\n现在很少有公司做code review（对写好的程序做代码级检查），于是很多人在进度的压力下潦草应付，只要测试通过就算搞定。表面上看，开发速度很快，进度有保障；但实际上，这样的程序连开发者自己都很难读懂，一旦有bug，很难调试，将来维护升级都非常困难。这样的代码多半只能重写，浪费自然严重。\n\n如果每个人写程序的时候当艺术品来写，写每行都认认真真、干干净净的，虽然速度略微慢了一点，但综合的开发成本会低很多。\n\n如何写像诗一样美的代码呢？方法也很简单。\n\n一、买几本经典的编程书，把书上所有例程全部重新写一遍，逐个比较和书上范例的差距，一步一步改善自己编程的风格和技巧。时间长了，自然就能写出象书上例程一样的代码，甚至可以比书上写得好。\n\n二、基础扎实后，多看看Linux等系统级的源代码，看看高手是如何写的，就有感觉了。\n\n三、通读一下MSDN中所有的资料，这样，“读书破万卷，下笔如有神”。\n\n还有，一定要牢记软件工程的铁律：可能出错的地方一定会出错。每个变量都做初始化，引用每个参数都会做有效性检查，在可能出错的每个地方都会做边界条件检查，这样开发出来的程序一定会稳固很多，就是出错也会很容易修改。野路子出来的高手，一般开发速度很快，但做完后bug很多，经常需要很长时间修改。而真正的高手，追求的境界是bugfreecode（零缺陷代码）。\n\n建议三：必须写够十万行代码，不要心存侥幸\n程序员象木工一样，熟能生巧。程序员必须写足够代码量的程序，才会有感觉，这是一个苦力活，没有任何捷径可走。\n\n计算机是一门实践性的科学，没有动手能力做支撑，很难做出好的科研成果。我的一个学长是美国卡内基梅隆大学的博士，卡内基梅隆大学计算机系在全世界非常出名，他说每个博士生必须写十万行代码才能毕业，卡内基梅隆大学博士进任何一个大企业基本不用面试。而国内培养的大部分研究生、博士生，动手能力都偏弱。\n\n没有写过足够代码量的，想成为高手是不可能的，只能纸上谈兵！\n\n建议四：时刻保持好奇心\n计算机技术更新换代非常快，每年都有各种各样的新技术出现。在我过去的职业生涯中，仅编程语言，我就用过basic、masm、pascal、c++、vba、Delphi、java等。需要时刻保持好奇心，不断学习各种新的东西，才能在未来的几十年职业生涯中不落伍。你要理解为什么iPhone出来很多高手用iPhone，现在一天到晚惦记着换部IPhone玩玩。\n\n人的精力有限，高手往往工作压力也比较大，如何在有限的时间内掌握整个行业动态，的确是一个不简单的事情。我的经验是经常看业内的各种技术杂志，参加各种聚会，可以节约很多时间。最重要的是，交几个博学的技术高手，多和他们交流，一定获益匪浅！\n\n建议五：不要局限在技术本身，多花点精力关注用户\n做到前面几条，就已经是千金难求的高手了。但一个真正的高手需要知道用户需要什么，如何做出让用户满意的产品。\n\n现在的软件研发越来越强烈团队协作，不少团队都配置了专门的需求分析的工程师、用户界面及用户体验的设计师，软件研发的分工越来越细。很多程序员以为只要把技术搞好，不用管用户需求和用户体验。实际上，需求方案及界面方案不可能写得非常细，具体的实施还是程序员自己来实现的。这个时候，好坏的差距很快就体现出来了。\n\n我们写程序的最终目的是满足用户需求，不是简单完成需求规划方案中的功能。所以，程序员一定要认真揣摩用户心理，能明白用户的真实需求。\n\n其次，怎么设计交互界面，让用户觉得好用，用起来舒服，这里面学问很大。我举一个小例子，每个程序窗口右上角都有三个按钮，如最小化、关闭等。乔布斯觉得不好看，不易用，他提出改用红绿蓝的交通灯。这样修改后，果然MacOS漂亮和易用了很多。\n\n目前互联网和手机上的应用开发，都非常强调小团队研发。这样研发模式速度会快很多，但对程序员的综合素质的要求也就更高了。\n\n我强烈建议程序员不要仅仅局限在技术本事，还需要多点精力考虑和用户相关的问题，学会洞察用户的需求，并努力设计好用易用的产品。做着这点的程序高手，创业成算就很大了。\n\n这样的技术高手，如果捕捉到合适的产品方向，并且具备一定带团队的能力，创业成功机会很大！事实上，绝大部分创业的技术公司，创始人都是这样的人！","slug":"Spring-Cloud在国内中小型公司能用起来吗？ - 副本 (4)","published":1,"date":"2018-03-02T03:30:33.809Z","updated":"2018-03-02T03:27:50.610Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cje9e5cxv0003k0okakytmn9u","content":"<p>每个IT企业，尤其是初创企业，非常苦恼：找不到好的程序员。现在大学、软件学院及各种培训机构，每年培养几十万的程序员，毕业的每个人都有同样困恼：找不到好的工作。问题出在哪里呢？其实，企业需要的是不是刚会写程序的人，需要来了就能干活的人，尤其能把活干好的人。而刚毕业的大学生多半刚学会如何写程序，的确很难企业需求。</p>\n<p>企业到底需要什么样的程序员，一个刚入门的程序员如何成为企业需要的高手呢？还有很多程序员问我，“我需要具备什么样的能力就可以去创业？”我一直在琢磨类似的问题。我自己写过十年程序，也在金山管理过一千多人的研发队伍，最近也在做天使投资，仔细总结了如下五点建议与所有程序员分享。</p>\n<p>建议一：只有真正喜欢才能写好程序<br>喜欢写程序，做程序员就是上天堂；</p>\n<p>不喜欢写程序，做程序员就是下地狱；</p>\n<p>程序员需要整天趴在电脑前，经常没日没夜的，非常辛苦，而且工作来不得半点虚假，少写一个标点符号都不行。喜欢的人，日子过得非常开心，每写一行代码，都会有新的成就，尤其当自己的作品被广泛应用的时候，那种自豪感油然而起。不喜欢的人，坐在电脑前极端无聊，被进度压得喘不过气来，天天为找bug改bug生气。</p>\n<p>只有喜欢，只有热爱，才能把程序写好！</p>\n<p>我建议不喜欢写程序的人早点转行，不要勉强自己，免得误人误己。</p>\n<p>建议二：把程序当艺术品，像写诗一样来写代码<br>现在很少有公司做code review（对写好的程序做代码级检查），于是很多人在进度的压力下潦草应付，只要测试通过就算搞定。表面上看，开发速度很快，进度有保障；但实际上，这样的程序连开发者自己都很难读懂，一旦有bug，很难调试，将来维护升级都非常困难。这样的代码多半只能重写，浪费自然严重。</p>\n<p>如果每个人写程序的时候当艺术品来写，写每行都认认真真、干干净净的，虽然速度略微慢了一点，但综合的开发成本会低很多。</p>\n<p>如何写像诗一样美的代码呢？方法也很简单。</p>\n<p>一、买几本经典的编程书，把书上所有例程全部重新写一遍，逐个比较和书上范例的差距，一步一步改善自己编程的风格和技巧。时间长了，自然就能写出象书上例程一样的代码，甚至可以比书上写得好。</p>\n<p>二、基础扎实后，多看看Linux等系统级的源代码，看看高手是如何写的，就有感觉了。</p>\n<p>三、通读一下MSDN中所有的资料，这样，“读书破万卷，下笔如有神”。</p>\n<p>还有，一定要牢记软件工程的铁律：可能出错的地方一定会出错。每个变量都做初始化，引用每个参数都会做有效性检查，在可能出错的每个地方都会做边界条件检查，这样开发出来的程序一定会稳固很多，就是出错也会很容易修改。野路子出来的高手，一般开发速度很快，但做完后bug很多，经常需要很长时间修改。而真正的高手，追求的境界是bugfreecode（零缺陷代码）。</p>\n<p>建议三：必须写够十万行代码，不要心存侥幸<br>程序员象木工一样，熟能生巧。程序员必须写足够代码量的程序，才会有感觉，这是一个苦力活，没有任何捷径可走。</p>\n<p>计算机是一门实践性的科学，没有动手能力做支撑，很难做出好的科研成果。我的一个学长是美国卡内基梅隆大学的博士，卡内基梅隆大学计算机系在全世界非常出名，他说每个博士生必须写十万行代码才能毕业，卡内基梅隆大学博士进任何一个大企业基本不用面试。而国内培养的大部分研究生、博士生，动手能力都偏弱。</p>\n<p>没有写过足够代码量的，想成为高手是不可能的，只能纸上谈兵！</p>\n<p>建议四：时刻保持好奇心<br>计算机技术更新换代非常快，每年都有各种各样的新技术出现。在我过去的职业生涯中，仅编程语言，我就用过basic、masm、pascal、c++、vba、Delphi、java等。需要时刻保持好奇心，不断学习各种新的东西，才能在未来的几十年职业生涯中不落伍。你要理解为什么iPhone出来很多高手用iPhone，现在一天到晚惦记着换部IPhone玩玩。</p>\n<p>人的精力有限，高手往往工作压力也比较大，如何在有限的时间内掌握整个行业动态，的确是一个不简单的事情。我的经验是经常看业内的各种技术杂志，参加各种聚会，可以节约很多时间。最重要的是，交几个博学的技术高手，多和他们交流，一定获益匪浅！</p>\n<p>建议五：不要局限在技术本身，多花点精力关注用户<br>做到前面几条，就已经是千金难求的高手了。但一个真正的高手需要知道用户需要什么，如何做出让用户满意的产品。</p>\n<p>现在的软件研发越来越强烈团队协作，不少团队都配置了专门的需求分析的工程师、用户界面及用户体验的设计师，软件研发的分工越来越细。很多程序员以为只要把技术搞好，不用管用户需求和用户体验。实际上，需求方案及界面方案不可能写得非常细，具体的实施还是程序员自己来实现的。这个时候，好坏的差距很快就体现出来了。</p>\n<p>我们写程序的最终目的是满足用户需求，不是简单完成需求规划方案中的功能。所以，程序员一定要认真揣摩用户心理，能明白用户的真实需求。</p>\n<p>其次，怎么设计交互界面，让用户觉得好用，用起来舒服，这里面学问很大。我举一个小例子，每个程序窗口右上角都有三个按钮，如最小化、关闭等。乔布斯觉得不好看，不易用，他提出改用红绿蓝的交通灯。这样修改后，果然MacOS漂亮和易用了很多。</p>\n<p>目前互联网和手机上的应用开发，都非常强调小团队研发。这样研发模式速度会快很多，但对程序员的综合素质的要求也就更高了。</p>\n<p>我强烈建议程序员不要仅仅局限在技术本事，还需要多点精力考虑和用户相关的问题，学会洞察用户的需求，并努力设计好用易用的产品。做着这点的程序高手，创业成算就很大了。</p>\n<p>这样的技术高手，如果捕捉到合适的产品方向，并且具备一定带团队的能力，创业成功机会很大！事实上，绝大部分创业的技术公司，创始人都是这样的人！</p>\n","site":{"data":{}},"excerpt":"","more":"<p>每个IT企业，尤其是初创企业，非常苦恼：找不到好的程序员。现在大学、软件学院及各种培训机构，每年培养几十万的程序员，毕业的每个人都有同样困恼：找不到好的工作。问题出在哪里呢？其实，企业需要的是不是刚会写程序的人，需要来了就能干活的人，尤其能把活干好的人。而刚毕业的大学生多半刚学会如何写程序，的确很难企业需求。</p>\n<p>企业到底需要什么样的程序员，一个刚入门的程序员如何成为企业需要的高手呢？还有很多程序员问我，“我需要具备什么样的能力就可以去创业？”我一直在琢磨类似的问题。我自己写过十年程序，也在金山管理过一千多人的研发队伍，最近也在做天使投资，仔细总结了如下五点建议与所有程序员分享。</p>\n<p>建议一：只有真正喜欢才能写好程序<br>喜欢写程序，做程序员就是上天堂；</p>\n<p>不喜欢写程序，做程序员就是下地狱；</p>\n<p>程序员需要整天趴在电脑前，经常没日没夜的，非常辛苦，而且工作来不得半点虚假，少写一个标点符号都不行。喜欢的人，日子过得非常开心，每写一行代码，都会有新的成就，尤其当自己的作品被广泛应用的时候，那种自豪感油然而起。不喜欢的人，坐在电脑前极端无聊，被进度压得喘不过气来，天天为找bug改bug生气。</p>\n<p>只有喜欢，只有热爱，才能把程序写好！</p>\n<p>我建议不喜欢写程序的人早点转行，不要勉强自己，免得误人误己。</p>\n<p>建议二：把程序当艺术品，像写诗一样来写代码<br>现在很少有公司做code review（对写好的程序做代码级检查），于是很多人在进度的压力下潦草应付，只要测试通过就算搞定。表面上看，开发速度很快，进度有保障；但实际上，这样的程序连开发者自己都很难读懂，一旦有bug，很难调试，将来维护升级都非常困难。这样的代码多半只能重写，浪费自然严重。</p>\n<p>如果每个人写程序的时候当艺术品来写，写每行都认认真真、干干净净的，虽然速度略微慢了一点，但综合的开发成本会低很多。</p>\n<p>如何写像诗一样美的代码呢？方法也很简单。</p>\n<p>一、买几本经典的编程书，把书上所有例程全部重新写一遍，逐个比较和书上范例的差距，一步一步改善自己编程的风格和技巧。时间长了，自然就能写出象书上例程一样的代码，甚至可以比书上写得好。</p>\n<p>二、基础扎实后，多看看Linux等系统级的源代码，看看高手是如何写的，就有感觉了。</p>\n<p>三、通读一下MSDN中所有的资料，这样，“读书破万卷，下笔如有神”。</p>\n<p>还有，一定要牢记软件工程的铁律：可能出错的地方一定会出错。每个变量都做初始化，引用每个参数都会做有效性检查，在可能出错的每个地方都会做边界条件检查，这样开发出来的程序一定会稳固很多，就是出错也会很容易修改。野路子出来的高手，一般开发速度很快，但做完后bug很多，经常需要很长时间修改。而真正的高手，追求的境界是bugfreecode（零缺陷代码）。</p>\n<p>建议三：必须写够十万行代码，不要心存侥幸<br>程序员象木工一样，熟能生巧。程序员必须写足够代码量的程序，才会有感觉，这是一个苦力活，没有任何捷径可走。</p>\n<p>计算机是一门实践性的科学，没有动手能力做支撑，很难做出好的科研成果。我的一个学长是美国卡内基梅隆大学的博士，卡内基梅隆大学计算机系在全世界非常出名，他说每个博士生必须写十万行代码才能毕业，卡内基梅隆大学博士进任何一个大企业基本不用面试。而国内培养的大部分研究生、博士生，动手能力都偏弱。</p>\n<p>没有写过足够代码量的，想成为高手是不可能的，只能纸上谈兵！</p>\n<p>建议四：时刻保持好奇心<br>计算机技术更新换代非常快，每年都有各种各样的新技术出现。在我过去的职业生涯中，仅编程语言，我就用过basic、masm、pascal、c++、vba、Delphi、java等。需要时刻保持好奇心，不断学习各种新的东西，才能在未来的几十年职业生涯中不落伍。你要理解为什么iPhone出来很多高手用iPhone，现在一天到晚惦记着换部IPhone玩玩。</p>\n<p>人的精力有限，高手往往工作压力也比较大，如何在有限的时间内掌握整个行业动态，的确是一个不简单的事情。我的经验是经常看业内的各种技术杂志，参加各种聚会，可以节约很多时间。最重要的是，交几个博学的技术高手，多和他们交流，一定获益匪浅！</p>\n<p>建议五：不要局限在技术本身，多花点精力关注用户<br>做到前面几条，就已经是千金难求的高手了。但一个真正的高手需要知道用户需要什么，如何做出让用户满意的产品。</p>\n<p>现在的软件研发越来越强烈团队协作，不少团队都配置了专门的需求分析的工程师、用户界面及用户体验的设计师，软件研发的分工越来越细。很多程序员以为只要把技术搞好，不用管用户需求和用户体验。实际上，需求方案及界面方案不可能写得非常细，具体的实施还是程序员自己来实现的。这个时候，好坏的差距很快就体现出来了。</p>\n<p>我们写程序的最终目的是满足用户需求，不是简单完成需求规划方案中的功能。所以，程序员一定要认真揣摩用户心理，能明白用户的真实需求。</p>\n<p>其次，怎么设计交互界面，让用户觉得好用，用起来舒服，这里面学问很大。我举一个小例子，每个程序窗口右上角都有三个按钮，如最小化、关闭等。乔布斯觉得不好看，不易用，他提出改用红绿蓝的交通灯。这样修改后，果然MacOS漂亮和易用了很多。</p>\n<p>目前互联网和手机上的应用开发，都非常强调小团队研发。这样研发模式速度会快很多，但对程序员的综合素质的要求也就更高了。</p>\n<p>我强烈建议程序员不要仅仅局限在技术本事，还需要多点精力考虑和用户相关的问题，学会洞察用户的需求，并努力设计好用易用的产品。做着这点的程序高手，创业成算就很大了。</p>\n<p>这样的技术高手，如果捕捉到合适的产品方向，并且具备一定带团队的能力，创业成功机会很大！事实上，绝大部分创业的技术公司，创始人都是这样的人！</p>\n"},{"_content":"每个IT企业，尤其是初创企业，非常苦恼：找不到好的程序员。现在大学、软件学院及各种培训机构，每年培养几十万的程序员，毕业的每个人都有同样困恼：找不到好的工作。问题出在哪里呢？其实，企业需要的是不是刚会写程序的人，需要来了就能干活的人，尤其能把活干好的人。而刚毕业的大学生多半刚学会如何写程序，的确很难企业需求。\n\n企业到底需要什么样的程序员，一个刚入门的程序员如何成为企业需要的高手呢？还有很多程序员问我，“我需要具备什么样的能力就可以去创业？”我一直在琢磨类似的问题。我自己写过十年程序，也在金山管理过一千多人的研发队伍，最近也在做天使投资，仔细总结了如下五点建议与所有程序员分享。\n\n建议一：只有真正喜欢才能写好程序\n喜欢写程序，做程序员就是上天堂；\n\n不喜欢写程序，做程序员就是下地狱；\n\n程序员需要整天趴在电脑前，经常没日没夜的，非常辛苦，而且工作来不得半点虚假，少写一个标点符号都不行。喜欢的人，日子过得非常开心，每写一行代码，都会有新的成就，尤其当自己的作品被广泛应用的时候，那种自豪感油然而起。不喜欢的人，坐在电脑前极端无聊，被进度压得喘不过气来，天天为找bug改bug生气。\n\n只有喜欢，只有热爱，才能把程序写好！\n\n我建议不喜欢写程序的人早点转行，不要勉强自己，免得误人误己。\n\n建议二：把程序当艺术品，像写诗一样来写代码\n现在很少有公司做code review（对写好的程序做代码级检查），于是很多人在进度的压力下潦草应付，只要测试通过就算搞定。表面上看，开发速度很快，进度有保障；但实际上，这样的程序连开发者自己都很难读懂，一旦有bug，很难调试，将来维护升级都非常困难。这样的代码多半只能重写，浪费自然严重。\n\n如果每个人写程序的时候当艺术品来写，写每行都认认真真、干干净净的，虽然速度略微慢了一点，但综合的开发成本会低很多。\n\n如何写像诗一样美的代码呢？方法也很简单。\n\n一、买几本经典的编程书，把书上所有例程全部重新写一遍，逐个比较和书上范例的差距，一步一步改善自己编程的风格和技巧。时间长了，自然就能写出象书上例程一样的代码，甚至可以比书上写得好。\n\n二、基础扎实后，多看看Linux等系统级的源代码，看看高手是如何写的，就有感觉了。\n\n三、通读一下MSDN中所有的资料，这样，“读书破万卷，下笔如有神”。\n\n还有，一定要牢记软件工程的铁律：可能出错的地方一定会出错。每个变量都做初始化，引用每个参数都会做有效性检查，在可能出错的每个地方都会做边界条件检查，这样开发出来的程序一定会稳固很多，就是出错也会很容易修改。野路子出来的高手，一般开发速度很快，但做完后bug很多，经常需要很长时间修改。而真正的高手，追求的境界是bugfreecode（零缺陷代码）。\n\n建议三：必须写够十万行代码，不要心存侥幸\n程序员象木工一样，熟能生巧。程序员必须写足够代码量的程序，才会有感觉，这是一个苦力活，没有任何捷径可走。\n\n计算机是一门实践性的科学，没有动手能力做支撑，很难做出好的科研成果。我的一个学长是美国卡内基梅隆大学的博士，卡内基梅隆大学计算机系在全世界非常出名，他说每个博士生必须写十万行代码才能毕业，卡内基梅隆大学博士进任何一个大企业基本不用面试。而国内培养的大部分研究生、博士生，动手能力都偏弱。\n\n没有写过足够代码量的，想成为高手是不可能的，只能纸上谈兵！\n\n建议四：时刻保持好奇心\n计算机技术更新换代非常快，每年都有各种各样的新技术出现。在我过去的职业生涯中，仅编程语言，我就用过basic、masm、pascal、c++、vba、Delphi、java等。需要时刻保持好奇心，不断学习各种新的东西，才能在未来的几十年职业生涯中不落伍。你要理解为什么iPhone出来很多高手用iPhone，现在一天到晚惦记着换部IPhone玩玩。\n\n人的精力有限，高手往往工作压力也比较大，如何在有限的时间内掌握整个行业动态，的确是一个不简单的事情。我的经验是经常看业内的各种技术杂志，参加各种聚会，可以节约很多时间。最重要的是，交几个博学的技术高手，多和他们交流，一定获益匪浅！\n\n建议五：不要局限在技术本身，多花点精力关注用户\n做到前面几条，就已经是千金难求的高手了。但一个真正的高手需要知道用户需要什么，如何做出让用户满意的产品。\n\n现在的软件研发越来越强烈团队协作，不少团队都配置了专门的需求分析的工程师、用户界面及用户体验的设计师，软件研发的分工越来越细。很多程序员以为只要把技术搞好，不用管用户需求和用户体验。实际上，需求方案及界面方案不可能写得非常细，具体的实施还是程序员自己来实现的。这个时候，好坏的差距很快就体现出来了。\n\n我们写程序的最终目的是满足用户需求，不是简单完成需求规划方案中的功能。所以，程序员一定要认真揣摩用户心理，能明白用户的真实需求。\n\n其次，怎么设计交互界面，让用户觉得好用，用起来舒服，这里面学问很大。我举一个小例子，每个程序窗口右上角都有三个按钮，如最小化、关闭等。乔布斯觉得不好看，不易用，他提出改用红绿蓝的交通灯。这样修改后，果然MacOS漂亮和易用了很多。\n\n目前互联网和手机上的应用开发，都非常强调小团队研发。这样研发模式速度会快很多，但对程序员的综合素质的要求也就更高了。\n\n我强烈建议程序员不要仅仅局限在技术本事，还需要多点精力考虑和用户相关的问题，学会洞察用户的需求，并努力设计好用易用的产品。做着这点的程序高手，创业成算就很大了。\n\n这样的技术高手，如果捕捉到合适的产品方向，并且具备一定带团队的能力，创业成功机会很大！事实上，绝大部分创业的技术公司，创始人都是这样的人！","source":"_posts/Spring-Cloud在国内中小型公司能用起来吗？ - 副本.md","raw":"每个IT企业，尤其是初创企业，非常苦恼：找不到好的程序员。现在大学、软件学院及各种培训机构，每年培养几十万的程序员，毕业的每个人都有同样困恼：找不到好的工作。问题出在哪里呢？其实，企业需要的是不是刚会写程序的人，需要来了就能干活的人，尤其能把活干好的人。而刚毕业的大学生多半刚学会如何写程序，的确很难企业需求。\n\n企业到底需要什么样的程序员，一个刚入门的程序员如何成为企业需要的高手呢？还有很多程序员问我，“我需要具备什么样的能力就可以去创业？”我一直在琢磨类似的问题。我自己写过十年程序，也在金山管理过一千多人的研发队伍，最近也在做天使投资，仔细总结了如下五点建议与所有程序员分享。\n\n建议一：只有真正喜欢才能写好程序\n喜欢写程序，做程序员就是上天堂；\n\n不喜欢写程序，做程序员就是下地狱；\n\n程序员需要整天趴在电脑前，经常没日没夜的，非常辛苦，而且工作来不得半点虚假，少写一个标点符号都不行。喜欢的人，日子过得非常开心，每写一行代码，都会有新的成就，尤其当自己的作品被广泛应用的时候，那种自豪感油然而起。不喜欢的人，坐在电脑前极端无聊，被进度压得喘不过气来，天天为找bug改bug生气。\n\n只有喜欢，只有热爱，才能把程序写好！\n\n我建议不喜欢写程序的人早点转行，不要勉强自己，免得误人误己。\n\n建议二：把程序当艺术品，像写诗一样来写代码\n现在很少有公司做code review（对写好的程序做代码级检查），于是很多人在进度的压力下潦草应付，只要测试通过就算搞定。表面上看，开发速度很快，进度有保障；但实际上，这样的程序连开发者自己都很难读懂，一旦有bug，很难调试，将来维护升级都非常困难。这样的代码多半只能重写，浪费自然严重。\n\n如果每个人写程序的时候当艺术品来写，写每行都认认真真、干干净净的，虽然速度略微慢了一点，但综合的开发成本会低很多。\n\n如何写像诗一样美的代码呢？方法也很简单。\n\n一、买几本经典的编程书，把书上所有例程全部重新写一遍，逐个比较和书上范例的差距，一步一步改善自己编程的风格和技巧。时间长了，自然就能写出象书上例程一样的代码，甚至可以比书上写得好。\n\n二、基础扎实后，多看看Linux等系统级的源代码，看看高手是如何写的，就有感觉了。\n\n三、通读一下MSDN中所有的资料，这样，“读书破万卷，下笔如有神”。\n\n还有，一定要牢记软件工程的铁律：可能出错的地方一定会出错。每个变量都做初始化，引用每个参数都会做有效性检查，在可能出错的每个地方都会做边界条件检查，这样开发出来的程序一定会稳固很多，就是出错也会很容易修改。野路子出来的高手，一般开发速度很快，但做完后bug很多，经常需要很长时间修改。而真正的高手，追求的境界是bugfreecode（零缺陷代码）。\n\n建议三：必须写够十万行代码，不要心存侥幸\n程序员象木工一样，熟能生巧。程序员必须写足够代码量的程序，才会有感觉，这是一个苦力活，没有任何捷径可走。\n\n计算机是一门实践性的科学，没有动手能力做支撑，很难做出好的科研成果。我的一个学长是美国卡内基梅隆大学的博士，卡内基梅隆大学计算机系在全世界非常出名，他说每个博士生必须写十万行代码才能毕业，卡内基梅隆大学博士进任何一个大企业基本不用面试。而国内培养的大部分研究生、博士生，动手能力都偏弱。\n\n没有写过足够代码量的，想成为高手是不可能的，只能纸上谈兵！\n\n建议四：时刻保持好奇心\n计算机技术更新换代非常快，每年都有各种各样的新技术出现。在我过去的职业生涯中，仅编程语言，我就用过basic、masm、pascal、c++、vba、Delphi、java等。需要时刻保持好奇心，不断学习各种新的东西，才能在未来的几十年职业生涯中不落伍。你要理解为什么iPhone出来很多高手用iPhone，现在一天到晚惦记着换部IPhone玩玩。\n\n人的精力有限，高手往往工作压力也比较大，如何在有限的时间内掌握整个行业动态，的确是一个不简单的事情。我的经验是经常看业内的各种技术杂志，参加各种聚会，可以节约很多时间。最重要的是，交几个博学的技术高手，多和他们交流，一定获益匪浅！\n\n建议五：不要局限在技术本身，多花点精力关注用户\n做到前面几条，就已经是千金难求的高手了。但一个真正的高手需要知道用户需要什么，如何做出让用户满意的产品。\n\n现在的软件研发越来越强烈团队协作，不少团队都配置了专门的需求分析的工程师、用户界面及用户体验的设计师，软件研发的分工越来越细。很多程序员以为只要把技术搞好，不用管用户需求和用户体验。实际上，需求方案及界面方案不可能写得非常细，具体的实施还是程序员自己来实现的。这个时候，好坏的差距很快就体现出来了。\n\n我们写程序的最终目的是满足用户需求，不是简单完成需求规划方案中的功能。所以，程序员一定要认真揣摩用户心理，能明白用户的真实需求。\n\n其次，怎么设计交互界面，让用户觉得好用，用起来舒服，这里面学问很大。我举一个小例子，每个程序窗口右上角都有三个按钮，如最小化、关闭等。乔布斯觉得不好看，不易用，他提出改用红绿蓝的交通灯。这样修改后，果然MacOS漂亮和易用了很多。\n\n目前互联网和手机上的应用开发，都非常强调小团队研发。这样研发模式速度会快很多，但对程序员的综合素质的要求也就更高了。\n\n我强烈建议程序员不要仅仅局限在技术本事，还需要多点精力考虑和用户相关的问题，学会洞察用户的需求，并努力设计好用易用的产品。做着这点的程序高手，创业成算就很大了。\n\n这样的技术高手，如果捕捉到合适的产品方向，并且具备一定带团队的能力，创业成功机会很大！事实上，绝大部分创业的技术公司，创始人都是这样的人！","slug":"Spring-Cloud在国内中小型公司能用起来吗？ - 副本","published":1,"date":"2018-03-02T03:30:31.747Z","updated":"2018-03-02T03:27:50.610Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cje9e5cxx0004k0okkqhxbstx","content":"<p>每个IT企业，尤其是初创企业，非常苦恼：找不到好的程序员。现在大学、软件学院及各种培训机构，每年培养几十万的程序员，毕业的每个人都有同样困恼：找不到好的工作。问题出在哪里呢？其实，企业需要的是不是刚会写程序的人，需要来了就能干活的人，尤其能把活干好的人。而刚毕业的大学生多半刚学会如何写程序，的确很难企业需求。</p>\n<p>企业到底需要什么样的程序员，一个刚入门的程序员如何成为企业需要的高手呢？还有很多程序员问我，“我需要具备什么样的能力就可以去创业？”我一直在琢磨类似的问题。我自己写过十年程序，也在金山管理过一千多人的研发队伍，最近也在做天使投资，仔细总结了如下五点建议与所有程序员分享。</p>\n<p>建议一：只有真正喜欢才能写好程序<br>喜欢写程序，做程序员就是上天堂；</p>\n<p>不喜欢写程序，做程序员就是下地狱；</p>\n<p>程序员需要整天趴在电脑前，经常没日没夜的，非常辛苦，而且工作来不得半点虚假，少写一个标点符号都不行。喜欢的人，日子过得非常开心，每写一行代码，都会有新的成就，尤其当自己的作品被广泛应用的时候，那种自豪感油然而起。不喜欢的人，坐在电脑前极端无聊，被进度压得喘不过气来，天天为找bug改bug生气。</p>\n<p>只有喜欢，只有热爱，才能把程序写好！</p>\n<p>我建议不喜欢写程序的人早点转行，不要勉强自己，免得误人误己。</p>\n<p>建议二：把程序当艺术品，像写诗一样来写代码<br>现在很少有公司做code review（对写好的程序做代码级检查），于是很多人在进度的压力下潦草应付，只要测试通过就算搞定。表面上看，开发速度很快，进度有保障；但实际上，这样的程序连开发者自己都很难读懂，一旦有bug，很难调试，将来维护升级都非常困难。这样的代码多半只能重写，浪费自然严重。</p>\n<p>如果每个人写程序的时候当艺术品来写，写每行都认认真真、干干净净的，虽然速度略微慢了一点，但综合的开发成本会低很多。</p>\n<p>如何写像诗一样美的代码呢？方法也很简单。</p>\n<p>一、买几本经典的编程书，把书上所有例程全部重新写一遍，逐个比较和书上范例的差距，一步一步改善自己编程的风格和技巧。时间长了，自然就能写出象书上例程一样的代码，甚至可以比书上写得好。</p>\n<p>二、基础扎实后，多看看Linux等系统级的源代码，看看高手是如何写的，就有感觉了。</p>\n<p>三、通读一下MSDN中所有的资料，这样，“读书破万卷，下笔如有神”。</p>\n<p>还有，一定要牢记软件工程的铁律：可能出错的地方一定会出错。每个变量都做初始化，引用每个参数都会做有效性检查，在可能出错的每个地方都会做边界条件检查，这样开发出来的程序一定会稳固很多，就是出错也会很容易修改。野路子出来的高手，一般开发速度很快，但做完后bug很多，经常需要很长时间修改。而真正的高手，追求的境界是bugfreecode（零缺陷代码）。</p>\n<p>建议三：必须写够十万行代码，不要心存侥幸<br>程序员象木工一样，熟能生巧。程序员必须写足够代码量的程序，才会有感觉，这是一个苦力活，没有任何捷径可走。</p>\n<p>计算机是一门实践性的科学，没有动手能力做支撑，很难做出好的科研成果。我的一个学长是美国卡内基梅隆大学的博士，卡内基梅隆大学计算机系在全世界非常出名，他说每个博士生必须写十万行代码才能毕业，卡内基梅隆大学博士进任何一个大企业基本不用面试。而国内培养的大部分研究生、博士生，动手能力都偏弱。</p>\n<p>没有写过足够代码量的，想成为高手是不可能的，只能纸上谈兵！</p>\n<p>建议四：时刻保持好奇心<br>计算机技术更新换代非常快，每年都有各种各样的新技术出现。在我过去的职业生涯中，仅编程语言，我就用过basic、masm、pascal、c++、vba、Delphi、java等。需要时刻保持好奇心，不断学习各种新的东西，才能在未来的几十年职业生涯中不落伍。你要理解为什么iPhone出来很多高手用iPhone，现在一天到晚惦记着换部IPhone玩玩。</p>\n<p>人的精力有限，高手往往工作压力也比较大，如何在有限的时间内掌握整个行业动态，的确是一个不简单的事情。我的经验是经常看业内的各种技术杂志，参加各种聚会，可以节约很多时间。最重要的是，交几个博学的技术高手，多和他们交流，一定获益匪浅！</p>\n<p>建议五：不要局限在技术本身，多花点精力关注用户<br>做到前面几条，就已经是千金难求的高手了。但一个真正的高手需要知道用户需要什么，如何做出让用户满意的产品。</p>\n<p>现在的软件研发越来越强烈团队协作，不少团队都配置了专门的需求分析的工程师、用户界面及用户体验的设计师，软件研发的分工越来越细。很多程序员以为只要把技术搞好，不用管用户需求和用户体验。实际上，需求方案及界面方案不可能写得非常细，具体的实施还是程序员自己来实现的。这个时候，好坏的差距很快就体现出来了。</p>\n<p>我们写程序的最终目的是满足用户需求，不是简单完成需求规划方案中的功能。所以，程序员一定要认真揣摩用户心理，能明白用户的真实需求。</p>\n<p>其次，怎么设计交互界面，让用户觉得好用，用起来舒服，这里面学问很大。我举一个小例子，每个程序窗口右上角都有三个按钮，如最小化、关闭等。乔布斯觉得不好看，不易用，他提出改用红绿蓝的交通灯。这样修改后，果然MacOS漂亮和易用了很多。</p>\n<p>目前互联网和手机上的应用开发，都非常强调小团队研发。这样研发模式速度会快很多，但对程序员的综合素质的要求也就更高了。</p>\n<p>我强烈建议程序员不要仅仅局限在技术本事，还需要多点精力考虑和用户相关的问题，学会洞察用户的需求，并努力设计好用易用的产品。做着这点的程序高手，创业成算就很大了。</p>\n<p>这样的技术高手，如果捕捉到合适的产品方向，并且具备一定带团队的能力，创业成功机会很大！事实上，绝大部分创业的技术公司，创始人都是这样的人！</p>\n","site":{"data":{}},"excerpt":"","more":"<p>每个IT企业，尤其是初创企业，非常苦恼：找不到好的程序员。现在大学、软件学院及各种培训机构，每年培养几十万的程序员，毕业的每个人都有同样困恼：找不到好的工作。问题出在哪里呢？其实，企业需要的是不是刚会写程序的人，需要来了就能干活的人，尤其能把活干好的人。而刚毕业的大学生多半刚学会如何写程序，的确很难企业需求。</p>\n<p>企业到底需要什么样的程序员，一个刚入门的程序员如何成为企业需要的高手呢？还有很多程序员问我，“我需要具备什么样的能力就可以去创业？”我一直在琢磨类似的问题。我自己写过十年程序，也在金山管理过一千多人的研发队伍，最近也在做天使投资，仔细总结了如下五点建议与所有程序员分享。</p>\n<p>建议一：只有真正喜欢才能写好程序<br>喜欢写程序，做程序员就是上天堂；</p>\n<p>不喜欢写程序，做程序员就是下地狱；</p>\n<p>程序员需要整天趴在电脑前，经常没日没夜的，非常辛苦，而且工作来不得半点虚假，少写一个标点符号都不行。喜欢的人，日子过得非常开心，每写一行代码，都会有新的成就，尤其当自己的作品被广泛应用的时候，那种自豪感油然而起。不喜欢的人，坐在电脑前极端无聊，被进度压得喘不过气来，天天为找bug改bug生气。</p>\n<p>只有喜欢，只有热爱，才能把程序写好！</p>\n<p>我建议不喜欢写程序的人早点转行，不要勉强自己，免得误人误己。</p>\n<p>建议二：把程序当艺术品，像写诗一样来写代码<br>现在很少有公司做code review（对写好的程序做代码级检查），于是很多人在进度的压力下潦草应付，只要测试通过就算搞定。表面上看，开发速度很快，进度有保障；但实际上，这样的程序连开发者自己都很难读懂，一旦有bug，很难调试，将来维护升级都非常困难。这样的代码多半只能重写，浪费自然严重。</p>\n<p>如果每个人写程序的时候当艺术品来写，写每行都认认真真、干干净净的，虽然速度略微慢了一点，但综合的开发成本会低很多。</p>\n<p>如何写像诗一样美的代码呢？方法也很简单。</p>\n<p>一、买几本经典的编程书，把书上所有例程全部重新写一遍，逐个比较和书上范例的差距，一步一步改善自己编程的风格和技巧。时间长了，自然就能写出象书上例程一样的代码，甚至可以比书上写得好。</p>\n<p>二、基础扎实后，多看看Linux等系统级的源代码，看看高手是如何写的，就有感觉了。</p>\n<p>三、通读一下MSDN中所有的资料，这样，“读书破万卷，下笔如有神”。</p>\n<p>还有，一定要牢记软件工程的铁律：可能出错的地方一定会出错。每个变量都做初始化，引用每个参数都会做有效性检查，在可能出错的每个地方都会做边界条件检查，这样开发出来的程序一定会稳固很多，就是出错也会很容易修改。野路子出来的高手，一般开发速度很快，但做完后bug很多，经常需要很长时间修改。而真正的高手，追求的境界是bugfreecode（零缺陷代码）。</p>\n<p>建议三：必须写够十万行代码，不要心存侥幸<br>程序员象木工一样，熟能生巧。程序员必须写足够代码量的程序，才会有感觉，这是一个苦力活，没有任何捷径可走。</p>\n<p>计算机是一门实践性的科学，没有动手能力做支撑，很难做出好的科研成果。我的一个学长是美国卡内基梅隆大学的博士，卡内基梅隆大学计算机系在全世界非常出名，他说每个博士生必须写十万行代码才能毕业，卡内基梅隆大学博士进任何一个大企业基本不用面试。而国内培养的大部分研究生、博士生，动手能力都偏弱。</p>\n<p>没有写过足够代码量的，想成为高手是不可能的，只能纸上谈兵！</p>\n<p>建议四：时刻保持好奇心<br>计算机技术更新换代非常快，每年都有各种各样的新技术出现。在我过去的职业生涯中，仅编程语言，我就用过basic、masm、pascal、c++、vba、Delphi、java等。需要时刻保持好奇心，不断学习各种新的东西，才能在未来的几十年职业生涯中不落伍。你要理解为什么iPhone出来很多高手用iPhone，现在一天到晚惦记着换部IPhone玩玩。</p>\n<p>人的精力有限，高手往往工作压力也比较大，如何在有限的时间内掌握整个行业动态，的确是一个不简单的事情。我的经验是经常看业内的各种技术杂志，参加各种聚会，可以节约很多时间。最重要的是，交几个博学的技术高手，多和他们交流，一定获益匪浅！</p>\n<p>建议五：不要局限在技术本身，多花点精力关注用户<br>做到前面几条，就已经是千金难求的高手了。但一个真正的高手需要知道用户需要什么，如何做出让用户满意的产品。</p>\n<p>现在的软件研发越来越强烈团队协作，不少团队都配置了专门的需求分析的工程师、用户界面及用户体验的设计师，软件研发的分工越来越细。很多程序员以为只要把技术搞好，不用管用户需求和用户体验。实际上，需求方案及界面方案不可能写得非常细，具体的实施还是程序员自己来实现的。这个时候，好坏的差距很快就体现出来了。</p>\n<p>我们写程序的最终目的是满足用户需求，不是简单完成需求规划方案中的功能。所以，程序员一定要认真揣摩用户心理，能明白用户的真实需求。</p>\n<p>其次，怎么设计交互界面，让用户觉得好用，用起来舒服，这里面学问很大。我举一个小例子，每个程序窗口右上角都有三个按钮，如最小化、关闭等。乔布斯觉得不好看，不易用，他提出改用红绿蓝的交通灯。这样修改后，果然MacOS漂亮和易用了很多。</p>\n<p>目前互联网和手机上的应用开发，都非常强调小团队研发。这样研发模式速度会快很多，但对程序员的综合素质的要求也就更高了。</p>\n<p>我强烈建议程序员不要仅仅局限在技术本事，还需要多点精力考虑和用户相关的问题，学会洞察用户的需求，并努力设计好用易用的产品。做着这点的程序高手，创业成算就很大了。</p>\n<p>这样的技术高手，如果捕捉到合适的产品方向，并且具备一定带团队的能力，创业成功机会很大！事实上，绝大部分创业的技术公司，创始人都是这样的人！</p>\n"},{"_content":"每个IT企业，尤其是初创企业，非常苦恼：找不到好的程序员。现在大学、软件学院及各种培训机构，每年培养几十万的程序员，毕业的每个人都有同样困恼：找不到好的工作。问题出在哪里呢？其实，企业需要的是不是刚会写程序的人，需要来了就能干活的人，尤其能把活干好的人。而刚毕业的大学生多半刚学会如何写程序，的确很难企业需求。\n\n企业到底需要什么样的程序员，一个刚入门的程序员如何成为企业需要的高手呢？还有很多程序员问我，“我需要具备什么样的能力就可以去创业？”我一直在琢磨类似的问题。我自己写过十年程序，也在金山管理过一千多人的研发队伍，最近也在做天使投资，仔细总结了如下五点建议与所有程序员分享。\n\n建议一：只有真正喜欢才能写好程序\n喜欢写程序，做程序员就是上天堂；\n\n不喜欢写程序，做程序员就是下地狱；\n\n程序员需要整天趴在电脑前，经常没日没夜的，非常辛苦，而且工作来不得半点虚假，少写一个标点符号都不行。喜欢的人，日子过得非常开心，每写一行代码，都会有新的成就，尤其当自己的作品被广泛应用的时候，那种自豪感油然而起。不喜欢的人，坐在电脑前极端无聊，被进度压得喘不过气来，天天为找bug改bug生气。\n\n只有喜欢，只有热爱，才能把程序写好！\n\n我建议不喜欢写程序的人早点转行，不要勉强自己，免得误人误己。\n\n建议二：把程序当艺术品，像写诗一样来写代码\n现在很少有公司做code review（对写好的程序做代码级检查），于是很多人在进度的压力下潦草应付，只要测试通过就算搞定。表面上看，开发速度很快，进度有保障；但实际上，这样的程序连开发者自己都很难读懂，一旦有bug，很难调试，将来维护升级都非常困难。这样的代码多半只能重写，浪费自然严重。\n\n如果每个人写程序的时候当艺术品来写，写每行都认认真真、干干净净的，虽然速度略微慢了一点，但综合的开发成本会低很多。\n\n如何写像诗一样美的代码呢？方法也很简单。\n\n一、买几本经典的编程书，把书上所有例程全部重新写一遍，逐个比较和书上范例的差距，一步一步改善自己编程的风格和技巧。时间长了，自然就能写出象书上例程一样的代码，甚至可以比书上写得好。\n\n二、基础扎实后，多看看Linux等系统级的源代码，看看高手是如何写的，就有感觉了。\n\n三、通读一下MSDN中所有的资料，这样，“读书破万卷，下笔如有神”。\n\n还有，一定要牢记软件工程的铁律：可能出错的地方一定会出错。每个变量都做初始化，引用每个参数都会做有效性检查，在可能出错的每个地方都会做边界条件检查，这样开发出来的程序一定会稳固很多，就是出错也会很容易修改。野路子出来的高手，一般开发速度很快，但做完后bug很多，经常需要很长时间修改。而真正的高手，追求的境界是bugfreecode（零缺陷代码）。\n\n建议三：必须写够十万行代码，不要心存侥幸\n程序员象木工一样，熟能生巧。程序员必须写足够代码量的程序，才会有感觉，这是一个苦力活，没有任何捷径可走。\n\n计算机是一门实践性的科学，没有动手能力做支撑，很难做出好的科研成果。我的一个学长是美国卡内基梅隆大学的博士，卡内基梅隆大学计算机系在全世界非常出名，他说每个博士生必须写十万行代码才能毕业，卡内基梅隆大学博士进任何一个大企业基本不用面试。而国内培养的大部分研究生、博士生，动手能力都偏弱。\n\n没有写过足够代码量的，想成为高手是不可能的，只能纸上谈兵！\n\n建议四：时刻保持好奇心\n计算机技术更新换代非常快，每年都有各种各样的新技术出现。在我过去的职业生涯中，仅编程语言，我就用过basic、masm、pascal、c++、vba、Delphi、java等。需要时刻保持好奇心，不断学习各种新的东西，才能在未来的几十年职业生涯中不落伍。你要理解为什么iPhone出来很多高手用iPhone，现在一天到晚惦记着换部IPhone玩玩。\n\n人的精力有限，高手往往工作压力也比较大，如何在有限的时间内掌握整个行业动态，的确是一个不简单的事情。我的经验是经常看业内的各种技术杂志，参加各种聚会，可以节约很多时间。最重要的是，交几个博学的技术高手，多和他们交流，一定获益匪浅！\n\n建议五：不要局限在技术本身，多花点精力关注用户\n做到前面几条，就已经是千金难求的高手了。但一个真正的高手需要知道用户需要什么，如何做出让用户满意的产品。\n\n现在的软件研发越来越强烈团队协作，不少团队都配置了专门的需求分析的工程师、用户界面及用户体验的设计师，软件研发的分工越来越细。很多程序员以为只要把技术搞好，不用管用户需求和用户体验。实际上，需求方案及界面方案不可能写得非常细，具体的实施还是程序员自己来实现的。这个时候，好坏的差距很快就体现出来了。\n\n我们写程序的最终目的是满足用户需求，不是简单完成需求规划方案中的功能。所以，程序员一定要认真揣摩用户心理，能明白用户的真实需求。\n\n其次，怎么设计交互界面，让用户觉得好用，用起来舒服，这里面学问很大。我举一个小例子，每个程序窗口右上角都有三个按钮，如最小化、关闭等。乔布斯觉得不好看，不易用，他提出改用红绿蓝的交通灯。这样修改后，果然MacOS漂亮和易用了很多。\n\n目前互联网和手机上的应用开发，都非常强调小团队研发。这样研发模式速度会快很多，但对程序员的综合素质的要求也就更高了。\n\n我强烈建议程序员不要仅仅局限在技术本事，还需要多点精力考虑和用户相关的问题，学会洞察用户的需求，并努力设计好用易用的产品。做着这点的程序高手，创业成算就很大了。\n\n这样的技术高手，如果捕捉到合适的产品方向，并且具备一定带团队的能力，创业成功机会很大！事实上，绝大部分创业的技术公司，创始人都是这样的人！","source":"_posts/Spring-Cloud在国内中小型公司能用起来吗？.md","raw":"每个IT企业，尤其是初创企业，非常苦恼：找不到好的程序员。现在大学、软件学院及各种培训机构，每年培养几十万的程序员，毕业的每个人都有同样困恼：找不到好的工作。问题出在哪里呢？其实，企业需要的是不是刚会写程序的人，需要来了就能干活的人，尤其能把活干好的人。而刚毕业的大学生多半刚学会如何写程序，的确很难企业需求。\n\n企业到底需要什么样的程序员，一个刚入门的程序员如何成为企业需要的高手呢？还有很多程序员问我，“我需要具备什么样的能力就可以去创业？”我一直在琢磨类似的问题。我自己写过十年程序，也在金山管理过一千多人的研发队伍，最近也在做天使投资，仔细总结了如下五点建议与所有程序员分享。\n\n建议一：只有真正喜欢才能写好程序\n喜欢写程序，做程序员就是上天堂；\n\n不喜欢写程序，做程序员就是下地狱；\n\n程序员需要整天趴在电脑前，经常没日没夜的，非常辛苦，而且工作来不得半点虚假，少写一个标点符号都不行。喜欢的人，日子过得非常开心，每写一行代码，都会有新的成就，尤其当自己的作品被广泛应用的时候，那种自豪感油然而起。不喜欢的人，坐在电脑前极端无聊，被进度压得喘不过气来，天天为找bug改bug生气。\n\n只有喜欢，只有热爱，才能把程序写好！\n\n我建议不喜欢写程序的人早点转行，不要勉强自己，免得误人误己。\n\n建议二：把程序当艺术品，像写诗一样来写代码\n现在很少有公司做code review（对写好的程序做代码级检查），于是很多人在进度的压力下潦草应付，只要测试通过就算搞定。表面上看，开发速度很快，进度有保障；但实际上，这样的程序连开发者自己都很难读懂，一旦有bug，很难调试，将来维护升级都非常困难。这样的代码多半只能重写，浪费自然严重。\n\n如果每个人写程序的时候当艺术品来写，写每行都认认真真、干干净净的，虽然速度略微慢了一点，但综合的开发成本会低很多。\n\n如何写像诗一样美的代码呢？方法也很简单。\n\n一、买几本经典的编程书，把书上所有例程全部重新写一遍，逐个比较和书上范例的差距，一步一步改善自己编程的风格和技巧。时间长了，自然就能写出象书上例程一样的代码，甚至可以比书上写得好。\n\n二、基础扎实后，多看看Linux等系统级的源代码，看看高手是如何写的，就有感觉了。\n\n三、通读一下MSDN中所有的资料，这样，“读书破万卷，下笔如有神”。\n\n还有，一定要牢记软件工程的铁律：可能出错的地方一定会出错。每个变量都做初始化，引用每个参数都会做有效性检查，在可能出错的每个地方都会做边界条件检查，这样开发出来的程序一定会稳固很多，就是出错也会很容易修改。野路子出来的高手，一般开发速度很快，但做完后bug很多，经常需要很长时间修改。而真正的高手，追求的境界是bugfreecode（零缺陷代码）。\n\n建议三：必须写够十万行代码，不要心存侥幸\n程序员象木工一样，熟能生巧。程序员必须写足够代码量的程序，才会有感觉，这是一个苦力活，没有任何捷径可走。\n\n计算机是一门实践性的科学，没有动手能力做支撑，很难做出好的科研成果。我的一个学长是美国卡内基梅隆大学的博士，卡内基梅隆大学计算机系在全世界非常出名，他说每个博士生必须写十万行代码才能毕业，卡内基梅隆大学博士进任何一个大企业基本不用面试。而国内培养的大部分研究生、博士生，动手能力都偏弱。\n\n没有写过足够代码量的，想成为高手是不可能的，只能纸上谈兵！\n\n建议四：时刻保持好奇心\n计算机技术更新换代非常快，每年都有各种各样的新技术出现。在我过去的职业生涯中，仅编程语言，我就用过basic、masm、pascal、c++、vba、Delphi、java等。需要时刻保持好奇心，不断学习各种新的东西，才能在未来的几十年职业生涯中不落伍。你要理解为什么iPhone出来很多高手用iPhone，现在一天到晚惦记着换部IPhone玩玩。\n\n人的精力有限，高手往往工作压力也比较大，如何在有限的时间内掌握整个行业动态，的确是一个不简单的事情。我的经验是经常看业内的各种技术杂志，参加各种聚会，可以节约很多时间。最重要的是，交几个博学的技术高手，多和他们交流，一定获益匪浅！\n\n建议五：不要局限在技术本身，多花点精力关注用户\n做到前面几条，就已经是千金难求的高手了。但一个真正的高手需要知道用户需要什么，如何做出让用户满意的产品。\n\n现在的软件研发越来越强烈团队协作，不少团队都配置了专门的需求分析的工程师、用户界面及用户体验的设计师，软件研发的分工越来越细。很多程序员以为只要把技术搞好，不用管用户需求和用户体验。实际上，需求方案及界面方案不可能写得非常细，具体的实施还是程序员自己来实现的。这个时候，好坏的差距很快就体现出来了。\n\n我们写程序的最终目的是满足用户需求，不是简单完成需求规划方案中的功能。所以，程序员一定要认真揣摩用户心理，能明白用户的真实需求。\n\n其次，怎么设计交互界面，让用户觉得好用，用起来舒服，这里面学问很大。我举一个小例子，每个程序窗口右上角都有三个按钮，如最小化、关闭等。乔布斯觉得不好看，不易用，他提出改用红绿蓝的交通灯。这样修改后，果然MacOS漂亮和易用了很多。\n\n目前互联网和手机上的应用开发，都非常强调小团队研发。这样研发模式速度会快很多，但对程序员的综合素质的要求也就更高了。\n\n我强烈建议程序员不要仅仅局限在技术本事，还需要多点精力考虑和用户相关的问题，学会洞察用户的需求，并努力设计好用易用的产品。做着这点的程序高手，创业成算就很大了。\n\n这样的技术高手，如果捕捉到合适的产品方向，并且具备一定带团队的能力，创业成功机会很大！事实上，绝大部分创业的技术公司，创始人都是这样的人！","slug":"Spring-Cloud在国内中小型公司能用起来吗？","published":1,"date":"2018-03-02T00:51:27.188Z","updated":"2018-03-02T03:27:50.610Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cje9e5cxz0005k0okp2u3tntt","content":"<p>每个IT企业，尤其是初创企业，非常苦恼：找不到好的程序员。现在大学、软件学院及各种培训机构，每年培养几十万的程序员，毕业的每个人都有同样困恼：找不到好的工作。问题出在哪里呢？其实，企业需要的是不是刚会写程序的人，需要来了就能干活的人，尤其能把活干好的人。而刚毕业的大学生多半刚学会如何写程序，的确很难企业需求。</p>\n<p>企业到底需要什么样的程序员，一个刚入门的程序员如何成为企业需要的高手呢？还有很多程序员问我，“我需要具备什么样的能力就可以去创业？”我一直在琢磨类似的问题。我自己写过十年程序，也在金山管理过一千多人的研发队伍，最近也在做天使投资，仔细总结了如下五点建议与所有程序员分享。</p>\n<p>建议一：只有真正喜欢才能写好程序<br>喜欢写程序，做程序员就是上天堂；</p>\n<p>不喜欢写程序，做程序员就是下地狱；</p>\n<p>程序员需要整天趴在电脑前，经常没日没夜的，非常辛苦，而且工作来不得半点虚假，少写一个标点符号都不行。喜欢的人，日子过得非常开心，每写一行代码，都会有新的成就，尤其当自己的作品被广泛应用的时候，那种自豪感油然而起。不喜欢的人，坐在电脑前极端无聊，被进度压得喘不过气来，天天为找bug改bug生气。</p>\n<p>只有喜欢，只有热爱，才能把程序写好！</p>\n<p>我建议不喜欢写程序的人早点转行，不要勉强自己，免得误人误己。</p>\n<p>建议二：把程序当艺术品，像写诗一样来写代码<br>现在很少有公司做code review（对写好的程序做代码级检查），于是很多人在进度的压力下潦草应付，只要测试通过就算搞定。表面上看，开发速度很快，进度有保障；但实际上，这样的程序连开发者自己都很难读懂，一旦有bug，很难调试，将来维护升级都非常困难。这样的代码多半只能重写，浪费自然严重。</p>\n<p>如果每个人写程序的时候当艺术品来写，写每行都认认真真、干干净净的，虽然速度略微慢了一点，但综合的开发成本会低很多。</p>\n<p>如何写像诗一样美的代码呢？方法也很简单。</p>\n<p>一、买几本经典的编程书，把书上所有例程全部重新写一遍，逐个比较和书上范例的差距，一步一步改善自己编程的风格和技巧。时间长了，自然就能写出象书上例程一样的代码，甚至可以比书上写得好。</p>\n<p>二、基础扎实后，多看看Linux等系统级的源代码，看看高手是如何写的，就有感觉了。</p>\n<p>三、通读一下MSDN中所有的资料，这样，“读书破万卷，下笔如有神”。</p>\n<p>还有，一定要牢记软件工程的铁律：可能出错的地方一定会出错。每个变量都做初始化，引用每个参数都会做有效性检查，在可能出错的每个地方都会做边界条件检查，这样开发出来的程序一定会稳固很多，就是出错也会很容易修改。野路子出来的高手，一般开发速度很快，但做完后bug很多，经常需要很长时间修改。而真正的高手，追求的境界是bugfreecode（零缺陷代码）。</p>\n<p>建议三：必须写够十万行代码，不要心存侥幸<br>程序员象木工一样，熟能生巧。程序员必须写足够代码量的程序，才会有感觉，这是一个苦力活，没有任何捷径可走。</p>\n<p>计算机是一门实践性的科学，没有动手能力做支撑，很难做出好的科研成果。我的一个学长是美国卡内基梅隆大学的博士，卡内基梅隆大学计算机系在全世界非常出名，他说每个博士生必须写十万行代码才能毕业，卡内基梅隆大学博士进任何一个大企业基本不用面试。而国内培养的大部分研究生、博士生，动手能力都偏弱。</p>\n<p>没有写过足够代码量的，想成为高手是不可能的，只能纸上谈兵！</p>\n<p>建议四：时刻保持好奇心<br>计算机技术更新换代非常快，每年都有各种各样的新技术出现。在我过去的职业生涯中，仅编程语言，我就用过basic、masm、pascal、c++、vba、Delphi、java等。需要时刻保持好奇心，不断学习各种新的东西，才能在未来的几十年职业生涯中不落伍。你要理解为什么iPhone出来很多高手用iPhone，现在一天到晚惦记着换部IPhone玩玩。</p>\n<p>人的精力有限，高手往往工作压力也比较大，如何在有限的时间内掌握整个行业动态，的确是一个不简单的事情。我的经验是经常看业内的各种技术杂志，参加各种聚会，可以节约很多时间。最重要的是，交几个博学的技术高手，多和他们交流，一定获益匪浅！</p>\n<p>建议五：不要局限在技术本身，多花点精力关注用户<br>做到前面几条，就已经是千金难求的高手了。但一个真正的高手需要知道用户需要什么，如何做出让用户满意的产品。</p>\n<p>现在的软件研发越来越强烈团队协作，不少团队都配置了专门的需求分析的工程师、用户界面及用户体验的设计师，软件研发的分工越来越细。很多程序员以为只要把技术搞好，不用管用户需求和用户体验。实际上，需求方案及界面方案不可能写得非常细，具体的实施还是程序员自己来实现的。这个时候，好坏的差距很快就体现出来了。</p>\n<p>我们写程序的最终目的是满足用户需求，不是简单完成需求规划方案中的功能。所以，程序员一定要认真揣摩用户心理，能明白用户的真实需求。</p>\n<p>其次，怎么设计交互界面，让用户觉得好用，用起来舒服，这里面学问很大。我举一个小例子，每个程序窗口右上角都有三个按钮，如最小化、关闭等。乔布斯觉得不好看，不易用，他提出改用红绿蓝的交通灯。这样修改后，果然MacOS漂亮和易用了很多。</p>\n<p>目前互联网和手机上的应用开发，都非常强调小团队研发。这样研发模式速度会快很多，但对程序员的综合素质的要求也就更高了。</p>\n<p>我强烈建议程序员不要仅仅局限在技术本事，还需要多点精力考虑和用户相关的问题，学会洞察用户的需求，并努力设计好用易用的产品。做着这点的程序高手，创业成算就很大了。</p>\n<p>这样的技术高手，如果捕捉到合适的产品方向，并且具备一定带团队的能力，创业成功机会很大！事实上，绝大部分创业的技术公司，创始人都是这样的人！</p>\n","site":{"data":{}},"excerpt":"","more":"<p>每个IT企业，尤其是初创企业，非常苦恼：找不到好的程序员。现在大学、软件学院及各种培训机构，每年培养几十万的程序员，毕业的每个人都有同样困恼：找不到好的工作。问题出在哪里呢？其实，企业需要的是不是刚会写程序的人，需要来了就能干活的人，尤其能把活干好的人。而刚毕业的大学生多半刚学会如何写程序，的确很难企业需求。</p>\n<p>企业到底需要什么样的程序员，一个刚入门的程序员如何成为企业需要的高手呢？还有很多程序员问我，“我需要具备什么样的能力就可以去创业？”我一直在琢磨类似的问题。我自己写过十年程序，也在金山管理过一千多人的研发队伍，最近也在做天使投资，仔细总结了如下五点建议与所有程序员分享。</p>\n<p>建议一：只有真正喜欢才能写好程序<br>喜欢写程序，做程序员就是上天堂；</p>\n<p>不喜欢写程序，做程序员就是下地狱；</p>\n<p>程序员需要整天趴在电脑前，经常没日没夜的，非常辛苦，而且工作来不得半点虚假，少写一个标点符号都不行。喜欢的人，日子过得非常开心，每写一行代码，都会有新的成就，尤其当自己的作品被广泛应用的时候，那种自豪感油然而起。不喜欢的人，坐在电脑前极端无聊，被进度压得喘不过气来，天天为找bug改bug生气。</p>\n<p>只有喜欢，只有热爱，才能把程序写好！</p>\n<p>我建议不喜欢写程序的人早点转行，不要勉强自己，免得误人误己。</p>\n<p>建议二：把程序当艺术品，像写诗一样来写代码<br>现在很少有公司做code review（对写好的程序做代码级检查），于是很多人在进度的压力下潦草应付，只要测试通过就算搞定。表面上看，开发速度很快，进度有保障；但实际上，这样的程序连开发者自己都很难读懂，一旦有bug，很难调试，将来维护升级都非常困难。这样的代码多半只能重写，浪费自然严重。</p>\n<p>如果每个人写程序的时候当艺术品来写，写每行都认认真真、干干净净的，虽然速度略微慢了一点，但综合的开发成本会低很多。</p>\n<p>如何写像诗一样美的代码呢？方法也很简单。</p>\n<p>一、买几本经典的编程书，把书上所有例程全部重新写一遍，逐个比较和书上范例的差距，一步一步改善自己编程的风格和技巧。时间长了，自然就能写出象书上例程一样的代码，甚至可以比书上写得好。</p>\n<p>二、基础扎实后，多看看Linux等系统级的源代码，看看高手是如何写的，就有感觉了。</p>\n<p>三、通读一下MSDN中所有的资料，这样，“读书破万卷，下笔如有神”。</p>\n<p>还有，一定要牢记软件工程的铁律：可能出错的地方一定会出错。每个变量都做初始化，引用每个参数都会做有效性检查，在可能出错的每个地方都会做边界条件检查，这样开发出来的程序一定会稳固很多，就是出错也会很容易修改。野路子出来的高手，一般开发速度很快，但做完后bug很多，经常需要很长时间修改。而真正的高手，追求的境界是bugfreecode（零缺陷代码）。</p>\n<p>建议三：必须写够十万行代码，不要心存侥幸<br>程序员象木工一样，熟能生巧。程序员必须写足够代码量的程序，才会有感觉，这是一个苦力活，没有任何捷径可走。</p>\n<p>计算机是一门实践性的科学，没有动手能力做支撑，很难做出好的科研成果。我的一个学长是美国卡内基梅隆大学的博士，卡内基梅隆大学计算机系在全世界非常出名，他说每个博士生必须写十万行代码才能毕业，卡内基梅隆大学博士进任何一个大企业基本不用面试。而国内培养的大部分研究生、博士生，动手能力都偏弱。</p>\n<p>没有写过足够代码量的，想成为高手是不可能的，只能纸上谈兵！</p>\n<p>建议四：时刻保持好奇心<br>计算机技术更新换代非常快，每年都有各种各样的新技术出现。在我过去的职业生涯中，仅编程语言，我就用过basic、masm、pascal、c++、vba、Delphi、java等。需要时刻保持好奇心，不断学习各种新的东西，才能在未来的几十年职业生涯中不落伍。你要理解为什么iPhone出来很多高手用iPhone，现在一天到晚惦记着换部IPhone玩玩。</p>\n<p>人的精力有限，高手往往工作压力也比较大，如何在有限的时间内掌握整个行业动态，的确是一个不简单的事情。我的经验是经常看业内的各种技术杂志，参加各种聚会，可以节约很多时间。最重要的是，交几个博学的技术高手，多和他们交流，一定获益匪浅！</p>\n<p>建议五：不要局限在技术本身，多花点精力关注用户<br>做到前面几条，就已经是千金难求的高手了。但一个真正的高手需要知道用户需要什么，如何做出让用户满意的产品。</p>\n<p>现在的软件研发越来越强烈团队协作，不少团队都配置了专门的需求分析的工程师、用户界面及用户体验的设计师，软件研发的分工越来越细。很多程序员以为只要把技术搞好，不用管用户需求和用户体验。实际上，需求方案及界面方案不可能写得非常细，具体的实施还是程序员自己来实现的。这个时候，好坏的差距很快就体现出来了。</p>\n<p>我们写程序的最终目的是满足用户需求，不是简单完成需求规划方案中的功能。所以，程序员一定要认真揣摩用户心理，能明白用户的真实需求。</p>\n<p>其次，怎么设计交互界面，让用户觉得好用，用起来舒服，这里面学问很大。我举一个小例子，每个程序窗口右上角都有三个按钮，如最小化、关闭等。乔布斯觉得不好看，不易用，他提出改用红绿蓝的交通灯。这样修改后，果然MacOS漂亮和易用了很多。</p>\n<p>目前互联网和手机上的应用开发，都非常强调小团队研发。这样研发模式速度会快很多，但对程序员的综合素质的要求也就更高了。</p>\n<p>我强烈建议程序员不要仅仅局限在技术本事，还需要多点精力考虑和用户相关的问题，学会洞察用户的需求，并努力设计好用易用的产品。做着这点的程序高手，创业成算就很大了。</p>\n<p>这样的技术高手，如果捕捉到合适的产品方向，并且具备一定带团队的能力，创业成功机会很大！事实上，绝大部分创业的技术公司，创始人都是这样的人！</p>\n"},{"_content":"每个IT企业，尤其是初创企业，非常苦恼：找不到好的程序员。现在大学、软件学院及各种培训机构，每年培养几十万的程序员，毕业的每个人都有同样困恼：找不到好的工作。问题出在哪里呢？其实，企业需要的是不是刚会写程序的人，需要来了就能干活的人，尤其能把活干好的人。而刚毕业的大学生多半刚学会如何写程序，的确很难企业需求。\n\n企业到底需要什么样的程序员，一个刚入门的程序员如何成为企业需要的高手呢？还有很多程序员问我，“我需要具备什么样的能力就可以去创业？”我一直在琢磨类似的问题。我自己写过十年程序，也在金山管理过一千多人的研发队伍，最近也在做天使投资，仔细总结了如下五点建议与所有程序员分享。\n\n建议一：只有真正喜欢才能写好程序\n喜欢写程序，做程序员就是上天堂；\n\n不喜欢写程序，做程序员就是下地狱；\n\n程序员需要整天趴在电脑前，经常没日没夜的，非常辛苦，而且工作来不得半点虚假，少写一个标点符号都不行。喜欢的人，日子过得非常开心，每写一行代码，都会有新的成就，尤其当自己的作品被广泛应用的时候，那种自豪感油然而起。不喜欢的人，坐在电脑前极端无聊，被进度压得喘不过气来，天天为找bug改bug生气。\n\n只有喜欢，只有热爱，才能把程序写好！\n\n我建议不喜欢写程序的人早点转行，不要勉强自己，免得误人误己。\n\n建议二：把程序当艺术品，像写诗一样来写代码\n现在很少有公司做code review（对写好的程序做代码级检查），于是很多人在进度的压力下潦草应付，只要测试通过就算搞定。表面上看，开发速度很快，进度有保障；但实际上，这样的程序连开发者自己都很难读懂，一旦有bug，很难调试，将来维护升级都非常困难。这样的代码多半只能重写，浪费自然严重。\n\n如果每个人写程序的时候当艺术品来写，写每行都认认真真、干干净净的，虽然速度略微慢了一点，但综合的开发成本会低很多。\n\n如何写像诗一样美的代码呢？方法也很简单。\n\n一、买几本经典的编程书，把书上所有例程全部重新写一遍，逐个比较和书上范例的差距，一步一步改善自己编程的风格和技巧。时间长了，自然就能写出象书上例程一样的代码，甚至可以比书上写得好。\n\n二、基础扎实后，多看看Linux等系统级的源代码，看看高手是如何写的，就有感觉了。\n\n三、通读一下MSDN中所有的资料，这样，“读书破万卷，下笔如有神”。\n\n还有，一定要牢记软件工程的铁律：可能出错的地方一定会出错。每个变量都做初始化，引用每个参数都会做有效性检查，在可能出错的每个地方都会做边界条件检查，这样开发出来的程序一定会稳固很多，就是出错也会很容易修改。野路子出来的高手，一般开发速度很快，但做完后bug很多，经常需要很长时间修改。而真正的高手，追求的境界是bugfreecode（零缺陷代码）。\n\n建议三：必须写够十万行代码，不要心存侥幸\n程序员象木工一样，熟能生巧。程序员必须写足够代码量的程序，才会有感觉，这是一个苦力活，没有任何捷径可走。\n\n计算机是一门实践性的科学，没有动手能力做支撑，很难做出好的科研成果。我的一个学长是美国卡内基梅隆大学的博士，卡内基梅隆大学计算机系在全世界非常出名，他说每个博士生必须写十万行代码才能毕业，卡内基梅隆大学博士进任何一个大企业基本不用面试。而国内培养的大部分研究生、博士生，动手能力都偏弱。\n\n没有写过足够代码量的，想成为高手是不可能的，只能纸上谈兵！\n\n建议四：时刻保持好奇心\n计算机技术更新换代非常快，每年都有各种各样的新技术出现。在我过去的职业生涯中，仅编程语言，我就用过basic、masm、pascal、c++、vba、Delphi、java等。需要时刻保持好奇心，不断学习各种新的东西，才能在未来的几十年职业生涯中不落伍。你要理解为什么iPhone出来很多高手用iPhone，现在一天到晚惦记着换部IPhone玩玩。\n\n人的精力有限，高手往往工作压力也比较大，如何在有限的时间内掌握整个行业动态，的确是一个不简单的事情。我的经验是经常看业内的各种技术杂志，参加各种聚会，可以节约很多时间。最重要的是，交几个博学的技术高手，多和他们交流，一定获益匪浅！\n\n建议五：不要局限在技术本身，多花点精力关注用户\n做到前面几条，就已经是千金难求的高手了。但一个真正的高手需要知道用户需要什么，如何做出让用户满意的产品。\n\n现在的软件研发越来越强烈团队协作，不少团队都配置了专门的需求分析的工程师、用户界面及用户体验的设计师，软件研发的分工越来越细。很多程序员以为只要把技术搞好，不用管用户需求和用户体验。实际上，需求方案及界面方案不可能写得非常细，具体的实施还是程序员自己来实现的。这个时候，好坏的差距很快就体现出来了。\n\n我们写程序的最终目的是满足用户需求，不是简单完成需求规划方案中的功能。所以，程序员一定要认真揣摩用户心理，能明白用户的真实需求。\n\n其次，怎么设计交互界面，让用户觉得好用，用起来舒服，这里面学问很大。我举一个小例子，每个程序窗口右上角都有三个按钮，如最小化、关闭等。乔布斯觉得不好看，不易用，他提出改用红绿蓝的交通灯。这样修改后，果然MacOS漂亮和易用了很多。\n\n目前互联网和手机上的应用开发，都非常强调小团队研发。这样研发模式速度会快很多，但对程序员的综合素质的要求也就更高了。\n\n我强烈建议程序员不要仅仅局限在技术本事，还需要多点精力考虑和用户相关的问题，学会洞察用户的需求，并努力设计好用易用的产品。做着这点的程序高手，创业成算就很大了。\n\n这样的技术高手，如果捕捉到合适的产品方向，并且具备一定带团队的能力，创业成功机会很大！事实上，绝大部分创业的技术公司，创始人都是这样的人！","source":"_posts/Spring-Cloud在国内中小型公司能用起来吗？ - 副本 (5).md","raw":"每个IT企业，尤其是初创企业，非常苦恼：找不到好的程序员。现在大学、软件学院及各种培训机构，每年培养几十万的程序员，毕业的每个人都有同样困恼：找不到好的工作。问题出在哪里呢？其实，企业需要的是不是刚会写程序的人，需要来了就能干活的人，尤其能把活干好的人。而刚毕业的大学生多半刚学会如何写程序，的确很难企业需求。\n\n企业到底需要什么样的程序员，一个刚入门的程序员如何成为企业需要的高手呢？还有很多程序员问我，“我需要具备什么样的能力就可以去创业？”我一直在琢磨类似的问题。我自己写过十年程序，也在金山管理过一千多人的研发队伍，最近也在做天使投资，仔细总结了如下五点建议与所有程序员分享。\n\n建议一：只有真正喜欢才能写好程序\n喜欢写程序，做程序员就是上天堂；\n\n不喜欢写程序，做程序员就是下地狱；\n\n程序员需要整天趴在电脑前，经常没日没夜的，非常辛苦，而且工作来不得半点虚假，少写一个标点符号都不行。喜欢的人，日子过得非常开心，每写一行代码，都会有新的成就，尤其当自己的作品被广泛应用的时候，那种自豪感油然而起。不喜欢的人，坐在电脑前极端无聊，被进度压得喘不过气来，天天为找bug改bug生气。\n\n只有喜欢，只有热爱，才能把程序写好！\n\n我建议不喜欢写程序的人早点转行，不要勉强自己，免得误人误己。\n\n建议二：把程序当艺术品，像写诗一样来写代码\n现在很少有公司做code review（对写好的程序做代码级检查），于是很多人在进度的压力下潦草应付，只要测试通过就算搞定。表面上看，开发速度很快，进度有保障；但实际上，这样的程序连开发者自己都很难读懂，一旦有bug，很难调试，将来维护升级都非常困难。这样的代码多半只能重写，浪费自然严重。\n\n如果每个人写程序的时候当艺术品来写，写每行都认认真真、干干净净的，虽然速度略微慢了一点，但综合的开发成本会低很多。\n\n如何写像诗一样美的代码呢？方法也很简单。\n\n一、买几本经典的编程书，把书上所有例程全部重新写一遍，逐个比较和书上范例的差距，一步一步改善自己编程的风格和技巧。时间长了，自然就能写出象书上例程一样的代码，甚至可以比书上写得好。\n\n二、基础扎实后，多看看Linux等系统级的源代码，看看高手是如何写的，就有感觉了。\n\n三、通读一下MSDN中所有的资料，这样，“读书破万卷，下笔如有神”。\n\n还有，一定要牢记软件工程的铁律：可能出错的地方一定会出错。每个变量都做初始化，引用每个参数都会做有效性检查，在可能出错的每个地方都会做边界条件检查，这样开发出来的程序一定会稳固很多，就是出错也会很容易修改。野路子出来的高手，一般开发速度很快，但做完后bug很多，经常需要很长时间修改。而真正的高手，追求的境界是bugfreecode（零缺陷代码）。\n\n建议三：必须写够十万行代码，不要心存侥幸\n程序员象木工一样，熟能生巧。程序员必须写足够代码量的程序，才会有感觉，这是一个苦力活，没有任何捷径可走。\n\n计算机是一门实践性的科学，没有动手能力做支撑，很难做出好的科研成果。我的一个学长是美国卡内基梅隆大学的博士，卡内基梅隆大学计算机系在全世界非常出名，他说每个博士生必须写十万行代码才能毕业，卡内基梅隆大学博士进任何一个大企业基本不用面试。而国内培养的大部分研究生、博士生，动手能力都偏弱。\n\n没有写过足够代码量的，想成为高手是不可能的，只能纸上谈兵！\n\n建议四：时刻保持好奇心\n计算机技术更新换代非常快，每年都有各种各样的新技术出现。在我过去的职业生涯中，仅编程语言，我就用过basic、masm、pascal、c++、vba、Delphi、java等。需要时刻保持好奇心，不断学习各种新的东西，才能在未来的几十年职业生涯中不落伍。你要理解为什么iPhone出来很多高手用iPhone，现在一天到晚惦记着换部IPhone玩玩。\n\n人的精力有限，高手往往工作压力也比较大，如何在有限的时间内掌握整个行业动态，的确是一个不简单的事情。我的经验是经常看业内的各种技术杂志，参加各种聚会，可以节约很多时间。最重要的是，交几个博学的技术高手，多和他们交流，一定获益匪浅！\n\n建议五：不要局限在技术本身，多花点精力关注用户\n做到前面几条，就已经是千金难求的高手了。但一个真正的高手需要知道用户需要什么，如何做出让用户满意的产品。\n\n现在的软件研发越来越强烈团队协作，不少团队都配置了专门的需求分析的工程师、用户界面及用户体验的设计师，软件研发的分工越来越细。很多程序员以为只要把技术搞好，不用管用户需求和用户体验。实际上，需求方案及界面方案不可能写得非常细，具体的实施还是程序员自己来实现的。这个时候，好坏的差距很快就体现出来了。\n\n我们写程序的最终目的是满足用户需求，不是简单完成需求规划方案中的功能。所以，程序员一定要认真揣摩用户心理，能明白用户的真实需求。\n\n其次，怎么设计交互界面，让用户觉得好用，用起来舒服，这里面学问很大。我举一个小例子，每个程序窗口右上角都有三个按钮，如最小化、关闭等。乔布斯觉得不好看，不易用，他提出改用红绿蓝的交通灯。这样修改后，果然MacOS漂亮和易用了很多。\n\n目前互联网和手机上的应用开发，都非常强调小团队研发。这样研发模式速度会快很多，但对程序员的综合素质的要求也就更高了。\n\n我强烈建议程序员不要仅仅局限在技术本事，还需要多点精力考虑和用户相关的问题，学会洞察用户的需求，并努力设计好用易用的产品。做着这点的程序高手，创业成算就很大了。\n\n这样的技术高手，如果捕捉到合适的产品方向，并且具备一定带团队的能力，创业成功机会很大！事实上，绝大部分创业的技术公司，创始人都是这样的人！","slug":"Spring-Cloud在国内中小型公司能用起来吗？ - 副本 (5)","published":1,"date":"2018-03-02T03:30:35.351Z","updated":"2018-03-02T03:27:50.610Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cje9e5cy30006k0okj412uxl6","content":"<p>每个IT企业，尤其是初创企业，非常苦恼：找不到好的程序员。现在大学、软件学院及各种培训机构，每年培养几十万的程序员，毕业的每个人都有同样困恼：找不到好的工作。问题出在哪里呢？其实，企业需要的是不是刚会写程序的人，需要来了就能干活的人，尤其能把活干好的人。而刚毕业的大学生多半刚学会如何写程序，的确很难企业需求。</p>\n<p>企业到底需要什么样的程序员，一个刚入门的程序员如何成为企业需要的高手呢？还有很多程序员问我，“我需要具备什么样的能力就可以去创业？”我一直在琢磨类似的问题。我自己写过十年程序，也在金山管理过一千多人的研发队伍，最近也在做天使投资，仔细总结了如下五点建议与所有程序员分享。</p>\n<p>建议一：只有真正喜欢才能写好程序<br>喜欢写程序，做程序员就是上天堂；</p>\n<p>不喜欢写程序，做程序员就是下地狱；</p>\n<p>程序员需要整天趴在电脑前，经常没日没夜的，非常辛苦，而且工作来不得半点虚假，少写一个标点符号都不行。喜欢的人，日子过得非常开心，每写一行代码，都会有新的成就，尤其当自己的作品被广泛应用的时候，那种自豪感油然而起。不喜欢的人，坐在电脑前极端无聊，被进度压得喘不过气来，天天为找bug改bug生气。</p>\n<p>只有喜欢，只有热爱，才能把程序写好！</p>\n<p>我建议不喜欢写程序的人早点转行，不要勉强自己，免得误人误己。</p>\n<p>建议二：把程序当艺术品，像写诗一样来写代码<br>现在很少有公司做code review（对写好的程序做代码级检查），于是很多人在进度的压力下潦草应付，只要测试通过就算搞定。表面上看，开发速度很快，进度有保障；但实际上，这样的程序连开发者自己都很难读懂，一旦有bug，很难调试，将来维护升级都非常困难。这样的代码多半只能重写，浪费自然严重。</p>\n<p>如果每个人写程序的时候当艺术品来写，写每行都认认真真、干干净净的，虽然速度略微慢了一点，但综合的开发成本会低很多。</p>\n<p>如何写像诗一样美的代码呢？方法也很简单。</p>\n<p>一、买几本经典的编程书，把书上所有例程全部重新写一遍，逐个比较和书上范例的差距，一步一步改善自己编程的风格和技巧。时间长了，自然就能写出象书上例程一样的代码，甚至可以比书上写得好。</p>\n<p>二、基础扎实后，多看看Linux等系统级的源代码，看看高手是如何写的，就有感觉了。</p>\n<p>三、通读一下MSDN中所有的资料，这样，“读书破万卷，下笔如有神”。</p>\n<p>还有，一定要牢记软件工程的铁律：可能出错的地方一定会出错。每个变量都做初始化，引用每个参数都会做有效性检查，在可能出错的每个地方都会做边界条件检查，这样开发出来的程序一定会稳固很多，就是出错也会很容易修改。野路子出来的高手，一般开发速度很快，但做完后bug很多，经常需要很长时间修改。而真正的高手，追求的境界是bugfreecode（零缺陷代码）。</p>\n<p>建议三：必须写够十万行代码，不要心存侥幸<br>程序员象木工一样，熟能生巧。程序员必须写足够代码量的程序，才会有感觉，这是一个苦力活，没有任何捷径可走。</p>\n<p>计算机是一门实践性的科学，没有动手能力做支撑，很难做出好的科研成果。我的一个学长是美国卡内基梅隆大学的博士，卡内基梅隆大学计算机系在全世界非常出名，他说每个博士生必须写十万行代码才能毕业，卡内基梅隆大学博士进任何一个大企业基本不用面试。而国内培养的大部分研究生、博士生，动手能力都偏弱。</p>\n<p>没有写过足够代码量的，想成为高手是不可能的，只能纸上谈兵！</p>\n<p>建议四：时刻保持好奇心<br>计算机技术更新换代非常快，每年都有各种各样的新技术出现。在我过去的职业生涯中，仅编程语言，我就用过basic、masm、pascal、c++、vba、Delphi、java等。需要时刻保持好奇心，不断学习各种新的东西，才能在未来的几十年职业生涯中不落伍。你要理解为什么iPhone出来很多高手用iPhone，现在一天到晚惦记着换部IPhone玩玩。</p>\n<p>人的精力有限，高手往往工作压力也比较大，如何在有限的时间内掌握整个行业动态，的确是一个不简单的事情。我的经验是经常看业内的各种技术杂志，参加各种聚会，可以节约很多时间。最重要的是，交几个博学的技术高手，多和他们交流，一定获益匪浅！</p>\n<p>建议五：不要局限在技术本身，多花点精力关注用户<br>做到前面几条，就已经是千金难求的高手了。但一个真正的高手需要知道用户需要什么，如何做出让用户满意的产品。</p>\n<p>现在的软件研发越来越强烈团队协作，不少团队都配置了专门的需求分析的工程师、用户界面及用户体验的设计师，软件研发的分工越来越细。很多程序员以为只要把技术搞好，不用管用户需求和用户体验。实际上，需求方案及界面方案不可能写得非常细，具体的实施还是程序员自己来实现的。这个时候，好坏的差距很快就体现出来了。</p>\n<p>我们写程序的最终目的是满足用户需求，不是简单完成需求规划方案中的功能。所以，程序员一定要认真揣摩用户心理，能明白用户的真实需求。</p>\n<p>其次，怎么设计交互界面，让用户觉得好用，用起来舒服，这里面学问很大。我举一个小例子，每个程序窗口右上角都有三个按钮，如最小化、关闭等。乔布斯觉得不好看，不易用，他提出改用红绿蓝的交通灯。这样修改后，果然MacOS漂亮和易用了很多。</p>\n<p>目前互联网和手机上的应用开发，都非常强调小团队研发。这样研发模式速度会快很多，但对程序员的综合素质的要求也就更高了。</p>\n<p>我强烈建议程序员不要仅仅局限在技术本事，还需要多点精力考虑和用户相关的问题，学会洞察用户的需求，并努力设计好用易用的产品。做着这点的程序高手，创业成算就很大了。</p>\n<p>这样的技术高手，如果捕捉到合适的产品方向，并且具备一定带团队的能力，创业成功机会很大！事实上，绝大部分创业的技术公司，创始人都是这样的人！</p>\n","site":{"data":{}},"excerpt":"","more":"<p>每个IT企业，尤其是初创企业，非常苦恼：找不到好的程序员。现在大学、软件学院及各种培训机构，每年培养几十万的程序员，毕业的每个人都有同样困恼：找不到好的工作。问题出在哪里呢？其实，企业需要的是不是刚会写程序的人，需要来了就能干活的人，尤其能把活干好的人。而刚毕业的大学生多半刚学会如何写程序，的确很难企业需求。</p>\n<p>企业到底需要什么样的程序员，一个刚入门的程序员如何成为企业需要的高手呢？还有很多程序员问我，“我需要具备什么样的能力就可以去创业？”我一直在琢磨类似的问题。我自己写过十年程序，也在金山管理过一千多人的研发队伍，最近也在做天使投资，仔细总结了如下五点建议与所有程序员分享。</p>\n<p>建议一：只有真正喜欢才能写好程序<br>喜欢写程序，做程序员就是上天堂；</p>\n<p>不喜欢写程序，做程序员就是下地狱；</p>\n<p>程序员需要整天趴在电脑前，经常没日没夜的，非常辛苦，而且工作来不得半点虚假，少写一个标点符号都不行。喜欢的人，日子过得非常开心，每写一行代码，都会有新的成就，尤其当自己的作品被广泛应用的时候，那种自豪感油然而起。不喜欢的人，坐在电脑前极端无聊，被进度压得喘不过气来，天天为找bug改bug生气。</p>\n<p>只有喜欢，只有热爱，才能把程序写好！</p>\n<p>我建议不喜欢写程序的人早点转行，不要勉强自己，免得误人误己。</p>\n<p>建议二：把程序当艺术品，像写诗一样来写代码<br>现在很少有公司做code review（对写好的程序做代码级检查），于是很多人在进度的压力下潦草应付，只要测试通过就算搞定。表面上看，开发速度很快，进度有保障；但实际上，这样的程序连开发者自己都很难读懂，一旦有bug，很难调试，将来维护升级都非常困难。这样的代码多半只能重写，浪费自然严重。</p>\n<p>如果每个人写程序的时候当艺术品来写，写每行都认认真真、干干净净的，虽然速度略微慢了一点，但综合的开发成本会低很多。</p>\n<p>如何写像诗一样美的代码呢？方法也很简单。</p>\n<p>一、买几本经典的编程书，把书上所有例程全部重新写一遍，逐个比较和书上范例的差距，一步一步改善自己编程的风格和技巧。时间长了，自然就能写出象书上例程一样的代码，甚至可以比书上写得好。</p>\n<p>二、基础扎实后，多看看Linux等系统级的源代码，看看高手是如何写的，就有感觉了。</p>\n<p>三、通读一下MSDN中所有的资料，这样，“读书破万卷，下笔如有神”。</p>\n<p>还有，一定要牢记软件工程的铁律：可能出错的地方一定会出错。每个变量都做初始化，引用每个参数都会做有效性检查，在可能出错的每个地方都会做边界条件检查，这样开发出来的程序一定会稳固很多，就是出错也会很容易修改。野路子出来的高手，一般开发速度很快，但做完后bug很多，经常需要很长时间修改。而真正的高手，追求的境界是bugfreecode（零缺陷代码）。</p>\n<p>建议三：必须写够十万行代码，不要心存侥幸<br>程序员象木工一样，熟能生巧。程序员必须写足够代码量的程序，才会有感觉，这是一个苦力活，没有任何捷径可走。</p>\n<p>计算机是一门实践性的科学，没有动手能力做支撑，很难做出好的科研成果。我的一个学长是美国卡内基梅隆大学的博士，卡内基梅隆大学计算机系在全世界非常出名，他说每个博士生必须写十万行代码才能毕业，卡内基梅隆大学博士进任何一个大企业基本不用面试。而国内培养的大部分研究生、博士生，动手能力都偏弱。</p>\n<p>没有写过足够代码量的，想成为高手是不可能的，只能纸上谈兵！</p>\n<p>建议四：时刻保持好奇心<br>计算机技术更新换代非常快，每年都有各种各样的新技术出现。在我过去的职业生涯中，仅编程语言，我就用过basic、masm、pascal、c++、vba、Delphi、java等。需要时刻保持好奇心，不断学习各种新的东西，才能在未来的几十年职业生涯中不落伍。你要理解为什么iPhone出来很多高手用iPhone，现在一天到晚惦记着换部IPhone玩玩。</p>\n<p>人的精力有限，高手往往工作压力也比较大，如何在有限的时间内掌握整个行业动态，的确是一个不简单的事情。我的经验是经常看业内的各种技术杂志，参加各种聚会，可以节约很多时间。最重要的是，交几个博学的技术高手，多和他们交流，一定获益匪浅！</p>\n<p>建议五：不要局限在技术本身，多花点精力关注用户<br>做到前面几条，就已经是千金难求的高手了。但一个真正的高手需要知道用户需要什么，如何做出让用户满意的产品。</p>\n<p>现在的软件研发越来越强烈团队协作，不少团队都配置了专门的需求分析的工程师、用户界面及用户体验的设计师，软件研发的分工越来越细。很多程序员以为只要把技术搞好，不用管用户需求和用户体验。实际上，需求方案及界面方案不可能写得非常细，具体的实施还是程序员自己来实现的。这个时候，好坏的差距很快就体现出来了。</p>\n<p>我们写程序的最终目的是满足用户需求，不是简单完成需求规划方案中的功能。所以，程序员一定要认真揣摩用户心理，能明白用户的真实需求。</p>\n<p>其次，怎么设计交互界面，让用户觉得好用，用起来舒服，这里面学问很大。我举一个小例子，每个程序窗口右上角都有三个按钮，如最小化、关闭等。乔布斯觉得不好看，不易用，他提出改用红绿蓝的交通灯。这样修改后，果然MacOS漂亮和易用了很多。</p>\n<p>目前互联网和手机上的应用开发，都非常强调小团队研发。这样研发模式速度会快很多，但对程序员的综合素质的要求也就更高了。</p>\n<p>我强烈建议程序员不要仅仅局限在技术本事，还需要多点精力考虑和用户相关的问题，学会洞察用户的需求，并努力设计好用易用的产品。做着这点的程序高手，创业成算就很大了。</p>\n<p>这样的技术高手，如果捕捉到合适的产品方向，并且具备一定带团队的能力，创业成功机会很大！事实上，绝大部分创业的技术公司，创始人都是这样的人！</p>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2018-03-01T11:58:49.221Z","updated":"2018-03-01T11:58:49.221Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cje9e5cyt0007k0ok7ax864jp","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"从比特币说开去","date":"2018-03-02T03:33:14.000Z","_content":"thumbnail: http://www.ityouknow.com/assets/images/2017/springcloud/springcloud-question.png\n![](http://www.ityouknow.com/assets/images/2017/springcloud/springcloud-question.png)\n\n少时诵诗书所","source":"_posts/从比特币说开去.md","raw":"---\ntitle: 从比特币说开去\ndate: 2018-03-02 11:33:14\ntags:\n---\nthumbnail: http://www.ityouknow.com/assets/images/2017/springcloud/springcloud-question.png\n![](http://www.ityouknow.com/assets/images/2017/springcloud/springcloud-question.png)\n\n少时诵诗书所","slug":"从比特币说开去","published":1,"updated":"2018-03-02T03:58:45.556Z","_id":"cje9e9p8a0000wwokplhv9v2v","comments":1,"layout":"post","photos":[],"link":"","content":"<p>thumbnail: <a href=\"http://www.ityouknow.com/assets/images/2017/springcloud/springcloud-question.png\" target=\"_blank\" rel=\"noopener\">http://www.ityouknow.com/assets/images/2017/springcloud/springcloud-question.png</a><br><img src=\"http://www.ityouknow.com/assets/images/2017/springcloud/springcloud-question.png\" alt=\"\"></p>\n<p>少时诵诗书所</p>\n","site":{"data":{}},"excerpt":"","more":"<p>thumbnail: <a href=\"http://www.ityouknow.com/assets/images/2017/springcloud/springcloud-question.png\" target=\"_blank\" rel=\"noopener\">http://www.ityouknow.com/assets/images/2017/springcloud/springcloud-question.png</a><br><img src=\"http://www.ityouknow.com/assets/images/2017/springcloud/springcloud-question.png\" alt=\"\"></p>\n<p>少时诵诗书所</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}